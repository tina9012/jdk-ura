Test case for issue #2173: https://github.com/typetools/checker-framework/issues/2173

ImporterManager.class was compiled using a Java 8 compiler.  The compiler copied
the annotation from a lambda to a method parameter type argument, but the
parameter does not have a type argument.  This bug has been fixed in Java 9,
but bytecode generated by Java 8 can still be read by a checker, so this tests
that it won't crash a checker.
ImporterManager.java.tmp is the source for the .class files in this folder;
it uses the .tmp extension to ensure javac doesn't use the source file instead
of the bytecode.
View.out is the expected output. We are running the Nullness Checker, which in turn
runs the KeyFor and NullnessNoInit Checkers as subcheckers. We thus have three
warnings because every checker complains about the unexpected type argument
annotation.
