2 -> 3
3 -> 0

2:
Before: InitializationStore#3(
  initialized fields = [])
~~~~~~~~~
<entry>

3:
Before: InitializationStore#3(
  initialized fields = [])
~~~~~~~~~
""   [ StringLiteral ]    > CFAV{@Initialized, String}
(this).sf = ""   [ Assignment ]    > CFAV{@Initialized, String}

0:
Before: InitializationStore#4(
  Issue5174Super<S>.sf > CFAV{@Initialized, String}
  initialized fields = [sf])
~~~~~~~~~
<exit>
7 -> 8
8 -> 5

7:
Before: InitializationStore#8(
  in > CFAV{, S}
  Issue5174Super<S>.sf > CFAV{@Initialized, Object}
  this.f > CFAV{, S}
  initialized fields = [f, sf])
~~~~~~~~~
<entry>

8:
Before: InitializationStore#8(
  in > CFAV{, S}
  Issue5174Super<S>.sf > CFAV{@Initialized, Object}
  this.f > CFAV{, S}
  initialized fields = [f, sf])
~~~~~~~~~
in   [ LocalVariable ]    > CFAV{, S}
return in   [ Return ]

5:
Before: InitializationStore#9(
  in > CFAV{, S}
  Issue5174Super<S>.sf > CFAV{@Initialized, Object}
  this.f > CFAV{, S}
  initialized fields = [f, sf])
~~~~~~~~~
<exit>
13 -> 14
14 -> 15
15 -> 16
15 -> 12
15 -> 12
16 -> 11

13:
Before: InitializationStore#13(
  f > CFAV{, S}
  Issue5174Super<S>.sf > CFAV{@Initialized, Object}
  initialized fields = [sf])
~~~~~~~~~
<entry>

14:
Before: InitializationStore#13(
  f > CFAV{, S}
  Issue5174Super<S>.sf > CFAV{@Initialized, Object}
  initialized fields = [sf])
~~~~~~~~~
(this)   [ ImplicitThis ]
(this).<init>   [ MethodAccess ]    > CFAV{@UnderInitialization, Issue5174Super}

15:
Before: InitializationStore#14(
  f > CFAV{, S}
  Issue5174Super<S>.sf > CFAV{@Initialized, Object}
  initialized fields = [sf])
~~~~~~~~~
(this).<init>()   [ MethodInvocation ]    > CFAV{@UnderInitialization, Object}

16:
Before: then=InitializationStore#15(
  f > CFAV{, S}
  Issue5174Super<S>.sf > CFAV{@Initialized, Object}
  this.<init>() > CFAV{@UnderInitialization, Object}
  initialized fields = [sf]),
else=InitializationStore#16(
  f > CFAV{, S}
  Issue5174Super<S>.sf > CFAV{@Initialized, Object}
  this.<init>() > CFAV{@UnderInitialization, Object}
  initialized fields = [sf])
~~~~~~~~~
expression statement super()   [ ExpressionStatement ]
this   [ ExplicitThis ]    > CFAV{@UnderInitialization, Issue5174Super}
f   [ LocalVariable ]    > CFAV{, S}
this.f   [ FieldAccess ]
this.f = f   [ Assignment ]    > CFAV{, S}
expression statement this.f = f   [ ExpressionStatement ]

12:
Before: InitializationStore#17(
  f > CFAV{, S}
  Issue5174Super<S>.sf > CFAV{@Initialized, Object}
  initialized fields = [sf])
~~~~~~~~~
<exceptional-exit>

11:
Before: InitializationStore#22(
  f > CFAV{, S}
  Issue5174Super<S>.sf > CFAV{@Initialized, Object}
  this.f > CFAV{, S}
  initialized fields = [f, sf])
~~~~~~~~~
<exit>
2 -> 3
3 -> 0

2:
Before: NullnessNoInitStore#32(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<entry>

3:
Before: NullnessNoInitStore#32(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
""   [ StringLiteral ]    > NV{@NonNull, String, poly nn/n=f/f}
(this).sf = ""   [ Assignment ]    > NV{@NonNull, String, poly nn/n=f/f}

0:
Before: NullnessNoInitStore#33(
  Issue5174Super<S>.sf > NV{@NonNull, String, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exit>
7 -> 8
8 -> 5

7:
Before: NullnessNoInitStore#37(
  in > NV{, S, poly nn/n=f/f}
  Issue5174Super<S>.sf > NV{@NonNull, Object, poly nn/n=f/f}
  this.f > NV{, S, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<entry>

8:
Before: NullnessNoInitStore#37(
  in > NV{, S, poly nn/n=f/f}
  Issue5174Super<S>.sf > NV{@NonNull, Object, poly nn/n=f/f}
  this.f > NV{, S, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
in   [ LocalVariable ]    > NV{, S, poly nn/n=f/f}
return in   [ Return ]    > NV{@NonNull, boolean, poly nn/n=f/f}

5:
Before: NullnessNoInitStore#38(
  in > NV{, S, poly nn/n=f/f}
  Issue5174Super<S>.sf > NV{@NonNull, Object, poly nn/n=f/f}
  this.f > NV{, S, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exit>
13 -> 14
14 -> 15
15 -> 16
15 -> 12
15 -> 12
16 -> 11

13:
Before: NullnessNoInitStore#42(
  f > NV{, S, poly nn/n=f/f}
  Issue5174Super<S>.sf > NV{@NonNull, Object, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<entry>

14:
Before: NullnessNoInitStore#42(
  f > NV{, S, poly nn/n=f/f}
  Issue5174Super<S>.sf > NV{@NonNull, Object, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
(this)   [ ImplicitThis ]
(this).<init>   [ MethodAccess ]    > NV{@NonNull, Issue5174Super, poly nn/n=f/f}

15:
Before: NullnessNoInitStore#43(
  f > NV{, S, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Super, poly nn/n=f/f}
  Issue5174Super<S>.sf > NV{@NonNull, Object, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
(this).<init>()   [ MethodInvocation ]    > NV{@NonNull, Object, poly nn/n=f/f}

16:
Before: then=NullnessNoInitStore#44(
  f > NV{, S, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Super, poly nn/n=f/f}
  Issue5174Super<S>.sf > NV{@NonNull, Object, poly nn/n=f/f}
  this.<init>() > NV{@NonNull, Object, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false),
else=NullnessNoInitStore#45(
  f > NV{, S, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Super, poly nn/n=f/f}
  Issue5174Super<S>.sf > NV{@NonNull, Object, poly nn/n=f/f}
  this.<init>() > NV{@NonNull, Object, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
expression statement super()   [ ExpressionStatement ]
this   [ ExplicitThis ]    > NV{@NonNull, Issue5174Super, poly nn/n=f/f}
f   [ LocalVariable ]    > NV{, S, poly nn/n=f/f}
this.f   [ FieldAccess ]
this.f = f   [ Assignment ]    > NV{, S, poly nn/n=f/f}
expression statement this.f = f   [ ExpressionStatement ]

12:
Before: NullnessNoInitStore#46(
  f > NV{, S, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Super, poly nn/n=f/f}
  Issue5174Super<S>.sf > NV{@NonNull, Object, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exceptional-exit>

11:
Before: NullnessNoInitStore#51(
  f > NV{, S, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Super, poly nn/n=f/f}
  Issue5174Super<S>.sf > NV{@NonNull, Object, poly nn/n=f/f}
  this.f > NV{, S, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exit>
20 -> 21
21 -> 22
22 -> 23
22 -> 19
22 -> 19
23 -> 18

20:
Before: InitializationStore#63(
  f > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
<entry>

21:
Before: InitializationStore#63(
  f > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
(this)   [ ImplicitThis ]
(this).<init>   [ MethodAccess ]    > CFAV{@UnderInitialization(Issue5174Sub.class), Issue5174Sub}
f   [ LocalVariable ]    > CFAV{, T}

22:
Before: InitializationStore#64(
  f > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
(this).<init>(f)   [ MethodInvocation ]    > CFAV{@UnderInitialization, Issue5174Super}

23:
Before: then=InitializationStore#65(
  f > CFAV{, T}
  initialized fields = [f, sf]),
else=InitializationStore#66(
  f > CFAV{, T}
  initialized fields = [f, sf])
~~~~~~~~~
expression statement super(f)   [ ExpressionStatement ]

19:
Before: InitializationStore#67(
  f > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
<exceptional-exit>

18:
Before: InitializationStore#72(
  f > CFAV{, T}
  initialized fields = [f, sf])
~~~~~~~~~
<exit>
27 -> 28
28 -> 29
29 -> 30
29 -> 26
29 -> 26
30 -> 25

27:
Before: InitializationStore#79(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
<entry>

28:
Before: InitializationStore#79(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
o   [ VariableDeclaration ]
(this)   [ ImplicitThis ]
(this).methodInner   [ MethodAccess ]
in   [ LocalVariable ]    > CFAV{, T}

29:
Before: InitializationStore#80(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
(this).methodInner(in)   [ MethodInvocation ]    > CFAV{, T}

30:
Before: then=InitializationStore#81(
  in > CFAV{, T}
  initialized fields = []),
else=InitializationStore#82(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
o = (this).methodInner(in)   [ Assignment ]    > CFAV{, T}

26:
Before: InitializationStore#83(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
<exceptional-exit>

25:
Before: InitializationStore#88(
  in > CFAV{, T}
  o > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
<exit>
34 -> 35
35 -> 36
36 -> 37
36 -> 33
36 -> 33
37 -> 32

34:
Before: InitializationStore#95(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
<entry>

35:
Before: InitializationStore#95(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
o   [ VariableDeclaration ]
this   [ ExplicitThis ]    > CFAV{@Initialized, Issue5174Sub}
this.methodInner   [ MethodAccess ]
in   [ LocalVariable ]    > CFAV{, T}

36:
Before: InitializationStore#96(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
this.methodInner(in)   [ MethodInvocation ]    > CFAV{, T}

37:
Before: then=InitializationStore#97(
  in > CFAV{, T}
  initialized fields = []),
else=InitializationStore#98(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
o = this.methodInner(in)   [ Assignment ]    > CFAV{, T}

33:
Before: InitializationStore#99(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
<exceptional-exit>

32:
Before: InitializationStore#104(
  in > CFAV{, T}
  o > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
<exit>
41 -> 42
42 -> 39

41:
Before: InitializationStore#111(
  initialized fields = [])
~~~~~~~~~
<entry>

42:
Before: InitializationStore#111(
  initialized fields = [])
~~~~~~~~~
o   [ VariableDeclaration ]
(this)   [ ImplicitThis ]
(this).f   [ FieldAccess ]    > CFAV{, T}
o = (this).f   [ Assignment ]    > CFAV{, T}

39:
Before: InitializationStore#112(
  o > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
<exit>
46 -> 47
47 -> 44

46:
Before: InitializationStore#116(
  initialized fields = [])
~~~~~~~~~
<entry>

47:
Before: InitializationStore#116(
  initialized fields = [])
~~~~~~~~~
o   [ VariableDeclaration ]
this   [ ExplicitThis ]    > CFAV{@Initialized, Issue5174Sub}
this.f   [ FieldAccess ]    > CFAV{, T}
o = this.f   [ Assignment ]    > CFAV{, T}

44:
Before: InitializationStore#117(
  o > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
<exit>
51 -> 52
52 -> 53
53 -> 54
53 -> 50
53 -> 50
53 -> 50
53 -> 50
54 -> 55
55 -> 56
55 -> 50
55 -> 50
55 -> 50
55 -> 50
56 -> 57
57 -> 58
57 -> 50
57 -> 50
57 -> 50
57 -> 50
58 -> 49

51:
Before: InitializationStore#121(
  initialized fields = [])
~~~~~~~~~
<entry>

52:
Before: InitializationStore#121(
  initialized fields = [])
~~~~~~~~~
o   [ VariableDeclaration ]
o   [ LocalVariable ]

53:
Before: InitializationStore#122(
  initialized fields = [])
~~~~~~~~~
Issue5174Super   [ ClassName ]

54:
Before: InitializationStore#123(
  initialized fields = [])
~~~~~~~~~
Issue5174Super.sf   [ FieldAccess ]    > CFAV{@Initialized, Object}
o = Issue5174Super.sf   [ Assignment ]    > CFAV{@Initialized, Object}
expression statement o = sf   [ ExpressionStatement ]
o   [ LocalVariable ]

50:
Before: InitializationStore#124(
  initialized fields = [])
~~~~~~~~~
<exceptional-exit>

55:
Before: InitializationStore#131(
  o > CFAV{@Initialized, Object}
  initialized fields = [])
~~~~~~~~~
Issue5174Sub   [ ClassName ]    > CFAV{@Initialized, Issue5174Sub}

56:
Before: InitializationStore#132(
  o > CFAV{@Initialized, Object}
  initialized fields = [])
~~~~~~~~~
Issue5174Sub.sf   [ FieldAccess ]    > CFAV{@Initialized, Object}
o = Issue5174Sub.sf   [ Assignment ]    > CFAV{@Initialized, Object}
expression statement o = Issue5174Sub.sf   [ ExpressionStatement ]
o   [ LocalVariable ]

57:
Before: InitializationStore#141(
  o > CFAV{@Initialized, Object}
  initialized fields = [])
~~~~~~~~~
Issue5174Super   [ ClassName ]    > CFAV{@Initialized, Issue5174Super}

58:
Before: InitializationStore#142(
  o > CFAV{@Initialized, Object}
  initialized fields = [])
~~~~~~~~~
Issue5174Super.sf   [ FieldAccess ]    > CFAV{@Initialized, Object}
o = Issue5174Super.sf   [ Assignment ]    > CFAV{@Initialized, Object}
expression statement o = Issue5174Super.sf   [ ExpressionStatement ]

49:
Before: InitializationStore#151(
  o > CFAV{@Initialized, Object}
  initialized fields = [])
~~~~~~~~~
<exit>
62 -> 63
63 -> 64
64 -> 65
64 -> 61
64 -> 61
65 -> 60

62:
Before: InitializationStore#162(
  initialized fields = [])
~~~~~~~~~
<entry>

63:
Before: InitializationStore#162(
  initialized fields = [])
~~~~~~~~~
(this)   [ ImplicitThis ]
(this).<init>   [ MethodAccess ]    > CFAV{@UnderInitialization(Issue5174Sub.SubNested.class), SubNested}

64:
Before: InitializationStore#163(
  initialized fields = [])
~~~~~~~~~
(this).<init>()   [ MethodInvocation ]    > CFAV{@UnderInitialization, Object}

65:
Before: then=InitializationStore#164(
  this.<init>() > CFAV{@UnderInitialization, Object}
  initialized fields = []),
else=InitializationStore#165(
  this.<init>() > CFAV{@UnderInitialization, Object}
  initialized fields = [])
~~~~~~~~~
expression statement super()   [ ExpressionStatement ]

61:
Before: InitializationStore#166(
  initialized fields = [])
~~~~~~~~~
<exceptional-exit>

60:
Before: InitializationStore#171(
  this.<init>() > CFAV{@UnderInitialization, Object}
  initialized fields = [])
~~~~~~~~~
<exit>
69 -> 70
70 -> 71
71 -> 72
71 -> 68
71 -> 68
72 -> 67

69:
Before: InitializationStore#178(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
<entry>

70:
Before: InitializationStore#178(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
o   [ VariableDeclaration ]
(this)   [ ImplicitThis ]
(this).methodInner   [ MethodAccess ]
in   [ LocalVariable ]    > CFAV{, T}

71:
Before: InitializationStore#179(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
(this).methodInner(in)   [ MethodInvocation ]    > CFAV{, T}

72:
Before: then=InitializationStore#180(
  in > CFAV{, T}
  initialized fields = []),
else=InitializationStore#181(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
o = (this).methodInner(in)   [ Assignment ]    > CFAV{, T}

68:
Before: InitializationStore#182(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
<exceptional-exit>

67:
Before: InitializationStore#187(
  in > CFAV{, T}
  o > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
<exit>
76 -> 77
77 -> 78
78 -> 80
78 -> 75
78 -> 75
78 -> 75
78 -> 75
80 -> 82
80 -> 75
82 -> 83
82 -> 75
83 -> 84
84 -> 85
84 -> 75
84 -> 75
85 -> 74

76:
Before: InitializationStore#194(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
<entry>

77:
Before: InitializationStore#194(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
o   [ VariableDeclaration ]

78:
Before: InitializationStore#195(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
Issue5174Sub   [ ClassName ]    > CFAV{@Initialized, Issue5174Sub}

80:
Before: InitializationStore#196(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
Issue5174Sub.this   [ FieldAccess ]    > CFAV{@Initialized, Issue5174Sub}

75:
Before: InitializationStore#197(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
<exceptional-exit>

82:
Before: InitializationStore#204(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
Issue5174Sub.this.methodInner   [ MethodAccess ]

83:
Before: InitializationStore#207(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
in   [ LocalVariable ]    > CFAV{, T}

84:
Before: InitializationStore#210(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
Issue5174Sub.this.methodInner(in)   [ MethodInvocation ]    > CFAV{, T}

85:
Before: then=InitializationStore#211(
  in > CFAV{, T}
  initialized fields = []),
else=InitializationStore#212(
  in > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
o = Issue5174Sub.this.methodInner(in)   [ Assignment ]    > CFAV{, T}

74:
Before: InitializationStore#219(
  in > CFAV{, T}
  o > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
<exit>
89 -> 90
90 -> 87

89:
Before: InitializationStore#230(
  initialized fields = [])
~~~~~~~~~
<entry>

90:
Before: InitializationStore#230(
  initialized fields = [])
~~~~~~~~~
o   [ VariableDeclaration ]
(this)   [ ImplicitThis ]
(this).f   [ FieldAccess ]    > CFAV{, T}
o = (this).f   [ Assignment ]    > CFAV{, T}

87:
Before: InitializationStore#231(
  o > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
<exit>
94 -> 95
95 -> 96
96 -> 98
96 -> 93
96 -> 93
96 -> 93
96 -> 93
98 -> 100
98 -> 93
100 -> 101
100 -> 93
101 -> 92

94:
Before: InitializationStore#235(
  initialized fields = [])
~~~~~~~~~
<entry>

95:
Before: InitializationStore#235(
  initialized fields = [])
~~~~~~~~~
o   [ VariableDeclaration ]

96:
Before: InitializationStore#236(
  initialized fields = [])
~~~~~~~~~
Issue5174Sub   [ ClassName ]    > CFAV{@Initialized, Issue5174Sub}

98:
Before: InitializationStore#237(
  initialized fields = [])
~~~~~~~~~
Issue5174Sub.this   [ FieldAccess ]    > CFAV{@Initialized, Issue5174Sub}

93:
Before: InitializationStore#238(
  initialized fields = [])
~~~~~~~~~
<exceptional-exit>

100:
Before: InitializationStore#245(
  initialized fields = [])
~~~~~~~~~
Issue5174Sub.this.f   [ FieldAccess ]    > CFAV{, T}

101:
Before: InitializationStore#248(
  initialized fields = [])
~~~~~~~~~
o = Issue5174Sub.this.f   [ Assignment ]    > CFAV{, T}

92:
Before: InitializationStore#251(
  o > CFAV{, T}
  initialized fields = [])
~~~~~~~~~
<exit>
105 -> 106
106 -> 107
107 -> 108
107 -> 104
107 -> 104
107 -> 104
107 -> 104
108 -> 109
109 -> 110
109 -> 104
109 -> 104
109 -> 104
109 -> 104
110 -> 111
111 -> 112
111 -> 104
111 -> 104
111 -> 104
111 -> 104
112 -> 103

105:
Before: InitializationStore#260(
  initialized fields = [])
~~~~~~~~~
<entry>

106:
Before: InitializationStore#260(
  initialized fields = [])
~~~~~~~~~
o   [ VariableDeclaration ]
o   [ LocalVariable ]

107:
Before: InitializationStore#261(
  initialized fields = [])
~~~~~~~~~
Issue5174Super   [ ClassName ]

108:
Before: InitializationStore#262(
  initialized fields = [])
~~~~~~~~~
Issue5174Super.sf   [ FieldAccess ]    > CFAV{@Initialized, Object}
o = Issue5174Super.sf   [ Assignment ]    > CFAV{@Initialized, Object}
expression statement o = sf   [ ExpressionStatement ]
o   [ LocalVariable ]

104:
Before: InitializationStore#263(
  initialized fields = [])
~~~~~~~~~
<exceptional-exit>

109:
Before: InitializationStore#270(
  o > CFAV{@Initialized, Object}
  initialized fields = [])
~~~~~~~~~
Issue5174Sub   [ ClassName ]    > CFAV{@Initialized, Issue5174Sub}

110:
Before: InitializationStore#271(
  o > CFAV{@Initialized, Object}
  initialized fields = [])
~~~~~~~~~
Issue5174Sub.sf   [ FieldAccess ]    > CFAV{@Initialized, Object}
o = Issue5174Sub.sf   [ Assignment ]    > CFAV{@Initialized, Object}
expression statement o = Issue5174Sub.sf   [ ExpressionStatement ]
o   [ LocalVariable ]

111:
Before: InitializationStore#280(
  o > CFAV{@Initialized, Object}
  initialized fields = [])
~~~~~~~~~
Issue5174Super   [ ClassName ]    > CFAV{@Initialized, Issue5174Super}

112:
Before: InitializationStore#281(
  o > CFAV{@Initialized, Object}
  initialized fields = [])
~~~~~~~~~
Issue5174Super.sf   [ FieldAccess ]    > CFAV{@Initialized, Object}
o = Issue5174Super.sf   [ Assignment ]    > CFAV{@Initialized, Object}
expression statement o = Issue5174Super.sf   [ ExpressionStatement ]

103:
Before: InitializationStore#290(
  o > CFAV{@Initialized, Object}
  initialized fields = [])
~~~~~~~~~
<exit>
20 -> 21
21 -> 22
22 -> 23
22 -> 19
22 -> 19
23 -> 18

20:
Before: NullnessNoInitStore#301(
  f > NV{, T, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<entry>

21:
Before: NullnessNoInitStore#301(
  f > NV{, T, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
(this)   [ ImplicitThis ]
(this).<init>   [ MethodAccess ]    > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
f   [ LocalVariable ]    > NV{, T, poly nn/n=f/f}

22:
Before: NullnessNoInitStore#302(
  f > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
(this).<init>(f)   [ MethodInvocation ]    > NV{@NonNull, Issue5174Super, poly nn/n=f/f}

23:
Before: then=NullnessNoInitStore#303(
  f > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false),
else=NullnessNoInitStore#304(
  f > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
expression statement super(f)   [ ExpressionStatement ]

19:
Before: NullnessNoInitStore#305(
  f > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exceptional-exit>

18:
Before: NullnessNoInitStore#310(
  f > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exit>
27 -> 28
28 -> 29
29 -> 30
29 -> 26
29 -> 26
30 -> 25

27:
Before: NullnessNoInitStore#317(
  in > NV{, T, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<entry>

28:
Before: NullnessNoInitStore#317(
  in > NV{, T, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
o   [ VariableDeclaration ]
(this)   [ ImplicitThis ]
(this).methodInner   [ MethodAccess ]
in   [ LocalVariable ]    > NV{, T, poly nn/n=f/f}

29:
Before: NullnessNoInitStore#318(
  in > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
(this).methodInner(in)   [ MethodInvocation ]    > NV{, T, poly nn/n=f/f}

30:
Before: then=NullnessNoInitStore#319(
  in > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false),
else=NullnessNoInitStore#320(
  in > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
o = (this).methodInner(in)   [ Assignment ]    > NV{, T, poly nn/n=f/f}

26:
Before: NullnessNoInitStore#321(
  in > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exceptional-exit>

25:
Before: NullnessNoInitStore#326(
  in > NV{, T, poly nn/n=f/f}
  o > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exit>
34 -> 35
35 -> 36
36 -> 37
36 -> 33
36 -> 33
37 -> 32

34:
Before: NullnessNoInitStore#333(
  in > NV{, T, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<entry>

35:
Before: NullnessNoInitStore#333(
  in > NV{, T, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
o   [ VariableDeclaration ]
this   [ ExplicitThis ]    > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
this.methodInner   [ MethodAccess ]
in   [ LocalVariable ]    > NV{, T, poly nn/n=f/f}

36:
Before: NullnessNoInitStore#334(
  in > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
this.methodInner(in)   [ MethodInvocation ]    > NV{, T, poly nn/n=f/f}

37:
Before: then=NullnessNoInitStore#335(
  in > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false),
else=NullnessNoInitStore#336(
  in > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
o = this.methodInner(in)   [ Assignment ]    > NV{, T, poly nn/n=f/f}

33:
Before: NullnessNoInitStore#337(
  in > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exceptional-exit>

32:
Before: NullnessNoInitStore#342(
  in > NV{, T, poly nn/n=f/f}
  o > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exit>
41 -> 42
42 -> 39

41:
Before: NullnessNoInitStore#349(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<entry>

42:
Before: NullnessNoInitStore#349(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
o   [ VariableDeclaration ]
(this)   [ ImplicitThis ]
(this).f   [ FieldAccess ]    > NV{, T, poly nn/n=f/f}
o = (this).f   [ Assignment ]    > NV{, T, poly nn/n=f/f}

39:
Before: NullnessNoInitStore#350(
  o > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exit>
46 -> 47
47 -> 44

46:
Before: NullnessNoInitStore#354(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<entry>

47:
Before: NullnessNoInitStore#354(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
o   [ VariableDeclaration ]
this   [ ExplicitThis ]    > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
this.f   [ FieldAccess ]    > NV{, T, poly nn/n=f/f}
o = this.f   [ Assignment ]    > NV{, T, poly nn/n=f/f}

44:
Before: NullnessNoInitStore#355(
  o > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exit>
51 -> 52
52 -> 53
53 -> 54
53 -> 50
53 -> 50
53 -> 50
53 -> 50
54 -> 55
55 -> 56
55 -> 50
55 -> 50
55 -> 50
55 -> 50
56 -> 57
57 -> 58
57 -> 50
57 -> 50
57 -> 50
57 -> 50
58 -> 49

51:
Before: NullnessNoInitStore#359(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<entry>

52:
Before: NullnessNoInitStore#359(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
o   [ VariableDeclaration ]
o   [ LocalVariable ]

53:
Before: NullnessNoInitStore#360(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
Issue5174Super   [ ClassName ]

54:
Before: NullnessNoInitStore#361(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
Issue5174Super.sf   [ FieldAccess ]    > NV{@NonNull, Object, poly nn/n=f/f}
o = Issue5174Super.sf   [ Assignment ]    > NV{@NonNull, Object, poly nn/n=f/f}
expression statement o = sf   [ ExpressionStatement ]
o   [ LocalVariable ]

50:
Before: NullnessNoInitStore#362(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exceptional-exit>

55:
Before: NullnessNoInitStore#369(
  o > NV{@NonNull, Object, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
Issue5174Sub   [ ClassName ]    > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}

56:
Before: NullnessNoInitStore#370(
  o > NV{@NonNull, Object, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
Issue5174Sub.sf   [ FieldAccess ]    > NV{@NonNull, Object, poly nn/n=f/f}
o = Issue5174Sub.sf   [ Assignment ]    > NV{@NonNull, Object, poly nn/n=f/f}
expression statement o = Issue5174Sub.sf   [ ExpressionStatement ]
o   [ LocalVariable ]

57:
Before: NullnessNoInitStore#379(
  o > NV{@NonNull, Object, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
Issue5174Super   [ ClassName ]    > NV{@NonNull, Issue5174Super, poly nn/n=f/f}

58:
Before: NullnessNoInitStore#380(
  o > NV{@NonNull, Object, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
Issue5174Super.sf   [ FieldAccess ]    > NV{@NonNull, Object, poly nn/n=f/f}
o = Issue5174Super.sf   [ Assignment ]    > NV{@NonNull, Object, poly nn/n=f/f}
expression statement o = Issue5174Super.sf   [ ExpressionStatement ]

49:
Before: NullnessNoInitStore#389(
  o > NV{@NonNull, Object, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exit>
62 -> 63
63 -> 64
64 -> 65
64 -> 61
64 -> 61
65 -> 60

62:
Before: NullnessNoInitStore#400(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<entry>

63:
Before: NullnessNoInitStore#400(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
(this)   [ ImplicitThis ]
(this).<init>   [ MethodAccess ]    > NV{@NonNull, SubNested, poly nn/n=f/f}

64:
Before: NullnessNoInitStore#401(
  this > NV{@NonNull, SubNested, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
(this).<init>()   [ MethodInvocation ]    > NV{@NonNull, Object, poly nn/n=f/f}

65:
Before: then=NullnessNoInitStore#402(
  this > NV{@NonNull, SubNested, poly nn/n=f/f}
  this.<init>() > NV{@NonNull, Object, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false),
else=NullnessNoInitStore#403(
  this > NV{@NonNull, SubNested, poly nn/n=f/f}
  this.<init>() > NV{@NonNull, Object, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
expression statement super()   [ ExpressionStatement ]

61:
Before: NullnessNoInitStore#404(
  this > NV{@NonNull, SubNested, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exceptional-exit>

60:
Before: NullnessNoInitStore#409(
  this > NV{@NonNull, SubNested, poly nn/n=f/f}
  this.<init>() > NV{@NonNull, Object, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exit>
69 -> 70
70 -> 71
71 -> 72
71 -> 68
71 -> 68
72 -> 67

69:
Before: NullnessNoInitStore#416(
  in > NV{, T, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<entry>

70:
Before: NullnessNoInitStore#416(
  in > NV{, T, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
o   [ VariableDeclaration ]
(this)   [ ImplicitThis ]
(this).methodInner   [ MethodAccess ]
in   [ LocalVariable ]    > NV{, T, poly nn/n=f/f}

71:
Before: NullnessNoInitStore#417(
  in > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
(this).methodInner(in)   [ MethodInvocation ]    > NV{, T, poly nn/n=f/f}

72:
Before: then=NullnessNoInitStore#418(
  in > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false),
else=NullnessNoInitStore#419(
  in > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
o = (this).methodInner(in)   [ Assignment ]    > NV{, T, poly nn/n=f/f}

68:
Before: NullnessNoInitStore#420(
  in > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exceptional-exit>

67:
Before: NullnessNoInitStore#425(
  in > NV{, T, poly nn/n=f/f}
  o > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exit>
76 -> 77
77 -> 78
78 -> 80
78 -> 75
78 -> 75
78 -> 75
78 -> 75
80 -> 82
80 -> 75
82 -> 83
82 -> 75
83 -> 84
84 -> 85
84 -> 75
84 -> 75
85 -> 74

76:
Before: NullnessNoInitStore#432(
  in > NV{, T, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<entry>

77:
Before: NullnessNoInitStore#432(
  in > NV{, T, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
o   [ VariableDeclaration ]

78:
Before: NullnessNoInitStore#433(
  in > NV{, T, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
Issue5174Sub   [ ClassName ]    > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}

80:
Before: NullnessNoInitStore#434(
  in > NV{, T, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
Issue5174Sub.this   [ FieldAccess ]    > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}

75:
Before: NullnessNoInitStore#452(
  in > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exceptional-exit>

82:
Before: NullnessNoInitStore#442(
  in > NV{, T, poly nn/n=f/f}
  Issue5174Sub.class > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
Issue5174Sub.this.methodInner   [ MethodAccess ]

83:
Before: NullnessNoInitStore#445(
  in > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  Issue5174Sub.class > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
in   [ LocalVariable ]    > NV{, T, poly nn/n=f/f}

84:
Before: NullnessNoInitStore#448(
  in > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  Issue5174Sub.class > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
Issue5174Sub.this.methodInner(in)   [ MethodInvocation ]    > NV{, T, poly nn/n=f/f}

85:
Before: then=NullnessNoInitStore#449(
  in > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  Issue5174Sub.class > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false),
else=NullnessNoInitStore#450(
  in > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  Issue5174Sub.class > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
o = Issue5174Sub.this.methodInner(in)   [ Assignment ]    > NV{, T, poly nn/n=f/f}

74:
Before: NullnessNoInitStore#457(
  in > NV{, T, poly nn/n=f/f}
  o > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  Issue5174Sub.class > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exit>
89 -> 90
90 -> 87

89:
Before: NullnessNoInitStore#468(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<entry>

90:
Before: NullnessNoInitStore#468(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
o   [ VariableDeclaration ]
(this)   [ ImplicitThis ]
(this).f   [ FieldAccess ]    > NV{, T, poly nn/n=f/f}
o = (this).f   [ Assignment ]    > NV{, T, poly nn/n=f/f}

87:
Before: NullnessNoInitStore#469(
  o > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exit>
94 -> 95
95 -> 96
96 -> 98
96 -> 93
96 -> 93
96 -> 93
96 -> 93
98 -> 100
98 -> 93
100 -> 101
100 -> 93
101 -> 92

94:
Before: NullnessNoInitStore#473(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<entry>

95:
Before: NullnessNoInitStore#473(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
o   [ VariableDeclaration ]

96:
Before: NullnessNoInitStore#474(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
Issue5174Sub   [ ClassName ]    > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}

98:
Before: NullnessNoInitStore#475(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
Issue5174Sub.this   [ FieldAccess ]    > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}

93:
Before: NullnessNoInitStore#476(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exceptional-exit>

100:
Before: NullnessNoInitStore#483(
  Issue5174Sub.class > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
Issue5174Sub.this.f   [ FieldAccess ]    > NV{, T, poly nn/n=f/f}

101:
Before: NullnessNoInitStore#486(
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  Issue5174Sub.class > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
o = Issue5174Sub.this.f   [ Assignment ]    > NV{, T, poly nn/n=f/f}

92:
Before: NullnessNoInitStore#489(
  o > NV{, T, poly nn/n=f/f}
  this > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  Issue5174Sub.class > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exit>
105 -> 106
106 -> 107
107 -> 108
107 -> 104
107 -> 104
107 -> 104
107 -> 104
108 -> 109
109 -> 110
109 -> 104
109 -> 104
109 -> 104
109 -> 104
110 -> 111
111 -> 112
111 -> 104
111 -> 104
111 -> 104
111 -> 104
112 -> 103

105:
Before: NullnessNoInitStore#498(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<entry>

106:
Before: NullnessNoInitStore#498(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
o   [ VariableDeclaration ]
o   [ LocalVariable ]

107:
Before: NullnessNoInitStore#499(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
Issue5174Super   [ ClassName ]

108:
Before: NullnessNoInitStore#500(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
Issue5174Super.sf   [ FieldAccess ]    > NV{@NonNull, Object, poly nn/n=f/f}
o = Issue5174Super.sf   [ Assignment ]    > NV{@NonNull, Object, poly nn/n=f/f}
expression statement o = sf   [ ExpressionStatement ]
o   [ LocalVariable ]

104:
Before: NullnessNoInitStore#501(

  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exceptional-exit>

109:
Before: NullnessNoInitStore#508(
  o > NV{@NonNull, Object, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
Issue5174Sub   [ ClassName ]    > NV{@NonNull, Issue5174Sub, poly nn/n=f/f}

110:
Before: NullnessNoInitStore#509(
  o > NV{@NonNull, Object, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
Issue5174Sub.sf   [ FieldAccess ]    > NV{@NonNull, Object, poly nn/n=f/f}
o = Issue5174Sub.sf   [ Assignment ]    > NV{@NonNull, Object, poly nn/n=f/f}
expression statement o = Issue5174Sub.sf   [ ExpressionStatement ]
o   [ LocalVariable ]

111:
Before: NullnessNoInitStore#518(
  o > NV{@NonNull, Object, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
Issue5174Super   [ ClassName ]    > NV{@NonNull, Issue5174Super, poly nn/n=f/f}

112:
Before: NullnessNoInitStore#519(
  o > NV{@NonNull, Object, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
Issue5174Super.sf   [ FieldAccess ]    > NV{@NonNull, Object, poly nn/n=f/f}
o = Issue5174Super.sf   [ Assignment ]    > NV{@NonNull, Object, poly nn/n=f/f}
expression statement o = Issue5174Super.sf   [ ExpressionStatement ]

103:
Before: NullnessNoInitStore#528(
  o > NV{@NonNull, Object, poly nn/n=f/f}
  isPolyNullNonNull = false
  isPolyNullNull = false)
~~~~~~~~~
<exit>
