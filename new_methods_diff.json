{
  "jdk-18": {
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.security.jgss/share/classes/sun/security/jgss/TokenTracker.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public final synchronized void getProps(int number, MessageProp prop);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.security.jgss/share/classes/sun/security/jgss/wrapper/GSSNameElement.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"removal\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.jfr/share/classes/jdk/jfr/internal/Type.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void setVisible(boolean visible);"
          },
          {
            "id": 1,
            "content": "public boolean isVisible();"
          },
          {
            "id": 2,
            "content": "public void setInternal(boolean internal);"
          },
          {
            "id": 3,
            "content": "public boolean isInternal();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.compiler/share/classes/javax/tools/JavaFileManager.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "default JavaFileObject getJavaFileForOutputForOriginatingFiles(Location location, String className, Kind kind, FileObject... originatingFiles) throws IOException;"
          },
          {
            "id": 1,
            "content": "default FileObject getFileForOutputForOriginatingFiles(Location location, String packageName, String relativeName, FileObject... originatingFiles) throws IOException;"
          },
          {
            "id": 2,
            "content": "private static FileObject siblingFrom(FileObject[] originatingFiles);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.compiler/share/classes/javax/tools/ForwardingJavaFileManager.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public JavaFileObject getJavaFileForOutputForOriginatingFiles(Location location, String className, Kind kind, FileObject... originatingFiles) throws IOException;"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "public FileObject getFileForOutputForOriginatingFiles(Location location, String packageName, String relativeName, FileObject... originatingFiles) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.compiler/share/classes/javax/lang/model/util/Elements.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "default TypeElement getOutermostTypeElement(Element e);"
          },
          {
            "id": 1,
            "content": "default javax.tools.JavaFileObject getFileObjectOf(Element e);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.xml/share/classes/javax/xml/stream/XMLStreamException.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"serial\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.compiler/share/classes/com/sun/tools/sjavac/pubapi/PubVar.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"serial\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.compiler/share/classes/com/sun/tools/sjavac/pubapi/PubMethod.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"serial\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.compiler/share/classes/com/sun/tools/sjavac/pubapi/PubApi.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"serial\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.compiler/share/classes/com/sun/tools/sjavac/pubapi/PubType.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"serial\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.compiler/share/classes/com/sun/tools/sjavac/pubapi/PubApiTypeParam.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"serial\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.compiler/share/classes/com/sun/tools/javac/file/Locations.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "protected abstract static class LocationHandler {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "private abstract static class BasicLocationHandler extends LocationHandler {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Type.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public abstract static class StructuralTypeMapping<S> extends Types.TypeMapping<S> {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "public abstract static class DelegatedType extends Type {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Symbol.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public abstract static class TypeSymbol extends Symbol {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Types.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public abstract static class DefaultTypeVisitor<R, S> implements Type.Visitor<R, S> {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "public abstract static class DefaultSymbolVisitor<R, S> implements Symbol.Visitor<R, S> {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 2,
              "content": "public abstract static class SimpleVisitor<R, S> extends DefaultTypeVisitor<R, S> {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 3,
              "content": "public abstract static class TypeRelation extends SimpleVisitor<Boolean, Type> {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 4,
              "content": "public abstract static class UnaryVisitor<R> extends SimpleVisitor<R, Void> {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 5,
              "content": "public abstract static class SignatureGenerator {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Resolve.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "boolean isSerializable(Type t);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.compiler/share/classes/com/sun/tools/javac/api/ClientCodeWrapper.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public JavaFileObject getJavaFileForOutputForOriginatingFiles(Location location, String className, Kind kind, FileObject... originatingFiles) throws IOException;"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@DefinedBy(Api.COMPILER)"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@DefinedBy(Api.COMPILER)"
          },
          {
            "id": 5,
            "content": "@Pure"
          },
          {
            "id": 6,
            "content": "public FileObject getFileForOutputForOriginatingFiles(Location location, String packageName, String relativeName, FileObject... originatingFiles) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.compiler/share/classes/com/sun/tools/javac/main/DelegatingJavaFileManager.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public JavaFileObject getJavaFileForOutputForOriginatingFiles(Location location, String className, Kind kind, FileObject... originatingFiles) throws IOException;"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "public FileObject getFileForOutputForOriginatingFiles(Location location, String packageName, String relativeName, FileObject... originatingFiles) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.prefs/share/classes/java/util/prefs/AbstractPreferences.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class NodeAddedEvent extends NodeChangeEvent {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "private static class NodeRemovedEvent extends NodeChangeEvent {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/P11Key.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static abstract class P11PrivateKey extends P11Key implements PrivateKey {"
            },
            "methods": [
              {
                "id": 21,
                "content": "protected byte[] encoded;"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "private static abstract class P11PublicKey extends P11Key implements PublicKey {"
            },
            "methods": [
              {
                "id": 22,
                "content": "protected byte[] encoded;"
              }
            ]
          },
          {
            "declaration": {
              "id": 2,
              "content": "static class P11RSAPrivateKeyInternal extends P11PrivateKey {"
            },
            "methods": [
              {
                "id": 23,
                "content": "static P11RSAPrivateKeyInternal of(Session session, long keyID, String algorithm, int keyLength, CK_ATTRIBUTE[] attrs, boolean keySensitive);"
              },
              {
                "id": 24,
                "content": "protected transient BigInteger n;"
              }
            ]
          },
          {
            "declaration": {
              "id": 3,
              "content": "private static final class P11RSAPrivateKey extends P11RSAPrivateKeyInternal implements RSAPrivateCrtKey {"
            },
            "methods": [
              {
                "id": 25,
                "content": "public String getFormat();"
              },
              {
                "id": 26,
                "content": "synchronized byte[] getEncodedInternal();"
              },
              {
                "id": 27,
                "content": "@Override"
              },
              {
                "id": 28,
                "content": "public BigInteger getModulus();"
              }
            ]
          },
          {
            "declaration": {
              "id": 4,
              "content": "private static final class P11RSAPrivateNonCRTKey extends P11RSAPrivateKeyInternal implements RSAPrivateKey {"
            },
            "methods": [
              {
                "id": 29,
                "content": "@Override"
              }
            ]
          },
          {
            "declaration": {
              "id": 5,
              "content": "private static final class P11RSAPublicKey extends P11PublicKey implements RSAPublicKey {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 6,
              "content": "private static final class P11DSAPublicKey extends P11PublicKey implements DSAPublicKey {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 7,
              "content": "static class P11DSAPrivateKeyInternal extends P11PrivateKey {"
            },
            "methods": [
              {
                "id": 30,
                "content": "protected transient DSAParams params;"
              },
              {
                "id": 31,
                "content": "static P11DSAPrivateKeyInternal of(Session session, long keyID, String algorithm, int keyLength, CK_ATTRIBUTE[] attrs, boolean keySensitive);"
              },
              {
                "id": 32,
                "content": "protected DSAParams getParams();"
              }
            ]
          },
          {
            "declaration": {
              "id": 8,
              "content": "private static final class P11DSAPrivateKey extends P11DSAPrivateKeyInternal implements DSAPrivateKey {"
            },
            "methods": [
              {
                "id": 33,
                "content": "@Override"
              }
            ]
          },
          {
            "declaration": {
              "id": 9,
              "content": "static class P11DHPrivateKeyInternal extends P11PrivateKey {"
            },
            "methods": [
              {
                "id": 34,
                "content": "protected transient DHParameterSpec params;"
              },
              {
                "id": 35,
                "content": "static P11DHPrivateKeyInternal of(Session session, long keyID, String algorithm, int keyLength, CK_ATTRIBUTE[] attrs, boolean keySensitive);"
              },
              {
                "id": 36,
                "content": "public DHParameterSpec getParams();"
              }
            ]
          },
          {
            "declaration": {
              "id": 10,
              "content": "private static final class P11DHPrivateKey extends P11DHPrivateKeyInternal implements DHPrivateKey {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 11,
              "content": "private static final class P11DHPublicKey extends P11PublicKey implements DHPublicKey {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 12,
              "content": "static class P11ECPrivateKeyInternal extends P11PrivateKey {"
            },
            "methods": [
              {
                "id": 37,
                "content": "protected transient ECParameterSpec params;"
              },
              {
                "id": 38,
                "content": "static P11ECPrivateKeyInternal of(Session session, long keyID, String algorithm, int keyLength, CK_ATTRIBUTE[] attrs, boolean keySensitive);"
              },
              {
                "id": 39,
                "content": "protected ECParameterSpec getParams();"
              }
            ]
          },
          {
            "declaration": {
              "id": 13,
              "content": "private static final class P11ECPrivateKey extends P11ECPrivateKeyInternal implements ECPrivateKey {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 14,
              "content": "private static final class P11ECPublicKey extends P11PublicKey implements ECPublicKey {"
            },
            "methods": []
          }
        ],
        "new_methods": [
          {
            "id": 15,
            "content": "CK_ATTRIBUTE[] fetchAttributes(CK_ATTRIBUTE[] attrs);"
          },
          {
            "id": 16,
            "content": "BigInteger[] fetchAttributesAsInts(CK_ATTRIBUTE[] attrs);"
          },
          {
            "id": 17,
            "content": "static SecretKey secretKey(Session session, long keyID, String algorithm, int keyLength, CK_ATTRIBUTE[] attrs);"
          },
          {
            "id": 18,
            "content": "static SecretKey masterSecretKey(Session session, long keyID, String algorithm, int keyLength, CK_ATTRIBUTE[] attrs, int major, int minor);"
          },
          {
            "id": 19,
            "content": "static PublicKey publicKey(Session session, long keyID, String algorithm, int keyLength, CK_ATTRIBUTE[] attrs);"
          },
          {
            "id": 20,
            "content": "static PrivateKey privateKey(Session session, long keyID, String algorithm, int keyLength, CK_ATTRIBUTE[] attrs);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/windows/classes/sun/nio/fs/WindowsPath.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "String getPathWithPrefixForWin32Calls() throws WindowsException;"
          },
          {
            "id": 1,
            "content": "static String addPrefix(String path);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/sun/util/resources/LocaleData.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private abstract static class LocaleDataResourceBundleProvider implements ResourceBundleProvider {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "public abstract static class CommonResourceBundleProvider extends LocaleDataResourceBundleProvider {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 2,
              "content": "public abstract static class SupplementaryResourceBundleProvider extends LocaleDataResourceBundleProvider {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/sun/security/util/DerInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void atEnd() throws IOException;"
          },
          {
            "id": 1,
            "content": "public Optional<DerValue> getOptional(byte tag) throws IOException;"
          },
          {
            "id": 2,
            "content": "public boolean seeOptionalContextSpecific(int n) throws IOException;"
          },
          {
            "id": 3,
            "content": "public Optional<DerValue> getOptionalExplicitContextSpecific(int n) throws IOException;"
          },
          {
            "id": 4,
            "content": "public Optional<DerValue> getOptionalImplicitContextSpecific(int n, byte tag) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/sun/security/util/DerValue.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static DerValue wrap(byte[] buf) throws IOException;"
          },
          {
            "id": 1,
            "content": "public static DerValue wrap(byte[] buf, int offset, int len) throws IOException;"
          },
          {
            "id": 2,
            "content": "public DerValue[] subs(byte expectedTag, int startLen) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/sun/security/x509/AlgorithmId.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public byte[] getEncodedParams();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/sun/nio/ch/FileChannelImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private abstract static class Unmapper implements Runnable, UnmapperProxy {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/sun/nio/ch/FileDispatcher.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "abstract boolean canTransferToFromOverlappedMap();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/net/Inet6AddressImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "final class Inet6AddressImpl implements InetAddressImpl {"
            },
            "methods": [
              {
                "id": 1,
                "content": "public InetAddress[] lookupAllHostAddr(String hostname, LookupPolicy lookupPolicy) throws UnknownHostException;"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/net/Inet4AddressImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "final class Inet4AddressImpl implements InetAddressImpl {"
            },
            "methods": [
              {
                "id": 1,
                "content": "public InetAddress[] lookupAllHostAddr(String hostname, LookupPolicy lookupPolicy) throws UnknownHostException;"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/net/ServerSocket.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void setSoTimeout(int timeout) throws SocketException;"
          },
          {
            "id": 1,
            "content": "public int getSoTimeout() throws IOException;"
          },
          {
            "id": 2,
            "content": "public void setReceiveBufferSize(int size) throws SocketException;"
          },
          {
            "id": 3,
            "content": "public int getReceiveBufferSize() throws SocketException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/net/InetAddress.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static final class PlatformResolver implements InetAddressResolver {"
            },
            "methods": [
              {
                "id": 5,
                "content": "public Stream<InetAddress> lookupByName(String host, LookupPolicy policy) throws UnknownHostException;"
              },
              {
                "id": 6,
                "content": "public String lookupByAddress(byte[] addr) throws UnknownHostException;"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "private static final class HostsFileResolver implements InetAddressResolver {"
            },
            "methods": [
              {
                "id": 7,
                "content": "public HostsFileResolver(String hostsFileName) {"
              },
              {
                "id": 8,
                "content": "public String lookupByAddress(byte[] addr) throws UnknownHostException;"
              },
              {
                "id": 9,
                "content": "public Stream<InetAddress> lookupByName(String host, LookupPolicy lookupPolicy) throws UnknownHostException;"
              },
              {
                "id": 10,
                "content": "static InetAddress[] getAddressesFromNameService(String host) throws UnknownHostException;"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 2,
            "content": "static boolean systemAddressesOrder(int lookupCharacteristics);"
          },
          {
            "id": 3,
            "content": "static boolean ipv4AddressesFirst(int lookupCharacteristics);"
          },
          {
            "id": 4,
            "content": "static boolean ipv6AddressesFirst(int lookupCharacteristics);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/util/HashMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static final class UnsafeHolder {"
            },
            "methods": [
              {
                "id": 1,
                "content": "static void putLoadFactor(HashMap<?, ?> map, float lf);"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/util/ImmutableCollections.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "abstract static class AbstractImmutableCollection<E> extends AbstractCollection<E> {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "abstract static class AbstractImmutableList<E> extends AbstractImmutableCollection<E> implements List<E>, RandomAccess {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 2,
              "content": "abstract static class AbstractImmutableSet<E> extends AbstractImmutableCollection<E> implements Set<E> {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/util/Hashtable.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static final class UnsafeHolder {"
            },
            "methods": [
              {
                "id": 2,
                "content": "static void putLoadFactor(Hashtable<?, ?> table, float lf);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "void readHashtable(ObjectInputStream s) throws IOException, ClassNotFoundException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/util/Collections.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public void forEach(Consumer<? super E> action);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/util/regex/Pattern.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "default CharPredicate union(CharPredicate p1, CharPredicate p2);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/util/concurrent/Executors.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"removal\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/security/Provider.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public String toString();"
          },
          {
            "id": 1,
            "content": "public Set<Service> getServices();"
          },
          {
            "id": 2,
            "content": "Service getDefaultSecureRandomService();"
          },
          {
            "id": 3,
            "content": "void removeAttribute(String type, String value);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/security/KeyStoreSpi.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Set<Entry.Attribute> engineGetAttributes(String alias);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/security/KeyStore.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public final Set<Entry.Attribute> getAttributes(String alias) throws KeyStoreException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/io/PrintStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Charset charset();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/io/ObjectInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public abstract Object get(String name, @Nullable Object val) throws IOException, ClassNotFoundException;"
          },
          {
            "id": 1,
            "content": "public Object get(String name, Object val) throws ClassNotFoundException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/io/FileInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public long transferTo(OutputStream out) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/io/ObjectStreamClass.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "abstract static class Key {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/io/FilterInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@Override"
          },
          {
            "id": 5,
            "content": "@Override"
          },
          {
            "id": 6,
            "content": "@Override"
          },
          {
            "id": 7,
            "content": "@Override"
          },
          {
            "id": 8,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/time/Duration.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean isPositive();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/System.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public abstract static class LoggerFinder {"
            },
            "methods": [
              {
                "id": 1,
                "content": "@Deprecated()"
              },
              {
                "id": 2,
                "content": "@SuppressWarnings(\"removal\")"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/StackStreamFactory.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "abstract static class AbstractStackWalker<R, T> {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "abstract static class FrameBuffer<F> {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/StringBuffer.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class StringBuffer extends AbstractStringBuilder implements Serializable, Comparable<StringBuffer>, CharSequence {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/Byte.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/Short.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/Character.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/Enum.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Deprecated()"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"removal\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/ThreadGroup.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"removal\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/StringCoding.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@IntrinsicCandidate"
          },
          {
            "id": 1,
            "content": "public static int implEncodeAsciiArray(char[] sa, int sp, byte[] da, int dp, int len);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/Math.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static int divideExact(int x, int y);"
          },
          {
            "id": 1,
            "content": "public static long divideExact(long x, long y);"
          },
          {
            "id": 2,
            "content": "public static int floorDivExact(int x, int y);"
          },
          {
            "id": 3,
            "content": "public static long floorDivExact(long x, long y);"
          },
          {
            "id": 4,
            "content": "public static int ceilDivExact(int x, int y);"
          },
          {
            "id": 5,
            "content": "public static long ceilDivExact(long x, long y);"
          },
          {
            "id": 6,
            "content": "@IntrinsicCandidate"
          },
          {
            "id": 7,
            "content": "public static long unsignedMultiplyHigh(long x, long y);"
          },
          {
            "id": 8,
            "content": "public static int ceilDiv(int x, int y);"
          },
          {
            "id": 9,
            "content": "public static long ceilDiv(long x, int y);"
          },
          {
            "id": 10,
            "content": "public static long ceilDiv(long x, long y);"
          },
          {
            "id": 11,
            "content": "public static int ceilMod(int x, int y);"
          },
          {
            "id": 12,
            "content": "public static int ceilMod(long x, int y);"
          },
          {
            "id": 13,
            "content": "public static long ceilMod(long x, long y);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/Boolean.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/Runtime.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Deprecated()"
          },
          {
            "id": 1,
            "content": "@Deprecated()"
          },
          {
            "id": 2,
            "content": "@Deprecated()"
          },
          {
            "id": 3,
            "content": "@Deprecated()"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/WeakPairMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private abstract static class WeakRefPeer<K> extends WeakReference<K> {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/StrictMath.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static int divideExact(int x, int y);"
          },
          {
            "id": 1,
            "content": "public static long divideExact(long x, long y);"
          },
          {
            "id": 2,
            "content": "public static int floorDivExact(int x, int y);"
          },
          {
            "id": 3,
            "content": "public static long floorDivExact(long x, long y);"
          },
          {
            "id": 4,
            "content": "public static int ceilDivExact(int x, int y);"
          },
          {
            "id": 5,
            "content": "public static long ceilDivExact(long x, long y);"
          },
          {
            "id": 6,
            "content": "public static long unsignedMultiplyHigh(long x, long y);"
          },
          {
            "id": 7,
            "content": "public static int ceilDiv(int x, int y);"
          },
          {
            "id": 8,
            "content": "public static long ceilDiv(long x, int y);"
          },
          {
            "id": 9,
            "content": "public static long ceilDiv(long x, long y);"
          },
          {
            "id": 10,
            "content": "public static int ceilMod(int x, int y);"
          },
          {
            "id": 11,
            "content": "public static int ceilMod(long x, int y);"
          },
          {
            "id": 12,
            "content": "public static long ceilMod(long x, long y);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/ref/Reference.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "boolean refersToImpl(T obj);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/ref/PhantomReference.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "boolean refersToImpl(T obj);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/invoke/CallSite.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public abstract class CallSite {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/invoke/MethodHandles.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static Object classData(Class<?> c);"
          },
          {
            "id": 1,
            "content": "ClassDefiner makeHiddenClassDefiner(String name, byte[] bytes, Set<ClassOption> options);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/invoke/AbstractConstantGroup.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "abstract static class WithCache extends AbstractConstantGroup {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/invoke/MethodHandleImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static final class InjectedInvokerHolder {"
            },
            "methods": []
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "static MethodHandle reflectiveInvoker(Class<?> caller);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/reflect/Method.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Object invoke(Object obj, Object... args) throws IllegalAccessException, InvocationTargetException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/nio/charset/Charset.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static Charset forName(String charsetName, Charset fallback);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/javax/security/auth/Subject.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static Subject current();"
          },
          {
            "id": 1,
            "content": "public static <T> T callAs(final Subject subject, final Callable<T> action) throws CompletionException;"
          },
          {
            "id": 2,
            "content": "@SuppressWarnings(\"removal\")"
          },
          {
            "id": 3,
            "content": "@Deprecated()"
          },
          {
            "id": 4,
            "content": "@Deprecated()"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.httpserver/share/classes/com/sun/net/httpserver/Headers.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Headers(Map<String, List<String>> headers) {"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@Override"
          },
          {
            "id": 5,
            "content": "@Override"
          },
          {
            "id": 6,
            "content": "@Override"
          },
          {
            "id": 7,
            "content": "@Override"
          },
          {
            "id": 8,
            "content": "@Override"
          },
          {
            "id": 9,
            "content": "@Override"
          },
          {
            "id": 10,
            "content": "@Override"
          },
          {
            "id": 11,
            "content": "@Override"
          },
          {
            "id": 12,
            "content": "@Override"
          },
          {
            "id": 13,
            "content": "@Override"
          },
          {
            "id": 14,
            "content": "public void replaceAll(BiFunction<? super String, ? super List<String>, ? extends List<String>> function);"
          },
          {
            "id": 15,
            "content": "@Override"
          },
          {
            "id": 16,
            "content": "@Override"
          },
          {
            "id": 17,
            "content": "@Override"
          },
          {
            "id": 18,
            "content": "public String toString();"
          },
          {
            "id": 19,
            "content": "public static Headers of(String... headers);"
          },
          {
            "id": 20,
            "content": "public static Headers of(Map<String, List<String>> headers);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.internal.le/share/classes/jdk/internal/org/jline/utils/AttributedCharSequence.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static final int TRUE_COLORS;"
          },
          {
            "id": 1,
            "content": "public enum ForceMode {"
          },
          {
            "id": 2,
            "content": "None, Force256Colors, ForceTrueColors"
          },
          {
            "id": 3,
            "content": "@Deprecated"
          },
          {
            "id": 4,
            "content": "@Deprecated"
          },
          {
            "id": 5,
            "content": "public String toAnsi(int colors, ForceMode force);"
          },
          {
            "id": 6,
            "content": "public String toAnsi(int colors, ForceMode force, ColorPalette palette);"
          },
          {
            "id": 7,
            "content": "public String toAnsi(int colors, ForceMode force, ColorPalette palette, String altIn, String altOut);"
          },
          {
            "id": 8,
            "content": "long styleCodeAt(int index);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.security.auth/share/classes/com/sun/security/auth/NTNumericCredential.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.rmi/share/classes/java/rmi/server/RemoteObject.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "protected transient RemoteRef ref;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.rmi/share/classes/java/rmi/server/RMISocketFactory.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static synchronized void setSocketFactory(RMISocketFactory fac) throws IOException;"
          },
          {
            "id": 1,
            "content": "public static synchronized RMISocketFactory getSocketFactory();"
          },
          {
            "id": 2,
            "content": "public static synchronized RMISocketFactory getDefaultSocketFactory();"
          },
          {
            "id": 3,
            "content": "public static synchronized void setFailureHandler(RMIFailureHandler fh);"
          },
          {
            "id": 4,
            "content": "public static synchronized RMIFailureHandler getFailureHandler();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.rmi/share/classes/java/rmi/server/ObjID.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.jdi/share/classes/com/sun/tools/jdi/ReferenceTypeImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public abstract List<Method> allMethods();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.jdi/share/classes/com/sun/tools/jdi/VirtualMachineImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class SoftObjectReference extends SoftReference<ObjectReferenceImpl> {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.jdi/share/classes/com/sun/tools/jdi/FieldImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.jdi/share/classes/com/sun/tools/jdi/ObjectReferenceImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.jdi/share/classes/com/sun/tools/jdi/MethodImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlDocletWriter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Content linkToContent(Element referrer, Element target, String targetSignature, String text);"
          },
          {
            "id": 1,
            "content": "protected Content invalidTagOutput(String summary, Optional<Content> detail);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlConfiguration.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public List<DocPath> getAdditionalScripts();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlTree.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static HtmlTree INPUT(String type, HtmlId id);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/WorkArounds.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean isMandated(AnnotationMirror aDesc);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/CommentHelper.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public TypeElement getReferencedClass(Element e);"
          },
          {
            "id": 1,
            "content": "public String getReferencedModuleName(String signature);"
          },
          {
            "id": 2,
            "content": "public Element getReferencedMember(Element e);"
          },
          {
            "id": 3,
            "content": "public String getReferencedMemberName(String signature);"
          },
          {
            "id": 4,
            "content": "public PackageElement getReferencedPackage(Element e);"
          },
          {
            "id": 5,
            "content": "public ModuleElement getReferencedModule(Element e);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/VisibleMemberTable.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "ANNOTATION_TYPE_MEMBER,"
          },
          {
            "id": 1,
            "content": "ANNOTATION_TYPE_MEMBER_REQUIRED,"
          },
          {
            "id": 2,
            "content": "public List<Element> getAllVisibleMembers(Kind kind);"
          },
          {
            "id": 3,
            "content": "public List<Element> getVisibleMembers(Kind kind, Predicate<Element> p);"
          },
          {
            "id": 4,
            "content": "public List<Element> getVisibleMembers(Kind kind);"
          },
          {
            "id": 5,
            "content": "public List<Element> getMembers(Kind kind);"
          },
          {
            "id": 6,
            "content": "public VariableElement getPropertyField(ExecutableElement ee);"
          },
          {
            "id": 7,
            "content": "public ExecutableElement getPropertyGetter(ExecutableElement ee);"
          },
          {
            "id": 8,
            "content": "public ExecutableElement getPropertySetter(ExecutableElement ee);"
          },
          {
            "id": 9,
            "content": "public ExecutableElement getPropertyMethod(ExecutableElement ee);"
          },
          {
            "id": 10,
            "content": "<T extends Element> List<T> getMembers(String key, Kind kind, Class<T> clazz);"
          },
          {
            "id": 11,
            "content": "List<ExecutableElement> getPropertyMethods(String methodName, int argcount);"
          },
          {
            "id": 12,
            "content": "record PropertyMembers(ExecutableElement propertyMethod, VariableElement field, ExecutableElement getter, ExecutableElement setter) {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/Utils.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public TypeMirror getThrowableType();"
          },
          {
            "id": 1,
            "content": "public boolean isThrowable(TypeElement te);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.jlink/share/classes/jdk/tools/jlink/internal/ResourcePoolManager.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "static class ResourcePoolModuleImpl implements ResourcePoolModule {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.jlink/share/classes/jdk/tools/jlink/internal/ImagePluginStack.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static final class CheckOrderResourcePoolManager extends ResourcePoolManager {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "private static class LastPoolManager extends ResourcePoolManager {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.accessibility/windows/classes/com/sun/java/accessibility/internal/AccessBridge.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class AccessBridge {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "private static abstract class AccessibilityGraphicsEnvironment extends GraphicsEnvironment {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public static GraphicsConfiguration getGraphicsConfigurationAtPoint(double x, double y);"
              },
              {
                "id": 3,
                "content": "public static GraphicsConfiguration getGraphicsConfigurationAtPoint(GraphicsConfiguration current, double x, double y);"
              },
              {
                "id": 4,
                "content": "public static GraphicsConfiguration getGraphicsConfigurationAtDevicePoint(double x, double y);"
              },
              {
                "id": 5,
                "content": "public static GraphicsConfiguration getGraphicsConfigurationAtDevicePoint(GraphicsConfiguration current, double x, double y);"
              },
              {
                "id": 6,
                "content": "public static Point toUserSpace(int x, int y);"
              },
              {
                "id": 7,
                "content": "public static Point toUserSpace(GraphicsConfiguration gc, int x, int y);"
              },
              {
                "id": 8,
                "content": "public static Rectangle toDeviceSpaceAbs(Rectangle rect);"
              },
              {
                "id": 9,
                "content": "public static Rectangle toDeviceSpaceAbs(GraphicsConfiguration gc, int x, int y, int w, int h);"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.jshell/share/classes/jdk/jshell/MemoryFileManager.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "abstract static class MemoryJavaFileObject extends SimpleJavaFileObject {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/unix/classes/sun/print/IPPPrintService.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class ExtFinishing extends Finishings {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/macosx/classes/sun/font/CFont.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"removal\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/java/awt/Polygon.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "static class PolygonPathIterator implements PathIterator {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/java/awt/BufferCapabilities.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"doclint:missing\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/java/awt/CardLayout.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "static class Card implements Serializable {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/java/awt/PrintJob.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"removal\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/java/awt/Component.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class ProxyCapabilities extends ExtendedBufferCapabilities {"
            },
            "methods": []
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "@SuppressWarnings(\"doclint:missing\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/java/awt/Graphics.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"removal\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/java/awt/Toolkit.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class SelectiveAWTEventListener implements AWTEventListener {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/java/awt/print/Book.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class BookPage {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/javax/swing/JRootPane.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"serial\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/javax/swing/JComponent.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "static final class ActionStandin implements Action {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "private static class ReadObjectCallback implements ObjectInputValidation {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/javax/swing/JDialog.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings({ \"serial\", \"doclint:missing\" })"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/javax/swing/plaf/nimbus/NimbusStyle.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static final class RuntimeState implements Cloneable {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/javax/swing/text/StyleContext.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "static class KeyEnumeration implements Enumeration<Object> {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "static class KeyBuilder {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/javax/swing/text/JTextComponent.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class DoSetCaretPosition implements Runnable {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/javax/swing/text/html/HTML.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"doclint:missing\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/javax/swing/text/html/HTMLEditorKit.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings({ \"serial\", \"doclint:missing\" })"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/javax/print/DocFlavor.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"removal\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/com/sun/imageio/plugins/png/PNGImageWriter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"removal\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"removal\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.management.agent/share/classes/sun/management/jdp/JdpJmxPacket.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static final String UUID_KEY;"
          },
          {
            "id": 1,
            "content": "public static final String MAIN_CLASS_KEY;"
          },
          {
            "id": 2,
            "content": "public static final String JMX_SERVICE_URL_KEY;"
          },
          {
            "id": 3,
            "content": "public static final String INSTANCE_NAME_KEY;"
          },
          {
            "id": 4,
            "content": "public static final String PROCESS_ID_KEY;"
          },
          {
            "id": 5,
            "content": "public static final String RMI_HOSTNAME_KEY;"
          },
          {
            "id": 6,
            "content": "public static final String BROADCAST_INTERVAL_KEY;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.hotspot/src/jdk/vm/ci/hotspot/HotSpotObjectConstantImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public JavaConstant readFieldValue(HotSpotResolvedJavaField field);"
          }
        ]
      }
    }
  },
  "jdk-19": {
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.security.jgss/share/classes/sun/security/jgss/GSSNameImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class GSSNameImpl implements GSSName {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.security.jgss/share/classes/sun/security/jgss/TokenTracker.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "static class Entry {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.security.jgss/share/classes/sun/security/jgss/spi/GSSNameSpi.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "Provider getProvider();"
          },
          {
            "id": 1,
            "content": "boolean equals(GSSNameSpi name) throws GSSException;"
          },
          {
            "id": 2,
            "content": "boolean equals(@Nullable Object another);"
          },
          {
            "id": 3,
            "content": "int hashCode();"
          },
          {
            "id": 4,
            "content": "byte[] export() throws GSSException;"
          },
          {
            "id": 5,
            "content": "Oid getMechanism();"
          },
          {
            "id": 6,
            "content": "String toString();"
          },
          {
            "id": 7,
            "content": "Oid getStringNameType();"
          },
          {
            "id": 8,
            "content": "boolean isAnonymousName();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.security.jgss/share/classes/org/ietf/jgss/GSSCredential.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "int INITIATE_AND_ACCEPT;"
          },
          {
            "id": 1,
            "content": "int INITIATE_ONLY;"
          },
          {
            "id": 2,
            "content": "int ACCEPT_ONLY;"
          },
          {
            "id": 3,
            "content": "int DEFAULT_LIFETIME;"
          },
          {
            "id": 4,
            "content": "int INDEFINITE_LIFETIME;"
          },
          {
            "id": 5,
            "content": "void dispose() throws GSSException;"
          },
          {
            "id": 6,
            "content": "GSSName getName() throws GSSException;"
          },
          {
            "id": 7,
            "content": "GSSName getName(Oid mech) throws GSSException;"
          },
          {
            "id": 8,
            "content": "int getRemainingLifetime() throws GSSException;"
          },
          {
            "id": 9,
            "content": "int getRemainingInitLifetime(Oid mech) throws GSSException;"
          },
          {
            "id": 10,
            "content": "int getRemainingAcceptLifetime(Oid mech) throws GSSException;"
          },
          {
            "id": 11,
            "content": "int getUsage() throws GSSException;"
          },
          {
            "id": 12,
            "content": "int getUsage(Oid mech) throws GSSException;"
          },
          {
            "id": 13,
            "content": "Oid[] getMechs() throws GSSException;"
          },
          {
            "id": 14,
            "content": "void add(GSSName name, int initLifetime, int acceptLifetime, Oid mech, int usage) throws GSSException;"
          },
          {
            "id": 15,
            "content": "boolean equals(@Nullable Object another);"
          },
          {
            "id": 16,
            "content": "int hashCode();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.security.jgss/share/classes/org/ietf/jgss/GSSName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "Oid NT_HOSTBASED_SERVICE;"
          },
          {
            "id": 1,
            "content": "Oid NT_USER_NAME;"
          },
          {
            "id": 2,
            "content": "Oid NT_MACHINE_UID_NAME;"
          },
          {
            "id": 3,
            "content": "Oid NT_STRING_UID_NAME;"
          },
          {
            "id": 4,
            "content": "Oid NT_ANONYMOUS;"
          },
          {
            "id": 5,
            "content": "Oid NT_EXPORT_NAME;"
          },
          {
            "id": 6,
            "content": "boolean equals(GSSName another) throws GSSException;"
          },
          {
            "id": 7,
            "content": "boolean equals(@Nullable Object another);"
          },
          {
            "id": 8,
            "content": "int hashCode();"
          },
          {
            "id": 9,
            "content": "GSSName canonicalize(Oid mech) throws GSSException;"
          },
          {
            "id": 10,
            "content": "byte[] export() throws GSSException;"
          },
          {
            "id": 11,
            "content": "String toString();"
          },
          {
            "id": 12,
            "content": "Oid getStringNameType() throws GSSException;"
          },
          {
            "id": 13,
            "content": "boolean isAnonymous();"
          },
          {
            "id": 14,
            "content": "boolean isMN();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.jfr/share/classes/jdk/jfr/internal/consumer/RecordingInput.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void require(int minimumBytes, String errorMessage) throws IOException;"
          },
          {
            "id": 1,
            "content": "public void setStreamed();"
          },
          {
            "id": 2,
            "content": "public void pollWait() throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.management/share/classes/java/lang/management/ManagementFactory.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings({ \"removal\", \"doclint:reference\" })"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.management/share/classes/javax/management/remote/JMXServerErrorException.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.xml/share/classes/com/sun/org/apache/xerces/internal/impl/PropertyManager.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.xml/share/classes/com/sun/org/apache/xalan/internal/xsltc/compiler/util/ErrorMsg.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static final String XPATH_LIMIT;"
          },
          {
            "id": 1,
            "content": "public static final String XPATH_GROUP_LIMIT;"
          },
          {
            "id": 2,
            "content": "public static final String XPATH_OPERATOR_LIMIT;"
          },
          {
            "id": 3,
            "content": "public static final String XPATH_TOTAL_OPERATOR_LIMIT;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.compiler/share/classes/com/sun/tools/javac/tree/TreeInfo.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static Type primaryPatternType(JCTree pat);"
          },
          {
            "id": 1,
            "content": "public static JCTree primaryPatternTypeTree(JCTree pat);"
          },
          {
            "id": 2,
            "content": "public static boolean expectedExhaustive(JCSwitch tree);"
          },
          {
            "id": 3,
            "content": "public static boolean unguardedCaseLabel(JCCaseLabel cse);"
          },
          {
            "id": 4,
            "content": "public static boolean isBooleanWithValue(JCExpression guard, int value);"
          },
          {
            "id": 5,
            "content": "public static boolean isNullCaseLabel(JCCaseLabel label);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Symbol.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Name name();"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "public Name name();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Types.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public Throwable fillInStackTrace();"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "public Throwable fillInStackTrace();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Resolve.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public Throwable fillInStackTrace();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.compiler/share/classes/com/sun/source/tree/Tree.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "CONSTANT_CASE_LABEL(ConstantCaseLabelTree.class),"
            },
            "methods": [
              {
                "id": 4,
                "content": "@PreviewFeature(feature = PreviewFeature.Feature.SWITCH_PATTERN_MATCHING, reflective = true)"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "PATTERN_CASE_LABEL(PatternCaseLabelTree.class),"
            },
            "methods": [
              {
                "id": 5,
                "content": "@PreviewFeature(feature = PreviewFeature.Feature.RECORD_PATTERNS, reflective = true)"
              }
            ]
          },
          {
            "declaration": {
              "id": 2,
              "content": "DECONSTRUCTION_PATTERN(DeconstructionPatternTree.class),"
            },
            "methods": []
          }
        ],
        "new_methods": [
          {
            "id": 3,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.SWITCH_PATTERN_MATCHING, reflective = true)"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.logging/share/classes/java/util/logging/LogManager.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.logging/share/classes/java/util/logging/LoggingMXBean.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/unix/classes/sun/nio/fs/UnixDirectoryStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "final UnixPath directory();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/sun/net/www/http/KeepAliveCache.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"removal\")"
          },
          {
            "id": 1,
            "content": "static int getUserKeepAliveSeconds(String type);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/sun/security/ssl/Utilities.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static <T> boolean contains(T[] array, T item);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/sun/security/tools/keytool/Main.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class SecretKeyConstraintsParameters implements ConstraintsParameters {"
            },
            "methods": [
              {
                "id": 1,
                "content": "@Override"
              },
              {
                "id": 2,
                "content": "public boolean anchorIsJdkCA();"
              },
              {
                "id": 3,
                "content": "@Override"
              },
              {
                "id": 4,
                "content": "public Set<Key> getKeys();"
              },
              {
                "id": 5,
                "content": "@Override"
              },
              {
                "id": 6,
                "content": "public Date getDate();"
              },
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "public String getVariant();"
              },
              {
                "id": 9,
                "content": "@Override"
              },
              {
                "id": 10,
                "content": "public String extendedExceptionMsg();"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/sun/security/util/BitArray.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public BitArray(int length, byte[] a, int ofs) throws IllegalArgumentException {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/sun/security/x509/AlgorithmId.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static final ObjectIdentifier SHA1withECDSA_oid;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/sun/nio/ch/FileChannelImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public long capacity();"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "public MemorySegment map(MapMode mode, long offset, long size, MemorySession session) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/jdk/internal/org/objectweb/asm/commons/AdviceAdapter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void visitVarInsn(final int opcode, final int varIndex);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/net/URL.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class ThreadTrackHolder {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/net/SocketException.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public SocketException(String msg, Throwable cause) {"
          },
          {
            "id": 1,
            "content": "public SocketException(Throwable cause) {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/net/package-info.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/net/InetAddress.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public sealed class InetAddress implements Serializable permits Inet4Address, Inet6Address {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/RegularEnumSet.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "final class RegularEnumSet<E extends Enum<E>> extends EnumSet<E> {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/Objects.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static String toIdentityString(Object o);"
          },
          {
            "id": 1,
            "content": "@ForceInline"
          },
          {
            "id": 2,
            "content": "@ForceInline"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/LinkedHashMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static <K, V> LinkedHashMap<K, V> newLinkedHashMap(int numMappings);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/HashMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static int calculateHashMapCapacity(int numMappings);"
          },
          {
            "id": 1,
            "content": "public static <K, V> HashMap<K, V> newHashMap(int numMappings);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/Observable.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/WeakHashMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static <K, V> WeakHashMap<K, V> newWeakHashMap(int numMappings);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/Random.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static final class RandomWrapper extends Random implements RandomGenerator {"
            },
            "methods": [
              {
                "id": 2,
                "content": "@Override"
              },
              {
                "id": 3,
                "content": "public void setSeed(long seed);"
              },
              {
                "id": 4,
                "content": "@Override"
              },
              {
                "id": 5,
                "content": "public boolean isDeprecated();"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "public void nextBytes(byte[] bytes);"
              },
              {
                "id": 8,
                "content": "@Override"
              },
              {
                "id": 9,
                "content": "public int nextInt();"
              },
              {
                "id": 10,
                "content": "@Override"
              },
              {
                "id": 11,
                "content": "public int nextInt(int bound);"
              },
              {
                "id": 12,
                "content": "@Override"
              },
              {
                "id": 13,
                "content": "public int nextInt(int origin, int bound);"
              },
              {
                "id": 14,
                "content": "@Override"
              },
              {
                "id": 15,
                "content": "public long nextLong();"
              },
              {
                "id": 16,
                "content": "@Override"
              },
              {
                "id": 17,
                "content": "public long nextLong(long bound);"
              },
              {
                "id": 18,
                "content": "@Override"
              },
              {
                "id": 19,
                "content": "public long nextLong(long origin, long bound);"
              },
              {
                "id": 20,
                "content": "@Override"
              },
              {
                "id": 21,
                "content": "public boolean nextBoolean();"
              },
              {
                "id": 22,
                "content": "@Override"
              },
              {
                "id": 23,
                "content": "public float nextFloat();"
              },
              {
                "id": 24,
                "content": "@Override"
              },
              {
                "id": 25,
                "content": "public float nextFloat(float bound);"
              },
              {
                "id": 26,
                "content": "@Override"
              },
              {
                "id": 27,
                "content": "public float nextFloat(float origin, float bound);"
              },
              {
                "id": 28,
                "content": "@Override"
              },
              {
                "id": 29,
                "content": "public double nextDouble();"
              },
              {
                "id": 30,
                "content": "@Override"
              },
              {
                "id": 31,
                "content": "public double nextDouble(double bound);"
              },
              {
                "id": 32,
                "content": "@Override"
              },
              {
                "id": 33,
                "content": "public double nextDouble(double origin, double bound);"
              },
              {
                "id": 34,
                "content": "@Override"
              },
              {
                "id": 35,
                "content": "public double nextExponential();"
              },
              {
                "id": 36,
                "content": "@Override"
              },
              {
                "id": 37,
                "content": "public double nextGaussian();"
              },
              {
                "id": 38,
                "content": "@Override"
              },
              {
                "id": 39,
                "content": "public double nextGaussian(double mean, double stddev);"
              },
              {
                "id": 40,
                "content": "@Override"
              },
              {
                "id": 41,
                "content": "public IntStream ints(long streamSize);"
              },
              {
                "id": 42,
                "content": "@Override"
              },
              {
                "id": 43,
                "content": "public IntStream ints();"
              },
              {
                "id": 44,
                "content": "@Override"
              },
              {
                "id": 45,
                "content": "public IntStream ints(long streamSize, int randomNumberOrigin, int randomNumberBound);"
              },
              {
                "id": 46,
                "content": "@Override"
              },
              {
                "id": 47,
                "content": "public IntStream ints(int randomNumberOrigin, int randomNumberBound);"
              },
              {
                "id": 48,
                "content": "@Override"
              },
              {
                "id": 49,
                "content": "public LongStream longs(long streamSize);"
              },
              {
                "id": 50,
                "content": "@Override"
              },
              {
                "id": 51,
                "content": "public LongStream longs();"
              },
              {
                "id": 52,
                "content": "@Override"
              },
              {
                "id": 53,
                "content": "public LongStream longs(long streamSize, long randomNumberOrigin, long randomNumberBound);"
              },
              {
                "id": 54,
                "content": "@Override"
              },
              {
                "id": 55,
                "content": "public LongStream longs(long randomNumberOrigin, long randomNumberBound);"
              },
              {
                "id": 56,
                "content": "@Override"
              },
              {
                "id": 57,
                "content": "public DoubleStream doubles(long streamSize);"
              },
              {
                "id": 58,
                "content": "@Override"
              },
              {
                "id": 59,
                "content": "public DoubleStream doubles();"
              },
              {
                "id": 60,
                "content": "@Override"
              },
              {
                "id": 61,
                "content": "public DoubleStream doubles(long streamSize, double randomNumberOrigin, double randomNumberBound);"
              },
              {
                "id": 62,
                "content": "@Override"
              },
              {
                "id": 63,
                "content": "public DoubleStream doubles(double randomNumberOrigin, double randomNumberBound);"
              },
              {
                "id": 64,
                "content": "@Override"
              },
              {
                "id": 65,
                "content": "protected int next(int bits);"
              },
              {
                "id": 66,
                "content": "@Override"
              },
              {
                "id": 67,
                "content": "public String toString();"
              },
              {
                "id": 68,
                "content": "public static Random from(RandomGenerator generator);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "@SuppressWarnings(\"serial\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/Locale.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Deprecated()"
          },
          {
            "id": 1,
            "content": "@Deprecated()"
          },
          {
            "id": 2,
            "content": "@Deprecated()"
          },
          {
            "id": 3,
            "content": "public static Locale of(String language, String country, String variant);"
          },
          {
            "id": 4,
            "content": "public static Locale of(String language, String country);"
          },
          {
            "id": 5,
            "content": "public static Locale of(String language);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/JumboEnumSet.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "final class JumboEnumSet<E extends Enum<E>> extends EnumSet<E> {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/Formatter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class FixedString implements FormatString {"
            },
            "methods": [
              {
                "id": 3,
                "content": "public void print(Formatter fmt, Object arg, Locale l) throws IOException;"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "private static class FormatSpecifier implements FormatString {"
            },
            "methods": [
              {
                "id": 4,
                "content": "public void print(Formatter fmt, Object arg, Locale l) throws IOException;"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 2,
            "content": "void print(Formatter fmt, Object arg, Locale l) throws IOException;"
          },
          {
            "id": 5,
            "content": "public static boolean contains(int flags, int f);"
          },
          {
            "id": 6,
            "content": "@Pure"
          },
          {
            "id": 7,
            "content": "@EnsuresNonEmptyIf(result = true, expression = \"this\")"
          },
          {
            "id": 8,
            "content": "public static boolean containsAny(int flags, int f);"
          },
          {
            "id": 9,
            "content": "public static int remove(int flags, int f);"
          },
          {
            "id": 10,
            "content": "public static int parse(String s, int start, int end);"
          },
          {
            "id": 11,
            "content": "public static String toString(int f);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/HashSet.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static <T> HashSet<T> newHashSet(int numElements);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/LinkedHashSet.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static <T> LinkedHashSet<T> newLinkedHashSet(int numElements);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/EnumSet.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public abstract sealed class EnumSet<E extends Enum<E>> extends AbstractSet<E> implements Cloneable, java.io.Serializable permits JumboEnumSet, RegularEnumSet {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/Date.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/ServiceLoader.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/jar/JarFile.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class ThreadTrackHolder {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/zip/InflaterInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public void mark(int readlimit);"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "public void reset() throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/zip/Deflater.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "boolean shouldFinish();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/concurrent/Future.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "default V resultNow();"
          },
          {
            "id": 1,
            "content": "default Throwable exceptionNow();"
          },
          {
            "id": 2,
            "content": "enum State {"
          },
          {
            "id": 3,
            "content": "RUNNING, SUCCESS, FAILED, CANCELLED"
          },
          {
            "id": 4,
            "content": "default State state();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/concurrent/ForkJoinPool.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public final ForkJoinWorkerThread newThread(ForkJoinPool pool);"
          },
          {
            "id": 1,
            "content": "static ForkJoinWorkerThread newRegularWithACC(ForkJoinPool pool);"
          },
          {
            "id": 2,
            "content": "static ForkJoinWorkerThread newCommonWithACC(ForkJoinPool pool);"
          },
          {
            "id": 3,
            "content": "static ForkJoinTask<?> getAndClearSlot(ForkJoinTask<?>[] a, int i);"
          },
          {
            "id": 4,
            "content": "static boolean casSlotToNull(ForkJoinTask<?>[] a, int i, ForkJoinTask<?> c);"
          },
          {
            "id": 5,
            "content": "final void forcePhaseActive();"
          },
          {
            "id": 6,
            "content": "final int getAndSetAccess(int v);"
          },
          {
            "id": 7,
            "content": "final void releaseAccess();"
          },
          {
            "id": 8,
            "content": "final void push(ForkJoinTask<?> task, ForkJoinPool pool, boolean signalIfEmpty);"
          },
          {
            "id": 9,
            "content": "final ForkJoinTask<?> nextLocalTask(int fifo);"
          },
          {
            "id": 10,
            "content": "final boolean tryUnpush(ForkJoinTask<?> task, boolean owned);"
          },
          {
            "id": 11,
            "content": "final ForkJoinTask<?> poll(ForkJoinPool pool);"
          },
          {
            "id": 12,
            "content": "final ForkJoinTask<?> tryPoll();"
          },
          {
            "id": 13,
            "content": "final void topLevelExec(ForkJoinTask<?> task, WorkQueue src);"
          },
          {
            "id": 14,
            "content": "final int tryRemoveAndExec(ForkJoinTask<?> task, boolean owned);"
          },
          {
            "id": 15,
            "content": "final void setClearThreadLocals();"
          },
          {
            "id": 16,
            "content": "final int helpJoin(ForkJoinTask<?> task, WorkQueue w, boolean timed);"
          },
          {
            "id": 17,
            "content": "final int helpComplete(ForkJoinTask<?> task, WorkQueue w, boolean owned, boolean timed);"
          },
          {
            "id": 18,
            "content": "static final int helpQuiescePool(ForkJoinPool pool, long nanos, boolean interruptible);"
          },
          {
            "id": 19,
            "content": "final WorkQueue submissionQueue(boolean isSubmit);"
          },
          {
            "id": 20,
            "content": "public <T> ForkJoinTask<T> lazySubmit(ForkJoinTask<T> task);"
          },
          {
            "id": 21,
            "content": "public int setParallelism(int size);"
          },
          {
            "id": 22,
            "content": "@Override"
          },
          {
            "id": 23,
            "content": "public void close();"
          },
          {
            "id": 24,
            "content": "void endCompensatedBlock(long post);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/concurrent/ExecutorService.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public interface ExecutorService extends Executor, AutoCloseable {"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "default void close();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/concurrent/ConcurrentHashMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "abstract static sealed class CollectionView<K, V, E> implements Collection<E>, java.io.Serializable permits EntrySetView, KeySetView, ValuesView {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "public static final class KeySetView<K, V> extends CollectionView<K, V, K> implements Set<K>, java.io.Serializable {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/concurrent/ForkJoinTask.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "final void markPoolSubmission();"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "public State state();"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "public V resultNow();"
          },
          {
            "id": 5,
            "content": "@Override"
          },
          {
            "id": 6,
            "content": "public Throwable exceptionNow();"
          },
          {
            "id": 7,
            "content": "public final boolean quietlyJoin(long timeout, TimeUnit unit) throws InterruptedException;"
          },
          {
            "id": 8,
            "content": "public final boolean quietlyJoinUninterruptibly(long timeout, TimeUnit unit);"
          },
          {
            "id": 9,
            "content": "public static <T> ForkJoinTask<T> adaptInterruptible(Callable<? extends T> callable);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/concurrent/Executors.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS)"
          },
          {
            "id": 1,
            "content": "public static ExecutorService newThreadPerTaskExecutor(ThreadFactory threadFactory);"
          },
          {
            "id": 2,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS)"
          },
          {
            "id": 3,
            "content": "public static ExecutorService newVirtualThreadPerTaskExecutor();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/concurrent/FutureTask.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public V resultNow();"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "public Throwable exceptionNow();"
          },
          {
            "id": 4,
            "content": "@Override"
          },
          {
            "id": 5,
            "content": "public State state();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/security/spec/PSSParameterSpec.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Deprecated()"
          },
          {
            "id": 1,
            "content": "@Deprecated()"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/FileSystem.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public abstract boolean isInvalid(File f);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/ObjectInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/ObjectOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/FileOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/ObjectStreamException.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "protected ObjectStreamException(String message, Throwable cause) {"
          },
          {
            "id": 1,
            "content": "protected ObjectStreamException(Throwable cause) {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/FileInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@Override"
          },
          {
            "id": 5,
            "content": "@Override"
          },
          {
            "id": 6,
            "content": "@Override"
          },
          {
            "id": 7,
            "content": "@Override"
          },
          {
            "id": 8,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/StringBufferInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/SequenceInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/PushbackInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void mark(@NonNegative int readlimit);"
          },
          {
            "id": 1,
            "content": "public void reset() throws IOException;"
          },
          {
            "id": 2,
            "content": "public void close() throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/FilenameFilter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/ObjectStreamClass.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class ObjectStreamClass implements Serializable {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "private static class FieldReflectorKey {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/InputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void mark(@NonNegative int readlimit);"
          },
          {
            "id": 1,
            "content": "public void reset() throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/BufferedInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public int read() throws IOException;"
          },
          {
            "id": 1,
            "content": "public int read(byte[] b, @IndexOrHigh({ \"#1\" }) int off, @LTLengthOf(value = { \"#1\" }, offset = { \"#2 - 1\" }) @NonNegative int len) throws IOException;"
          },
          {
            "id": 2,
            "content": "public long skip(long n) throws IOException;"
          },
          {
            "id": 3,
            "content": "public int available() throws IOException;"
          },
          {
            "id": 4,
            "content": "public void mark(int readlimit);"
          },
          {
            "id": 5,
            "content": "public void reset() throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/RandomAccessFile.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public long length() throws IOException;"
          },
          {
            "id": 1,
            "content": "public void setLength(@NonNegative long newLength) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/BufferedOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void write(@PolySigned int b) throws IOException;"
          },
          {
            "id": 1,
            "content": "public void flush() throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/InvalidObjectException.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public InvalidObjectException(String reason, Throwable cause) {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/PipedInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/FilterInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void mark(@NonNegative int readlimit);"
          },
          {
            "id": 1,
            "content": "public void reset() throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/ByteArrayInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@Override"
          },
          {
            "id": 5,
            "content": "@Override"
          },
          {
            "id": 6,
            "content": "@Override"
          },
          {
            "id": 7,
            "content": "@Override"
          },
          {
            "id": 8,
            "content": "@Override"
          },
          {
            "id": 9,
            "content": "@Override"
          },
          {
            "id": 10,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/ByteArrayOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/PipedOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/math/BigInteger.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private abstract static sealed class RecursiveOp extends RecursiveTask<BigInteger> {"
            },
            "methods": [
              {
                "id": 5,
                "content": "protected RecursiveTask<BigInteger> forkOrInvoke();"
              },
              {
                "id": 6,
                "content": "@SuppressWarnings(\"serial\")"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "private static final class RecursiveMultiply extends RecursiveOp {"
            },
            "methods": [
              {
                "id": 7,
                "content": "public RecursiveMultiply(BigInteger a, BigInteger b, boolean parallel, int depth) {"
              },
              {
                "id": 8,
                "content": "@Override"
              },
              {
                "id": 9,
                "content": "public BigInteger compute();"
              },
              {
                "id": 10,
                "content": "@SuppressWarnings(\"serial\")"
              }
            ]
          },
          {
            "declaration": {
              "id": 2,
              "content": "private static final class RecursiveSquare extends RecursiveOp {"
            },
            "methods": [
              {
                "id": 11,
                "content": "public RecursiveSquare(BigInteger a, boolean parallel, int depth) {"
              },
              {
                "id": 12,
                "content": "@Override"
              },
              {
                "id": 13,
                "content": "public BigInteger compute();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 3,
            "content": "public BigInteger parallelMultiply(BigInteger val);"
          },
          {
            "id": 4,
            "content": "@SuppressWarnings(\"serial\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/math/BigDecimal.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static final BigDecimal TWO;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/time/ZoneId.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public abstract sealed class ZoneId implements Serializable permits ZoneOffset, ZoneRegion {"
            },
            "methods": [
              {
                "id": 1,
                "content": "abstract ZoneOffset getOffset(long epochSecond);"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/System.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/Integer.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@IntrinsicCandidate"
          },
          {
            "id": 1,
            "content": "@IntrinsicCandidate"
          },
          {
            "id": 2,
            "content": "@IntrinsicCandidate"
          },
          {
            "id": 3,
            "content": "public static int compress(int i, int mask);"
          },
          {
            "id": 4,
            "content": "@IntrinsicCandidate"
          },
          {
            "id": 5,
            "content": "public static int expand(int i, int mask);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/StackStreamFactory.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "protected final ContinuationScope contScope;"
          },
          {
            "id": 1,
            "content": "protected Continuation continuation;"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "final boolean filter(int index);"
          },
          {
            "id": 4,
            "content": "final boolean filter(int index);"
          },
          {
            "id": 5,
            "content": "@Override"
          },
          {
            "id": 6,
            "content": "@Override"
          },
          {
            "id": 7,
            "content": "final boolean filter(int index);"
          },
          {
            "id": 8,
            "content": "abstract boolean filter(int index);"
          },
          {
            "id": 9,
            "content": "final boolean isAtBottom();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/InheritableThreadLocal.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/StackTraceElement.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static StackTraceElement[] of(Object x, int depth);"
          },
          {
            "id": 1,
            "content": "static StackTraceElement[] of(StackTraceElement[] stackTrace);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/Float.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@IntVal(32)"
          },
          {
            "id": 1,
            "content": "public static final int SIZE;"
          },
          {
            "id": 2,
            "content": "@IntVal(24)"
          },
          {
            "id": 3,
            "content": "public static final int PRECISION;"
          },
          {
            "id": 4,
            "content": "@IntrinsicCandidate"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/Long.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@IntrinsicCandidate"
          },
          {
            "id": 1,
            "content": "@IntrinsicCandidate"
          },
          {
            "id": 2,
            "content": "@IntrinsicCandidate"
          },
          {
            "id": 3,
            "content": "public static long compress(long i, long mask);"
          },
          {
            "id": 4,
            "content": "@IntrinsicCandidate"
          },
          {
            "id": 5,
            "content": "public static long expand(long i, long mask);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/Object.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public final void wait(@UnknownInitialization Object this, @NonNegative long timeoutMillis) throws InterruptedException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/Throwable.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "boolean isLockedByCurrentThread();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/Character.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static final UnicodeBlock ARABIC_EXTENDED_B;"
          },
          {
            "id": 1,
            "content": "public static final UnicodeBlock VITHKUQI;"
          },
          {
            "id": 2,
            "content": "public static final UnicodeBlock LATIN_EXTENDED_F;"
          },
          {
            "id": 3,
            "content": "public static final UnicodeBlock OLD_UYGHUR;"
          },
          {
            "id": 4,
            "content": "public static final UnicodeBlock UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_A;"
          },
          {
            "id": 5,
            "content": "public static final UnicodeBlock CYPRO_MINOAN;"
          },
          {
            "id": 6,
            "content": "public static final UnicodeBlock TANGSA;"
          },
          {
            "id": 7,
            "content": "public static final UnicodeBlock KANA_EXTENDED_B;"
          },
          {
            "id": 8,
            "content": "public static final UnicodeBlock ZNAMENNY_MUSICAL_NOTATION;"
          },
          {
            "id": 9,
            "content": "public static final UnicodeBlock LATIN_EXTENDED_G;"
          },
          {
            "id": 10,
            "content": "public static final UnicodeBlock TOTO;"
          },
          {
            "id": 11,
            "content": "public static final UnicodeBlock ETHIOPIC_EXTENDED_B;"
          },
          {
            "id": 12,
            "content": "VITHKUQI,"
          },
          {
            "id": 13,
            "content": "OLD_UYGHUR,"
          },
          {
            "id": 14,
            "content": "CYPRO_MINOAN,"
          },
          {
            "id": 15,
            "content": "TANGSA,"
          },
          {
            "id": 16,
            "content": "TOTO,"
          },
          {
            "id": 17,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          },
          {
            "id": 18,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          },
          {
            "id": 19,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          },
          {
            "id": 20,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/ThreadLocal.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "T getCarrierThreadLocal();"
          },
          {
            "id": 1,
            "content": "void setCarrierThreadLocal(T value);"
          },
          {
            "id": 2,
            "content": "int size();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/StackWalker.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static StackWalker getInstance(ContinuationScope contScope);"
          },
          {
            "id": 1,
            "content": "static StackWalker getInstance(Option option, ContinuationScope contScope);"
          },
          {
            "id": 2,
            "content": "static StackWalker getInstance(Set<Option> options, ContinuationScope contScope);"
          },
          {
            "id": 3,
            "content": "static StackWalker newInstance(Set<Option> options, ExtendedOption extendedOption, ContinuationScope contScope);"
          },
          {
            "id": 4,
            "content": "static StackWalker newInstance(Set<Option> options, ExtendedOption extendedOption, ContinuationScope contScope, Continuation continuation);"
          },
          {
            "id": 5,
            "content": "ContinuationScope getContScope();"
          },
          {
            "id": 6,
            "content": "Continuation getContinuation();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/Double.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@IntVal(64)"
          },
          {
            "id": 1,
            "content": "public static final int SIZE;"
          },
          {
            "id": 2,
            "content": "@IntVal(53)"
          },
          {
            "id": 3,
            "content": "public static final int PRECISION;"
          },
          {
            "id": 4,
            "content": "@IntrinsicCandidate"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/AbstractStringBuilder.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "abstract sealed class AbstractStringBuilder implements Appendable, CharSequence permits StringBuilder, StringBuffer {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/Runnable.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "void run(@PolyUI Runnable this);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/StringCoding.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static boolean hasNegatives(byte[] ba, int off, int len);"
          },
          {
            "id": 1,
            "content": "public static int countPositives(byte[] ba, int off, int len);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/Math.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static final double TAU;"
          },
          {
            "id": 1,
            "content": "@IntrinsicCandidate"
          },
          {
            "id": 2,
            "content": "@IntrinsicCandidate"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/Thread.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class FieldHolder {"
            },
            "methods": [
              {
                "id": 4,
                "content": "static Object extentLocalBindings();"
              },
              {
                "id": 5,
                "content": "static void setExtentLocalBindings(Object bindings);"
              },
              {
                "id": 6,
                "content": "void inheritExtentLocalBindings(ThreadContainer container);"
              },
              {
                "id": 7,
                "content": "Continuation getContinuation();"
              },
              {
                "id": 8,
                "content": "void setContinuation(Continuation cont);"
              },
              {
                "id": 9,
                "content": "@IntrinsicCandidate"
              },
              {
                "id": 10,
                "content": "static native Thread currentCarrierThread();"
              },
              {
                "id": 11,
                "content": "@IntrinsicCandidate"
              },
              {
                "id": 12,
                "content": "native void setCurrentThread(Thread thread);"
              },
              {
                "id": 13,
                "content": "@IntrinsicCandidate"
              },
              {
                "id": 14,
                "content": "static native Object[] extentLocalCache();"
              },
              {
                "id": 15,
                "content": "@IntrinsicCandidate"
              },
              {
                "id": 16,
                "content": "static native void setExtentLocalCache(Object[] cache);"
              },
              {
                "id": 17,
                "content": "public static void yield();"
              },
              {
                "id": 18,
                "content": "public static void sleep(long millis) throws InterruptedException;"
              },
              {
                "id": 19,
                "content": "public static void sleep(Duration duration) throws InterruptedException;"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "private static class ThreadIdentifiers {"
            },
            "methods": [
              {
                "id": 20,
                "content": "static long next();"
              },
              {
                "id": 21,
                "content": "@PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS)"
              },
              {
                "id": 22,
                "content": "public static Builder.OfPlatform ofPlatform();"
              },
              {
                "id": 23,
                "content": "@PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS)"
              },
              {
                "id": 24,
                "content": "public static Builder.OfVirtual ofVirtual();"
              },
              {
                "id": 25,
                "content": "@PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS)"
              },
              {
                "id": 26,
                "content": "public sealed interface Builder permits Builder.OfPlatform, Builder.OfVirtual, ThreadBuilders.BaseThreadBuilder {"
              },
              {
                "id": 27,
                "content": "Builder name(String name);"
              },
              {
                "id": 28,
                "content": "Builder name(String prefix, long start);"
              },
              {
                "id": 29,
                "content": "Builder allowSetThreadLocals(boolean allow);"
              },
              {
                "id": 30,
                "content": "Builder inheritInheritableThreadLocals(boolean inherit);"
              },
              {
                "id": 31,
                "content": "Builder uncaughtExceptionHandler(UncaughtExceptionHandler ueh);"
              },
              {
                "id": 32,
                "content": "Thread unstarted(Runnable task);"
              },
              {
                "id": 33,
                "content": "Thread start(Runnable task);"
              },
              {
                "id": 34,
                "content": "ThreadFactory factory();"
              },
              {
                "id": 35,
                "content": "@PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS)"
              },
              {
                "id": 36,
                "content": "sealed interface OfPlatform extends Builder permits ThreadBuilders.PlatformThreadBuilder {"
              },
              {
                "id": 37,
                "content": "@Override"
              },
              {
                "id": 38,
                "content": "OfPlatform name(String name);"
              },
              {
                "id": 39,
                "content": "@Override"
              },
              {
                "id": 40,
                "content": "OfPlatform name(String prefix, long start);"
              },
              {
                "id": 41,
                "content": "@Override"
              },
              {
                "id": 42,
                "content": "OfPlatform allowSetThreadLocals(boolean allow);"
              },
              {
                "id": 43,
                "content": "@Override"
              },
              {
                "id": 44,
                "content": "OfPlatform inheritInheritableThreadLocals(boolean inherit);"
              },
              {
                "id": 45,
                "content": "@Override"
              },
              {
                "id": 46,
                "content": "OfPlatform uncaughtExceptionHandler(UncaughtExceptionHandler ueh);"
              },
              {
                "id": 47,
                "content": "OfPlatform group(ThreadGroup group);"
              },
              {
                "id": 48,
                "content": "OfPlatform daemon(boolean on);"
              },
              {
                "id": 49,
                "content": "default OfPlatform daemon();"
              },
              {
                "id": 50,
                "content": "OfPlatform priority(int priority);"
              },
              {
                "id": 51,
                "content": "OfPlatform stackSize(long stackSize);"
              },
              {
                "id": 52,
                "content": "@PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS)"
              },
              {
                "id": 53,
                "content": "sealed interface OfVirtual extends Builder permits ThreadBuilders.VirtualThreadBuilder {"
              },
              {
                "id": 54,
                "content": "@Override"
              },
              {
                "id": 55,
                "content": "OfVirtual name(String name);"
              },
              {
                "id": 56,
                "content": "@Override"
              },
              {
                "id": 57,
                "content": "OfVirtual name(String prefix, long start);"
              },
              {
                "id": 58,
                "content": "@Override"
              },
              {
                "id": 59,
                "content": "OfVirtual allowSetThreadLocals(boolean allow);"
              },
              {
                "id": 60,
                "content": "@Override"
              },
              {
                "id": 61,
                "content": "OfVirtual inheritInheritableThreadLocals(boolean inherit);"
              },
              {
                "id": 62,
                "content": "@Override"
              },
              {
                "id": 63,
                "content": "OfVirtual uncaughtExceptionHandler(UncaughtExceptionHandler ueh);"
              }
            ]
          },
          {
            "declaration": {
              "id": 2,
              "content": "private static class ThreadNumbering {"
            },
            "methods": [
              {
                "id": 64,
                "content": "static int next();"
              },
              {
                "id": 65,
                "content": "static String genThreadName();"
              },
              {
                "id": 66,
                "content": "public Thread(@Nullable Runnable task) {"
              },
              {
                "id": 67,
                "content": "public Thread(@Nullable ThreadGroup group, @Nullable Runnable task) {"
              },
              {
                "id": 68,
                "content": "public Thread(@Nullable Runnable task, String name) {"
              },
              {
                "id": 69,
                "content": "public Thread(@Nullable ThreadGroup group, @Nullable Runnable task, String name) {"
              },
              {
                "id": 70,
                "content": "public Thread(@Nullable ThreadGroup group, @Nullable Runnable task, String name, long stackSize) {"
              },
              {
                "id": 71,
                "content": "public Thread(ThreadGroup group, Runnable task, String name, long stackSize, boolean inheritInheritableThreadLocals) {"
              },
              {
                "id": 72,
                "content": "@PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS)"
              },
              {
                "id": 73,
                "content": "public static Thread startVirtualThread(Runnable task);"
              },
              {
                "id": 74,
                "content": "@PreviewFeature(feature = PreviewFeature.Feature.VIRTUAL_THREADS)"
              },
              {
                "id": 75,
                "content": "public final boolean isVirtual();"
              },
              {
                "id": 76,
                "content": "public void start();"
              },
              {
                "id": 77,
                "content": "void start(ThreadContainer container);"
              },
              {
                "id": 78,
                "content": "void clearReferences();"
              },
              {
                "id": 79,
                "content": "final void setInterrupt();"
              },
              {
                "id": 80,
                "content": "final void clearInterrupt();"
              },
              {
                "id": 81,
                "content": "boolean getAndClearInterrupt();"
              },
              {
                "id": 82,
                "content": "public final boolean isAlive(@GuardSatisfied Thread this);"
              },
              {
                "id": 83,
                "content": "@Pure"
              },
              {
                "id": 84,
                "content": "boolean alive();"
              }
            ]
          },
          {
            "declaration": {
              "id": 3,
              "content": "private static class Constants {"
            },
            "methods": [
              {
                "id": 101,
                "content": "static ThreadGroup virtualThreadGroup();"
              },
              {
                "id": 102,
                "content": "ThreadContainer threadContainer();"
              },
              {
                "id": 103,
                "content": "void setThreadContainer(ThreadContainer container);"
              },
              {
                "id": 104,
                "content": "StackableScope headStackableScopes();"
              },
              {
                "id": 105,
                "content": "static void setHeadStackableScope(StackableScope scope);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 85,
            "content": "void priority(int newPriority);"
          },
          {
            "id": 86,
            "content": "public final void join(long millis) throws InterruptedException;"
          },
          {
            "id": 87,
            "content": "public final void join(long millis, int nanos) throws InterruptedException;"
          },
          {
            "id": 88,
            "content": "public final boolean join(Duration duration) throws InterruptedException;"
          },
          {
            "id": 89,
            "content": "void daemon(boolean on);"
          },
          {
            "id": 90,
            "content": "StackTraceElement[] asyncGetStackTrace();"
          },
          {
            "id": 91,
            "content": "static Thread[] getAllThreads();"
          },
          {
            "id": 92,
            "content": "@Deprecated()"
          },
          {
            "id": 93,
            "content": "public final long threadId();"
          },
          {
            "id": 94,
            "content": "State threadState();"
          },
          {
            "id": 95,
            "content": "boolean isTerminated();"
          },
          {
            "id": 96,
            "content": "public static void setDefaultUncaughtExceptionHandler(@Nullable UncaughtExceptionHandler ueh);"
          },
          {
            "id": 97,
            "content": "public void setUncaughtExceptionHandler(@Nullable UncaughtExceptionHandler ueh);"
          },
          {
            "id": 98,
            "content": "void uncaughtExceptionHandler(UncaughtExceptionHandler ueh);"
          },
          {
            "id": 99,
            "content": "void dispatchUncaughtException(Throwable e);"
          },
          {
            "id": 100,
            "content": "@SuppressWarnings(\"removal\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/StrictMath.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static final double TAU;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/ref/SoftReference.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public non-sealed class SoftReference<T> extends Reference<T> {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/ref/ReferenceQueue.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class Null extends ReferenceQueue<Object> {"
            },
            "methods": [
              {
                "id": 1,
                "content": "public Null() {"
              },
              {
                "id": 2,
                "content": "@Override"
              },
              {
                "id": 3,
                "content": "boolean enqueue(Reference<?> r);"
              },
              {
                "id": 4,
                "content": "void signal();"
              },
              {
                "id": 5,
                "content": "void await() throws InterruptedException;"
              },
              {
                "id": 6,
                "content": "void await(long timeoutMillis) throws InterruptedException;"
              },
              {
                "id": 7,
                "content": "final boolean enqueue0(Reference<? extends T> r);"
              },
              {
                "id": 8,
                "content": "final boolean headIsNull();"
              },
              {
                "id": 9,
                "content": "final Reference<? extends T> poll0();"
              },
              {
                "id": 10,
                "content": "final Reference<? extends T> remove0(long timeout) throws IllegalArgumentException, InterruptedException;"
              },
              {
                "id": 11,
                "content": "final Reference<? extends T> remove0() throws InterruptedException;"
              },
              {
                "id": 12,
                "content": "public Reference<? extends T> remove(long timeout) throws InterruptedException;"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/ref/Reference.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public abstract sealed class Reference<T> permits PhantomReference, SoftReference, WeakReference, FinalReference {"
            },
            "methods": []
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "static void startReferenceHandlerThread(ThreadGroup tg);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/ref/Finalizer.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static void startFinalizerThread(ThreadGroup tg);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/ref/PhantomReference.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public non-sealed class PhantomReference<T> extends Reference<T> {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/ref/WeakReference.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public non-sealed class WeakReference<T> extends Reference<T> {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/ref/FinalReference.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "sealed class FinalReference<T> extends Reference<T> permits Finalizer {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/invoke/CallSite.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public abstract sealed class CallSite permits ConstantCallSite, MutableCallSite, VolatileCallSite {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/invoke/MethodType.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static MethodType methodType(Class<?> rtype, Class<?>[] ptypes, boolean trusted);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/invoke/MethodHandles.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          },
          {
            "id": 1,
            "content": "static MethodHandle dropArgumentsTrusted(MethodHandle target, int pos, Class<?>[] valueTypes);"
          },
          {
            "id": 2,
            "content": "static MethodHandle dropArguments(MethodHandle target, int pos, Class<?> valueType1);"
          },
          {
            "id": 3,
            "content": "static MethodHandle dropArguments(MethodHandle target, int pos, Class<?> valueType1, Class<?> valueType2);"
          },
          {
            "id": 4,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.FOREIGN)"
          },
          {
            "id": 5,
            "content": "public static VarHandle memorySegmentViewVarHandle(ValueLayout layout);"
          },
          {
            "id": 6,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.FOREIGN)"
          },
          {
            "id": 7,
            "content": "public static VarHandle filterValue(VarHandle target, MethodHandle filterToTarget, MethodHandle filterFromTarget);"
          },
          {
            "id": 8,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.FOREIGN)"
          },
          {
            "id": 9,
            "content": "public static VarHandle filterCoordinates(VarHandle target, int pos, MethodHandle... filters);"
          },
          {
            "id": 10,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.FOREIGN)"
          },
          {
            "id": 11,
            "content": "public static VarHandle insertCoordinates(VarHandle target, int pos, Object... values);"
          },
          {
            "id": 12,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.FOREIGN)"
          },
          {
            "id": 13,
            "content": "public static VarHandle permuteCoordinates(VarHandle target, List<Class<?>> newCoordinates, int... reorder);"
          },
          {
            "id": 14,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.FOREIGN)"
          },
          {
            "id": 15,
            "content": "public static VarHandle collectCoordinates(VarHandle target, int pos, MethodHandle filter);"
          },
          {
            "id": 16,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.FOREIGN)"
          },
          {
            "id": 17,
            "content": "public static VarHandle dropCoordinates(VarHandle target, int pos, Class<?>... valueTypes);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/invoke/MethodHandleImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "static final class AsVarargsCollector extends DelegatingMethodHandle {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "static final class CountingWrapper extends DelegatingMethodHandle {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 2,
              "content": "static final class WrappedMember extends DelegatingMethodHandle {"
            },
            "methods": []
          }
        ],
        "new_methods": [
          {
            "id": 3,
            "content": "static MethodHandle makeTryFinally(MethodHandle target, MethodHandle cleanup, Class<?> rtype, Class<?>[] argTypes);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/reflect/Proxy.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static Object invokeDefault(Object proxy, Method method, Object[] args, Class<?> caller) throws Throwable;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/reflect/ReflectAccess.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Object invokeDefault(Object proxy, Method method, Object[] args, Class<?> caller) throws Throwable;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/nio/StringCharBuffer.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "final class StringCharBuffer extends CharBuffer {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/nio/Buffer.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public abstract sealed class Buffer permits ByteBuffer, CharBuffer, DoubleBuffer, FloatBuffer, IntBuffer, LongBuffer, ShortBuffer {"
            },
            "methods": [
              {
                "id": 1,
                "content": "final MemorySessionImpl session();"
              },
              {
                "id": 2,
                "content": "final void checkSession();"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/nio/charset/Charset.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class ThreadTrackHolder {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/nio/channels/FileChannel.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.FOREIGN)"
          },
          {
            "id": 1,
            "content": "public MemorySegment map(MapMode mode, long offset, long size, MemorySession session) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/text/DecimalFormatSymbols.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Locale getLocale();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/text/Bidi.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/javax/net/ssl/X509KeyManager.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "String @Nullable [] getClientAliases(String keyType, Principal @Nullable [] issuers);"
          },
          {
            "id": 1,
            "content": "String chooseClientAlias(String[] keyType, Principal @Nullable [] issuers, @Nullable Socket socket);"
          },
          {
            "id": 2,
            "content": "String @Nullable [] getServerAliases(String keyType, Principal @Nullable [] issuers);"
          },
          {
            "id": 3,
            "content": "String chooseServerAlias(String keyType, Principal @Nullable [] issuers, @Nullable Socket socket);"
          },
          {
            "id": 4,
            "content": "X509Certificate @Nullable [] getCertificateChain(String alias);"
          },
          {
            "id": 5,
            "content": "PrivateKey getPrivateKey(String alias);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/javax/net/ssl/TrustManagerFactory.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static String getDefaultAlgorithm();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.jdi/share/classes/com/sun/tools/jdi/EventRequestManagerImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "abstract class ThreadLifecycleEventRequestImpl extends ThreadVisibleEventRequestImpl {"
            },
            "methods": [
              {
                "id": 3,
                "content": "public synchronized void addPlatformThreadsOnlyFilter();"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "class ThreadDeathRequestImpl extends ThreadLifecycleEventRequestImpl implements ThreadDeathRequest {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 2,
              "content": "class ThreadStartRequestImpl extends ThreadLifecycleEventRequestImpl implements ThreadStartRequest {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.jdi/share/classes/com/sun/tools/jdi/VirtualMachineImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "boolean mayCreateVirtualThreads();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/ClassWriterImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "protected final ClassTree classTree;"
          },
          {
            "id": 1,
            "content": "public void printDocument(Content content) throws DocFileIOException;"
          },
          {
            "id": 2,
            "content": "public Content getClassInfo(Content classInfo);"
          },
          {
            "id": 3,
            "content": "public void addClassSignature(Content classInfo);"
          },
          {
            "id": 4,
            "content": "public void addClassDescription(Content classInfo);"
          },
          {
            "id": 5,
            "content": "public void addClassTagInfo(Content classInfo);"
          },
          {
            "id": 6,
            "content": "public void addClassTree(Content target);"
          },
          {
            "id": 7,
            "content": "public void addParamInfo(Content target);"
          },
          {
            "id": 8,
            "content": "public void addSubClassInfo(Content target);"
          },
          {
            "id": 9,
            "content": "public void addSubInterfacesInfo(Content target);"
          },
          {
            "id": 10,
            "content": "public void addInterfaceUsageInfo(Content target);"
          },
          {
            "id": 11,
            "content": "public void addImplementedInterfacesInfo(Content target);"
          },
          {
            "id": 12,
            "content": "public void addSuperInterfacesInfo(Content target);"
          },
          {
            "id": 13,
            "content": "public void addNestedClassInfo(final Content target);"
          },
          {
            "id": 14,
            "content": "public void addFunctionalInterfaceInfo(Content target);"
          },
          {
            "id": 15,
            "content": "public void addClassDeprecationInfo(Content classInfo);"
          },
          {
            "id": 16,
            "content": "@Override"
          },
          {
            "id": 17,
            "content": "public Content getMemberDetails(Content content);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/SerializedFormWriterImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void addSerialUIDInfo(String header, String serialUID, Content target);"
          },
          {
            "id": 1,
            "content": "public void addSerializedContent(Content source);"
          },
          {
            "id": 2,
            "content": "public void addPackageSerialized(Content serializedSummaries, Content packageSerialized);"
          },
          {
            "id": 3,
            "content": "public void printDocument(Content source) throws DocFileIOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlDocletWriter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "protected void addTagsInfo(Element e, Content content);"
          },
          {
            "id": 1,
            "content": "protected Content getNavLinkToOverviewTree(String label);"
          },
          {
            "id": 2,
            "content": "public void addSrcLink(Element element, Content label, Content target);"
          },
          {
            "id": 3,
            "content": "public void addPreQualifiedClassLink(HtmlLinkInfo.Kind context, TypeElement typeElement, Content target);"
          },
          {
            "id": 4,
            "content": "public void addPreQualifiedClassLink(HtmlLinkInfo.Kind context, TypeElement typeElement, HtmlStyle style, Content target);"
          },
          {
            "id": 5,
            "content": "public void addPreQualifiedStrongClassLink(HtmlLinkInfo.Kind context, TypeElement typeElement, Content content);"
          },
          {
            "id": 6,
            "content": "public void addInlineComment(Element element, DocTree tag, Content target);"
          },
          {
            "id": 7,
            "content": "public void addInlineDeprecatedComment(Element e, DeprecatedTree tag, Content target);"
          },
          {
            "id": 8,
            "content": "public void addSummaryComment(Element element, Content target);"
          },
          {
            "id": 9,
            "content": "public void addPreviewComment(Element element, List<? extends DocTree> firstSentenceTags, Content target);"
          },
          {
            "id": 10,
            "content": "public void addSummaryComment(Element element, List<? extends DocTree> firstSentenceTags, Content target);"
          },
          {
            "id": 11,
            "content": "public void addSummaryDeprecatedComment(Element element, DeprecatedTree tag, Content target);"
          },
          {
            "id": 12,
            "content": "public void addInlineComment(Element element, Content target);"
          },
          {
            "id": 13,
            "content": "public Content commentTagsToContent(Element element, List<? extends DocTree> tags, boolean isFirstSentence);"
          },
          {
            "id": 14,
            "content": "public Content commentTagsToContent(Element element, List<? extends DocTree> trees, boolean isFirstSentence, boolean inSummary);"
          },
          {
            "id": 15,
            "content": "public Content commentTagsToContent(Element element, List<? extends DocTree> trees, TagletWriterImpl.Context context);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/TreeWriter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public TreeWriter(HtmlConfiguration configuration, DocPath filename, ClassTree classTree) {"
          },
          {
            "id": 1,
            "content": "public static void generate(HtmlConfiguration configuration, ClassTree classTree) throws DocFileIOException;"
          },
          {
            "id": 2,
            "content": "protected void addPackageTreeLinks(Content content);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/ModuleWriterImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Content getSummary(Content source);"
          },
          {
            "id": 1,
            "content": "public void addSummaryHeader(Content startMarker, Content heading, Content target);"
          },
          {
            "id": 2,
            "content": "public void addModuleDescription(Content moduleContent);"
          },
          {
            "id": 3,
            "content": "public void addModuleSignature(Content moduleContent);"
          },
          {
            "id": 4,
            "content": "public void addModuleContent(Content source);"
          },
          {
            "id": 5,
            "content": "public void printDocument(Content content) throws DocFileIOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlConfiguration.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public ZonedDateTime getBuildDate();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlTree.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public HtmlTree addUnchecked(Content content);"
          },
          {
            "id": 1,
            "content": "public <T> HtmlTree addAll(Collection<T> items, Function<T, Content> mapper);"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "public static HtmlTree A(URI ref, Content body);"
          },
          {
            "id": 4,
            "content": "public static HtmlTree DETAILS(HtmlStyle style);"
          },
          {
            "id": 5,
            "content": "public static HtmlTree PRE(Content body);"
          },
          {
            "id": 6,
            "content": "public static HtmlTree SPAN(HtmlStyle styleClass);"
          },
          {
            "id": 7,
            "content": "public static HtmlTree SUMMARY(Content body);"
          },
          {
            "id": 8,
            "content": "public static HtmlTree UL(HtmlStyle style);"
          },
          {
            "id": 9,
            "content": "public static <T> HtmlTree UL(HtmlStyle style, Collection<T> items, Function<T, Content> mapper);"
          },
          {
            "id": 10,
            "content": "@Pure"
          },
          {
            "id": 11,
            "content": "@Pure"
          },
          {
            "id": 12,
            "content": "@Pure"
          },
          {
            "id": 13,
            "content": "public boolean isDiscardable();"
          },
          {
            "id": 14,
            "content": "@Pure"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/WorkArounds.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public DeclaredType overriddenType(ExecutableElement method);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/BaseConfiguration.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public VisibleMemberTable getVisibleMemberTable(TypeElement te);"
          },
          {
            "id": 1,
            "content": "public boolean isDocLintReferenceGroupEnabled();"
          },
          {
            "id": 2,
            "content": "public boolean isDocLintSyntaxGroupEnabled();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/Content.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public <T> Content addAll(Collection<T> items, Function<T, Content> mapper);"
          },
          {
            "id": 1,
            "content": "public boolean isDiscardable();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/CommentHelper.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public String getParameterName(ParamTree p);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/VisibleMemberTable.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean isNotSimpleOverride(ExecutableElement e);"
          },
          {
            "id": 1,
            "content": "Collection<ExecutableElement> getImplementedMethods();"
          },
          {
            "id": 2,
            "content": "private record OverriddenMethodInfo(ExecutableElement overriddenMethod, boolean simpleOverride) {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/Utils.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean isAnnotationInterface(Element e);"
          },
          {
            "id": 1,
            "content": "public boolean isInterface(Element e);"
          },
          {
            "id": 2,
            "content": "@Pure"
          },
          {
            "id": 3,
            "content": "public boolean isPlainInterface(Element e);"
          },
          {
            "id": 4,
            "content": "@Pure"
          },
          {
            "id": 5,
            "content": "@Pure"
          },
          {
            "id": 6,
            "content": "@Pure"
          },
          {
            "id": 7,
            "content": "@Pure"
          },
          {
            "id": 8,
            "content": "public boolean isNonThrowableClass(TypeElement te);"
          },
          {
            "id": 9,
            "content": "@Pure"
          },
          {
            "id": 10,
            "content": "public DeclaredType overriddenType(ExecutableElement method);"
          },
          {
            "id": 11,
            "content": "public <T extends DocTree> List<T> getBlockTags(Element element, Predicate<DocTree> filter, Class<T> tClass);"
          },
          {
            "id": 12,
            "content": "public List<ThrowsTree> getThrowsTrees(Element element);"
          },
          {
            "id": 13,
            "content": "public List<ParamTree> getTypeParamTrees(Element element);"
          },
          {
            "id": 14,
            "content": "public List<ParamTree> getParamTrees(Element element);"
          },
          {
            "id": 15,
            "content": "public CommentHelper get(Element key);"
          },
          {
            "id": 16,
            "content": "public PreviewFlagProvider setPreviewFlagProvider(PreviewFlagProvider provider);"
          },
          {
            "id": 17,
            "content": "public interface PreviewFlagProvider {"
          },
          {
            "id": 18,
            "content": "boolean isPreview(Element el);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/UncheckedDocletException.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Throwable initCause(Throwable cause);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/taglets/TagletManager.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void checkTags(Element element, Iterable<? extends DocTree> trees);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/Main.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Main() {"
          },
          {
            "id": 1,
            "content": "public Main setStreams(PrintWriter outWriter, PrintWriter errWriter);"
          },
          {
            "id": 2,
            "content": "public Main setFileManager(StandardJavaFileManager fileManager);"
          },
          {
            "id": 3,
            "content": "public Result run(String... args);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/ToolEnvironment.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void printInfo(String key, Object... args);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.jlink/share/classes/jdk/tools/jmod/JmodOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static JmodOutputStream newOutputStream(Path file, LocalDateTime date) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.datatransfer/share/classes/java/awt/datatransfer/Clipboard.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.desktop/share/classes/java/awt/ScrollPaneAdjustable.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class ScrollPaneAdjustable implements Adjustable, Serializable {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.desktop/share/classes/java/awt/MultipleGradientPaint.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public abstract sealed class MultipleGradientPaint implements Paint permits LinearGradientPaint, RadialGradientPaint {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.desktop/share/classes/java/awt/PointerInfo.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class PointerInfo {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.desktop/share/classes/java/awt/dnd/DropTargetContext.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class DropTargetContext implements Serializable {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.desktop/share/classes/java/awt/color/ICC_Profile.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public sealed class ICC_Profile implements Serializable permits ICC_ProfileGray, ICC_ProfileRGB {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.desktop/share/classes/java/awt/geom/Path2D.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public abstract sealed class Path2D implements Shape, Cloneable permits Path2D.Double, Path2D.Float {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "public static non-sealed class Float extends Path2D implements Serializable {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 2,
              "content": "public static non-sealed class Double extends Path2D implements Serializable {"
            },
            "methods": []
          }
        ],
        "new_methods": [
          {
            "id": 3,
            "content": "static Rectangle2D getBounds2D(final PathIterator pi);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.desktop/share/classes/java/awt/geom/CubicCurve2D.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Rectangle2D getBounds2D();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.desktop/share/classes/java/awt/geom/QuadCurve2D.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Rectangle2D getBounds2D();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.desktop/share/classes/javax/swing/JDialog.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings({ \"serial\" })"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.desktop/share/classes/javax/swing/text/StyleConstants.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public sealed class StyleConstants permits StyleConstants.CharacterConstants, StyleConstants.ColorConstants, StyleConstants.FontConstants, StyleConstants.ParagraphConstants {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "public static final class ParagraphConstants extends StyleConstants implements AttributeSet.ParagraphAttribute {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 2,
              "content": "public static final class CharacterConstants extends StyleConstants implements AttributeSet.CharacterAttribute {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 3,
              "content": "public static final class ColorConstants extends StyleConstants implements AttributeSet.ColorAttribute, AttributeSet.CharacterAttribute {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 4,
              "content": "public static final class FontConstants extends StyleConstants implements AttributeSet.FontAttribute, AttributeSet.CharacterAttribute {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.desktop/share/classes/javax/swing/text/html/HTMLEditorKit.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings({ \"serial\" })"
          }
        ]
      }
    }
  },
  "jdk-20": {
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.zipfs/share/classes/jdk/nio/zipfs/ZipPath.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Path resolveSibling(String other);"
          },
          {
            "id": 1,
            "content": "public boolean startsWith(String other);"
          },
          {
            "id": 2,
            "content": "public boolean endsWith(String other);"
          },
          {
            "id": 3,
            "content": "public File toFile();"
          },
          {
            "id": 4,
            "content": "ZipFileAttributes readAttributesIfExists() throws IOException;"
          },
          {
            "id": 5,
            "content": "boolean exists();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.compiler/share/classes/javax/lang/model/util/Elements.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "default boolean isCanonicalConstructor(ExecutableElement e);"
          },
          {
            "id": 1,
            "content": "default boolean isCompactConstructor(ExecutableElement e);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.compiler/share/classes/com/sun/tools/javac/tree/TreeInfo.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static DiagnosticPosition diagnosticPositionFor(final Symbol sym, final JCTree tree, boolean returnNullIfNotFound, Predicate<? super JCTree> filter);"
          },
          {
            "id": 1,
            "content": "protected boolean checkMatch(JCTree that, Symbol thatSym);"
          },
          {
            "id": 2,
            "content": "public static JCPattern skipParens(JCPattern tree);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Type.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void setNormal();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Symbol.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public RecordComponent findRecordComponentToRemove(JCVariableDecl var);"
          },
          {
            "id": 1,
            "content": "public RecordComponent createRecordComponent(RecordComponent existing, JCVariableDecl rcDecl, VarSymbol varSym);"
          },
          {
            "id": 2,
            "content": "public RecordComponent(VarSymbol field, JCVariableDecl ast) {"
          },
          {
            "id": 3,
            "content": "public RecordComponent(VarSymbol field, JCVariableDecl ast, boolean isVarargs) {"
          },
          {
            "id": 4,
            "content": "public JCVariableDecl declarationFor();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/unix/classes/sun/nio/fs/UnixFileSystem.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "protected static class Flags {"
            },
            "methods": [
              {
                "id": 2,
                "content": "static Flags fromCopyOptions(CopyOption... options);"
              },
              {
                "id": 3,
                "content": "static Flags fromMoveOptions(CopyOption... options);"
              },
              {
                "id": 4,
                "content": "int directCopy(int dst, int src, long addressToPollForCancel) throws UnixException;"
              },
              {
                "id": 5,
                "content": "void bufferedCopy(int dst, int src, long address, int size, long addressToPollForCancel) throws UnixException;"
              },
              {
                "id": 6,
                "content": "void copyFile(UnixPath source, UnixFileAttributes attrs, UnixPath target, Flags flags, long addressToPollForCancel) throws IOException;"
              },
              {
                "id": 7,
                "content": "static void ensureEmptyDir(UnixPath dir) throws IOException;"
              },
              {
                "id": 8,
                "content": "void move(UnixPath source, UnixPath target, CopyOption... options) throws IOException;"
              },
              {
                "id": 9,
                "content": "void copy(final UnixPath source, final UnixPath target, CopyOption... options) throws IOException;"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "boolean isCaseInsensitiveAndPreserving();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/net/www/HeaderParser.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public OptionalInt findInt(String k);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/net/www/protocol/https/HttpsClient.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void closeServer();"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/net/www/http/KeepAliveCache.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "HttpClient put(HttpClient h);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/util/ObjectIdentifier.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "void encode(DerOutputStream out);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/util/DerValue.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void encode(DerOutputStream out);"
          },
          {
            "id": 1,
            "content": "public byte[] getDataBytes();"
          },
          {
            "id": 2,
            "content": "public byte[] toByteArray();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/util/SignatureFileVerifier.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void process(Hashtable<String, CodeSigner[]> signers, List<Object> manifestDigests, String manifestName) throws IOException, SignatureException, NoSuchAlgorithmException, CertificateException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/provider/certpath/ResponderId.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public enum Type {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/X500Name.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public void encode(DerOutputStream out);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/GeneralSubtrees.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class GeneralSubtrees implements Cloneable, DerEncoder {"
            },
            "methods": [
              {
                "id": 1,
                "content": "@Override"
              },
              {
                "id": 2,
                "content": "public void encode(DerOutputStream out);"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/CRLExtensions.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void encode(DerOutputStream out, boolean isExplicit);"
          },
          {
            "id": 1,
            "content": "public Extension getExtension(String alias);"
          },
          {
            "id": 2,
            "content": "public void setExtension(String alias, Extension ext);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/Extension.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class Extension implements java.security.cert.Extension, DerEncoder {"
            },
            "methods": [
              {
                "id": 1,
                "content": "@Override"
              },
              {
                "id": 2,
                "content": "public final void encode(OutputStream out) throws IOException;"
              },
              {
                "id": 3,
                "content": "@Override"
              },
              {
                "id": 4,
                "content": "public void encode(DerOutputStream out);"
              },
              {
                "id": 5,
                "content": "public String getName();"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/GeneralNames.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void encode(DerOutputStream out);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/URIName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public void encode(DerOutputStream out);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/DNSName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public void encode(DerOutputStream out);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/X509Key.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class X509Key implements PublicKey, DerEncoder {"
            },
            "methods": [
              {
                "id": 1,
                "content": "protected void parseKeyBits() throws InvalidKeyException;"
              },
              {
                "id": 2,
                "content": "@Override"
              },
              {
                "id": 3,
                "content": "public final void encode(DerOutputStream out);"
              },
              {
                "id": 4,
                "content": "public byte[] getEncodedInternal();"
              },
              {
                "id": 5,
                "content": "public byte[] encode();"
              },
              {
                "id": 6,
                "content": "static void encode(DerOutputStream out, AlgorithmId algid, BitArray key);"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/GeneralName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class GeneralName implements DerEncoder {"
            },
            "methods": [
              {
                "id": 1,
                "content": "@Override"
              },
              {
                "id": 2,
                "content": "public void encode(DerOutputStream out);"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/X509CertInfo.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class X509CertInfo {"
            },
            "methods": [
              {
                "id": 1,
                "content": "public void encode(DerOutputStream out) throws CertificateException;"
              },
              {
                "id": 2,
                "content": "public CertificateExtensions getExtensions();"
              },
              {
                "id": 3,
                "content": "public UniqueIdentity getIssuerUniqueId();"
              },
              {
                "id": 4,
                "content": "public UniqueIdentity getSubjectUniqueId();"
              },
              {
                "id": 5,
                "content": "public X500Name getIssuer();"
              },
              {
                "id": 6,
                "content": "public X500Name getSubject();"
              },
              {
                "id": 7,
                "content": "public void setVersion(CertificateVersion val);"
              },
              {
                "id": 8,
                "content": "public CertificateVersion getVersion();"
              },
              {
                "id": 9,
                "content": "public void setSerialNumber(CertificateSerialNumber val);"
              },
              {
                "id": 10,
                "content": "public CertificateSerialNumber getSerialNumber();"
              },
              {
                "id": 11,
                "content": "public void setAlgorithmId(CertificateAlgorithmId val);"
              },
              {
                "id": 12,
                "content": "public CertificateAlgorithmId getAlgorithmId();"
              },
              {
                "id": 13,
                "content": "public void setIssuer(X500Name val);"
              },
              {
                "id": 14,
                "content": "public void setValidity(CertificateValidity val);"
              },
              {
                "id": 15,
                "content": "public CertificateValidity getValidity();"
              },
              {
                "id": 16,
                "content": "public void setSubject(X500Name val) throws CertificateException;"
              },
              {
                "id": 17,
                "content": "public void setKey(CertificateX509Key val);"
              },
              {
                "id": 18,
                "content": "public CertificateX509Key getKey();"
              },
              {
                "id": 19,
                "content": "public void setIssuerUniqueId(UniqueIdentity val) throws CertificateException;"
              },
              {
                "id": 20,
                "content": "public void setSubjectUniqueId(UniqueIdentity val) throws CertificateException;"
              },
              {
                "id": 21,
                "content": "public void setExtensions(CertificateExtensions val) throws CertificateException;"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/IPAddressName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public void encode(DerOutputStream out);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/OIDName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public void encode(DerOutputStream out);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/AVA.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public void encode(DerOutputStream out);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/KeyIdentifier.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "void encode(DerOutputStream out);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/EDIPartyName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public void encode(DerOutputStream out);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/PolicyInformation.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class PolicyInformation implements DerEncoder {"
            },
            "methods": [
              {
                "id": 1,
                "content": "@Override"
              },
              {
                "id": 2,
                "content": "public void encode(DerOutputStream out);"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/OtherName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public void encode(DerOutputStream out);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/RDN.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "void encode(DerOutputStream out);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/CertificatePolicyId.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class CertificatePolicyId implements DerEncoder {"
            },
            "methods": [
              {
                "id": 1,
                "content": "@Override"
              },
              {
                "id": 2,
                "content": "public void encode(DerOutputStream out);"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/DistributionPointName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class DistributionPointName implements DerEncoder {"
            },
            "methods": [
              {
                "id": 1,
                "content": "@Override"
              },
              {
                "id": 2,
                "content": "public void encode(DerOutputStream out);"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/CertificateExtensions.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class CertificateExtensions implements DerEncoder {"
            },
            "methods": [
              {
                "id": 1,
                "content": "@Override"
              },
              {
                "id": 2,
                "content": "public void encode(DerOutputStream out);"
              },
              {
                "id": 3,
                "content": "public void encode(DerOutputStream out, boolean isCertReq);"
              },
              {
                "id": 4,
                "content": "public void setExtension(String name, Extension ext);"
              },
              {
                "id": 5,
                "content": "public Extension getExtension(String alias);"
              },
              {
                "id": 6,
                "content": "public String getNameByOid(ObjectIdentifier oid);"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/RFC822Name.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public void encode(DerOutputStream out);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/DistributionPoint.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class DistributionPoint implements DerEncoder {"
            },
            "methods": [
              {
                "id": 1,
                "content": "@Override"
              },
              {
                "id": 2,
                "content": "public void encode(DerOutputStream out);"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/GeneralSubtree.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class GeneralSubtree implements DerEncoder {"
            },
            "methods": [
              {
                "id": 1,
                "content": "@Override"
              },
              {
                "id": 2,
                "content": "public void encode(DerOutputStream out);"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/AccessDescription.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void encode(DerOutputStream out);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/AlgorithmId.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public void encode(DerOutputStream out);"
          },
          {
            "id": 2,
            "content": "public final byte[] encode();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/pkcs10/PKCS10.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void encodeAndSign(X500Name subject, PrivateKey key, String algorithm) throws SignatureException, NoSuchAlgorithmException, InvalidKeyException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/pkcs10/PKCS10Attributes.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public void encode(DerOutputStream out);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/pkcs/EncryptedPrivateKeyInfo.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public byte[] getEncoded();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/nio/ch/FileChannelImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public MemorySegment map(MapMode mode, long offset, long size, SegmentScope session) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/nio/ch/FileDispatcher.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "abstract long allocationGranularity();"
          },
          {
            "id": 1,
            "content": "abstract long map(FileDescriptor fd, int prot, long position, long length, boolean isSync) throws IOException;"
          },
          {
            "id": 2,
            "content": "abstract int unmap(long address, long length);"
          },
          {
            "id": 3,
            "content": "abstract int maxDirectTransferSize();"
          },
          {
            "id": 4,
            "content": "abstract long transferTo(FileDescriptor src, long position, long count, FileDescriptor dst, boolean append);"
          },
          {
            "id": 5,
            "content": "abstract long transferFrom(FileDescriptor src, FileDescriptor dst, long position, long count, boolean append);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/jdk/internal/module/ModuleReferenceImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "private record CachedHash(byte[] hash, String algorithm) {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/net/URL.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Deprecated()"
          },
          {
            "id": 1,
            "content": "@Deprecated()"
          },
          {
            "id": 2,
            "content": "@Deprecated()"
          },
          {
            "id": 3,
            "content": "@Deprecated()"
          },
          {
            "id": 4,
            "content": "@Deprecated()"
          },
          {
            "id": 5,
            "content": "@Deprecated()"
          },
          {
            "id": 6,
            "content": "public static URL of(URI uri, URLStreamHandler handler) throws MalformedURLException;"
          },
          {
            "id": 7,
            "content": "static String lowerCaseProtocol(String protocol);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/util/IdentityHashMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public boolean remove(Object key, Object value);"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "public boolean replace(K key, V oldValue, V newValue);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/util/stream/Collectors.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "record CollectorImpl<T, A, R>(Supplier<A> supplier, BiConsumer<A, T> accumulator, BinaryOperator<A> combiner, Function<A, R> finisher, Set<Characteristics> characteristics) implements Collector<T, A, R> {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/util/jar/JarVerifier.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Certificate[] getCerts(JarEntry entry);"
          },
          {
            "id": 1,
            "content": "public CodeSigner[] getCodeSigners(JarEntry entry);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/util/regex/Matcher.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public Map<String, Integer> namedGroups();"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "public boolean hasMatch();"
          },
          {
            "id": 4,
            "content": "@Override"
          },
          {
            "id": 5,
            "content": "public Map<String, Integer> namedGroups();"
          },
          {
            "id": 6,
            "content": "@Override"
          },
          {
            "id": 7,
            "content": "public boolean hasMatch();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/util/regex/Pattern.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Map<String, Integer> namedGroups();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/util/regex/MatchResult.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "int start();"
          },
          {
            "id": 1,
            "content": "int start(int group);"
          },
          {
            "id": 2,
            "content": "default int start(String name);"
          },
          {
            "id": 3,
            "content": "int end();"
          },
          {
            "id": 4,
            "content": "int end(int group);"
          },
          {
            "id": 5,
            "content": "default int end(String name);"
          },
          {
            "id": 6,
            "content": "String group();"
          },
          {
            "id": 7,
            "content": "String group(int group);"
          },
          {
            "id": 8,
            "content": "@Nullable"
          },
          {
            "id": 9,
            "content": "default String group(String name);"
          },
          {
            "id": 10,
            "content": "int groupCount();"
          },
          {
            "id": 11,
            "content": "default Map<String, Integer> namedGroups();"
          },
          {
            "id": 12,
            "content": "private int groupNumber(String name);"
          },
          {
            "id": 13,
            "content": "default boolean hasMatch();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/util/zip/Inflater.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "boolean hasPendingOutput();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/util/zip/ZipInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public int read() throws IOException;"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "public byte[] readAllBytes() throws IOException;"
          },
          {
            "id": 4,
            "content": "@Override"
          },
          {
            "id": 5,
            "content": "public byte[] readNBytes(int len) throws IOException;"
          },
          {
            "id": 6,
            "content": "@Override"
          },
          {
            "id": 7,
            "content": "public int readNBytes(byte[] b, int off, int len) throws IOException;"
          },
          {
            "id": 8,
            "content": "@Override"
          },
          {
            "id": 9,
            "content": "public void skipNBytes(long n) throws IOException;"
          },
          {
            "id": 10,
            "content": "@Override"
          },
          {
            "id": 11,
            "content": "public long transferTo(OutputStream out) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/util/concurrent/ForkJoinPool.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public <T> ForkJoinTask<T> externalSubmit(ForkJoinTask<T> task);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/security/KeyRep.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public enum Type {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/security/UnresolvedPermission.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@Override"
          },
          {
            "id": 5,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/security/Security.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class Criteria {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/security/Principal.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "boolean equals(@Nullable Object another);"
          },
          {
            "id": 1,
            "content": "String toString();"
          },
          {
            "id": 2,
            "content": "int hashCode();"
          },
          {
            "id": 3,
            "content": "String getName();"
          },
          {
            "id": 4,
            "content": "default boolean implies(Subject subject);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/security/SecureClassLoader.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "private record CodeSourceKey(CodeSource cs) {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/security/Key.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "long serialVersionUID;"
          },
          {
            "id": 1,
            "content": "String getAlgorithm();"
          },
          {
            "id": 2,
            "content": "String getFormat();"
          },
          {
            "id": 3,
            "content": "byte @Nullable [] getEncoded();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/security/KeyStore.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public interface LoadStoreParameter {"
          },
          {
            "id": 1,
            "content": "ProtectionParameter getProtectionParameter();"
          },
          {
            "id": 2,
            "content": "public interface ProtectionParameter {"
          },
          {
            "id": 3,
            "content": "public interface Entry {"
          },
          {
            "id": 4,
            "content": "default Set<Attribute> getAttributes();"
          },
          {
            "id": 5,
            "content": "interface Attribute {"
          },
          {
            "id": 6,
            "content": "String getName();"
          },
          {
            "id": 7,
            "content": "String getValue();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/security/cert/CertStore.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static String getDefaultType();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/security/interfaces/ECPrivateKey.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "long serialVersionUID;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/io/SequenceInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public long transferTo(OutputStream out) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/io/PushbackInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public long transferTo(OutputStream out) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/io/BufferedInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public long transferTo(OutputStream out) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/io/Console.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class Console implements Flushable {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/math/BigInteger.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static void putSignAndMag(BigInteger bi, int sign, int[] magnitude);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/math/BigDecimal.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static void setIntValAndScale(BigDecimal bd, BigInteger intVal, int scale);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/Integer.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@IntrinsicCandidate"
          },
          {
            "id": 1,
            "content": "@IntrinsicCandidate"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/StackTraceElement.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/Float.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@IntrinsicCandidate"
          },
          {
            "id": 1,
            "content": "@IntrinsicCandidate"
          },
          {
            "id": 2,
            "content": "public static float float16ToFloat(short floatBinary16);"
          },
          {
            "id": 3,
            "content": "@IntrinsicCandidate"
          },
          {
            "id": 4,
            "content": "public static short floatToFloat16(float f);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/Long.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@IntrinsicCandidate"
          },
          {
            "id": 1,
            "content": "@IntrinsicCandidate"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/Class.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Set<AccessFlag> accessFlags();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/String.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static int checkBoundsOffCount(int offset, int count, int length);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/Character.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static final UnicodeBlock ARABIC_EXTENDED_C;"
          },
          {
            "id": 1,
            "content": "public static final UnicodeBlock DEVANAGARI_EXTENDED_A;"
          },
          {
            "id": 2,
            "content": "public static final UnicodeBlock KAWI;"
          },
          {
            "id": 3,
            "content": "public static final UnicodeBlock KAKTOVIK_NUMERALS;"
          },
          {
            "id": 4,
            "content": "public static final UnicodeBlock CYRILLIC_EXTENDED_D;"
          },
          {
            "id": 5,
            "content": "public static final UnicodeBlock NAG_MUNDARI;"
          },
          {
            "id": 6,
            "content": "public static final UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_H;"
          },
          {
            "id": 7,
            "content": "KAWI,"
          },
          {
            "id": 8,
            "content": "NAG_MUNDARI,"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/ThreadLocal.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "boolean isCarrierThreadLocalPresent();"
          },
          {
            "id": 1,
            "content": "void removeCarrierThreadLocal();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/Double.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@IntrinsicCandidate"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/Thread.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static Object scopedValueBindings();"
          },
          {
            "id": 1,
            "content": "static void setScopedValueBindings(Object bindings);"
          },
          {
            "id": 2,
            "content": "@IntrinsicCandidate"
          },
          {
            "id": 3,
            "content": "static native Object findScopedValueBindings();"
          },
          {
            "id": 4,
            "content": "void inheritScopedValueBindings(ThreadContainer container);"
          },
          {
            "id": 5,
            "content": "static native Object[] scopedValueCache();"
          },
          {
            "id": 6,
            "content": "static native void setScopedValueCache(Object[] cache);"
          },
          {
            "id": 7,
            "content": "@IntrinsicCandidate"
          },
          {
            "id": 8,
            "content": "static native void ensureMaterializedForStackWalk(Object o);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/invoke/LambdaForm.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "String debugString(int indentLevel);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/module/ModuleDescriptor.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "OPEN(AccessFlag.OPEN.mask()), AUTOMATIC(0), SYNTHETIC(AccessFlag.SYNTHETIC.mask()), MANDATED(AccessFlag.MANDATED.mask())"
          },
          {
            "id": 1,
            "content": "TRANSITIVE(AccessFlag.TRANSITIVE.mask()), STATIC(AccessFlag.STATIC_PHASE.mask()), SYNTHETIC(AccessFlag.SYNTHETIC.mask()), MANDATED(AccessFlag.MANDATED.mask())"
          },
          {
            "id": 2,
            "content": "public Set<AccessFlag> accessFlags();"
          },
          {
            "id": 3,
            "content": "SYNTHETIC(AccessFlag.SYNTHETIC.mask()), MANDATED(AccessFlag.MANDATED.mask())"
          },
          {
            "id": 4,
            "content": "public Set<AccessFlag> accessFlags();"
          },
          {
            "id": 5,
            "content": "SYNTHETIC(AccessFlag.SYNTHETIC.mask()), MANDATED(AccessFlag.MANDATED.mask())"
          },
          {
            "id": 6,
            "content": "public Set<AccessFlag> accessFlags();"
          },
          {
            "id": 7,
            "content": "public Set<AccessFlag> accessFlags();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/reflect/Parameter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Set<AccessFlag> accessFlags();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/reflect/Executable.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public Set<AccessFlag> accessFlags();"
          },
          {
            "id": 2,
            "content": "public abstract int getParameterCount();"
          },
          {
            "id": 3,
            "content": "record ParameterData(@Stable Parameter[] parameters, boolean isReal) {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/reflect/Proxy.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "if (!module.isOpen(packageName, Proxy.class.getModule())) {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "throw new InternalError(packageName + \" not open to \" + Proxy.class.getModule());"
            },
            "methods": [
              {
                "id": 9,
                "content": "if (Modifier.isPublic(accessFlags)) {"
              },
              {
                "id": 10,
                "content": "throw new InternalError(\"public proxy in unnamed module: \" + module);"
              },
              {
                "id": 11,
                "content": "if ((accessFlags & ~Modifier.PUBLIC) != 0) {"
              },
              {
                "id": 12,
                "content": "throw new InternalError(\"proxy access flags must be Modifier.PUBLIC or 0\");"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 2,
            "content": "private record ProxyClassContext(Module module, String packageName, int accessFlags) {"
          },
          {
            "id": 3,
            "content": "private ProxyClassContext {"
          },
          {
            "id": 4,
            "content": "if (module.isNamed()) {"
          },
          {
            "id": 5,
            "content": "if (packageName.isEmpty()) {"
          },
          {
            "id": 6,
            "content": "throw new InternalError(\"Unnamed package cannot be added to \" + module);"
          },
          {
            "id": 7,
            "content": "if (!module.getDescriptor().packages().contains(packageName)) {"
          },
          {
            "id": 8,
            "content": "throw new InternalError(packageName + \" not exist in \" + module.getName());"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/reflect/Field.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public Set<AccessFlag> accessFlags();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/nio/file/spi/FileSystemProvider.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean exists(Path path, LinkOption... options);"
          },
          {
            "id": 1,
            "content": "public <A extends BasicFileAttributes> A readAttributesIfExists(Path path, Class<A> type, LinkOption... options) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/nio/channels/FileChannel.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public MemorySegment map(MapMode mode, long offset, long size, SegmentScope session) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/text/RBCollationTables.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static void reverse(StringBuilder result, int from, int to);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/text/PatternEntry.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "void addToBuilder(StringBuilder toAddTo, boolean showExtension, boolean showWhiteSpace, PatternEntry lastEntry);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.net.http/share/classes/jdk/internal/net/http/ConnectionPool.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static CacheKey cacheKey(boolean secure, InetSocketAddress destination, InetSocketAddress proxy);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.sql.rowset/share/classes/javax/sql/rowset/serial/SerialDatalink.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"deprecation\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.naming/share/classes/javax/naming/spi/NamingManager.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static void setObjectFactoryBuilder(ObjectFactoryBuilder builder) throws NamingException;"
          },
          {
            "id": 1,
            "content": "static ObjectFactoryBuilder getObjectFactoryBuilder();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlDocletWriter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public TagletWriterImpl getTagletWriterInstance(TagletWriterImpl.Context context);"
          },
          {
            "id": 1,
            "content": "public Content getPackageLink(PackageElement packageElement, Content label, String fragment);"
          },
          {
            "id": 2,
            "content": "public Content getModuleLink(ModuleElement mdle, Content label, String fragment);"
          },
          {
            "id": 3,
            "content": "public URI resolveExternalSpecURI(URI specURI);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/ModuleWriterImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void addIndirectPackages(Table<?> table, Map<ModuleElement, SortedSet<PackageElement>> ip);"
          },
          {
            "id": 1,
            "content": "public void addUsesList(Table<?> table);"
          },
          {
            "id": 2,
            "content": "public void addProvidesList(Table<?> table);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlConfiguration.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "EXTERNAL_SPECS,"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/TextBuilder.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean write(Writer out, String newline, boolean atNewline) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/Text.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static int charCount(CharSequence cs);"
          },
          {
            "id": 1,
            "content": "public boolean write(Writer out, String newline, boolean atNewline) throws IOException;"
          },
          {
            "id": 2,
            "content": "public static final String NL;"
          },
          {
            "id": 3,
            "content": "public static CharSequence normalizeNewlines(CharSequence text);"
          },
          {
            "id": 4,
            "content": "static boolean checkNewlines(CharSequence cs);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/Comment.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean write(Writer out, String newline, boolean atNewline) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlTree.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static HtmlTree DETAILS();"
          },
          {
            "id": 1,
            "content": "public boolean write(Writer out, String newline, boolean atNewline) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/RawHtml.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "protected final String rawHtmlContent;"
          },
          {
            "id": 1,
            "content": "public static RawHtml of(CharSequence rawHtml);"
          },
          {
            "id": 2,
            "content": "public static RawHtml startElement(CharSequence name, Content attrs, boolean selfClosing);"
          },
          {
            "id": 3,
            "content": "public static RawHtml endElement(CharSequence name);"
          },
          {
            "id": 4,
            "content": "public static RawHtml comment(String body);"
          },
          {
            "id": 5,
            "content": "public static RawHtml cdata(String body);"
          },
          {
            "id": 6,
            "content": "protected static int charCount(CharSequence htmlText);"
          },
          {
            "id": 7,
            "content": "public boolean write(Writer out, String newline, boolean atNewline) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/ContentBuilder.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean write(Writer writer, String newline, boolean atNewline) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/Script.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean write(Writer writer, String newline, boolean atNewline) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/WorkArounds.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Map<? extends ExecutableElement, ? extends AnnotationValue> getJepInfo(String feature);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/Content.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public abstract boolean write(Writer writer, String newline, boolean atNewline) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/CommentHelper.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public String getReferencedFragment(String signature);"
          },
          {
            "id": 1,
            "content": "public Element getReferencedElement(DocTree dtree);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/Utils.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Pure"
          },
          {
            "id": 1,
            "content": "@Pure"
          },
          {
            "id": 2,
            "content": "public Object getPreviewFeature(Element e);"
          },
          {
            "id": 3,
            "content": "@Pure"
          },
          {
            "id": 4,
            "content": "@Pure"
          },
          {
            "id": 5,
            "content": "@Pure"
          },
          {
            "id": 6,
            "content": "@Pure"
          },
          {
            "id": 7,
            "content": "public List<? extends SpecTree> getSpecTrees(Element element);"
          },
          {
            "id": 8,
            "content": "@Pure"
          },
          {
            "id": 9,
            "content": "@Pure"
          },
          {
            "id": 10,
            "content": "public DocFinder docFinder();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/taglets/SimpleTaglet.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Output inherit(Element owner, DocTree tag, boolean isFirstSentence, BaseConfiguration configuration);"
          },
          {
            "id": 1,
            "content": "record Documentation(DocTree tag, List<? extends DocTree> description, ExecutableElement method) {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.jlink/share/classes/jdk/tools/jmod/JmodOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static JmodOutputStream newOutputStream(Path file, LocalDateTime date, int compressLevel) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.desktop/share/classes/sun/font/AttributeValues.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"unchecked\")"
          },
          {
            "id": 1,
            "content": "public static float getTracking(Map<?, ?> map);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.desktop/share/classes/javax/swing/AbstractButton.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void setMultiClickThreshhold(long threshold);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.desktop/share/classes/javax/swing/text/DefaultEditorKit.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "static class EndLineDownAction extends TextAction {"
            },
            "methods": [
              {
                "id": 4,
                "content": "@SuppressWarnings(\"deprecation\")"
              },
              {
                "id": 5,
                "content": "public void actionPerformed(ActionEvent e);"
              },
              {
                "id": 6,
                "content": "@SuppressWarnings(\"serial\")"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "static class BeginLineUpAction extends TextAction {"
            },
            "methods": [
              {
                "id": 7,
                "content": "@SuppressWarnings(\"deprecation\")"
              },
              {
                "id": 8,
                "content": "public void actionPerformed(ActionEvent e);"
              },
              {
                "id": 9,
                "content": "@SuppressWarnings(\"serial\")"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 2,
            "content": "public static final String beginLineUpAction;"
          },
          {
            "id": 3,
            "content": "public static final String endLineDownAction;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.hotspot/src/jdk/vm/ci/hotspot/HotSpotResolvedJavaFieldImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public JavaConstant getConstantValue();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.hotspot/src/jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "long getMethodPointer();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.meta/src/jdk/vm/ci/meta/PrimitiveConstant.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public long getRawValue();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.meta/src/jdk/vm/ci/meta/Assumptions.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public String toString();"
          },
          {
            "id": 2,
            "content": "public final ResolvedJavaType receiverType;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.code/src/jdk/vm/ci/code/RegisterSaveLayout.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public int size();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.code/src/jdk/vm/ci/code/BytecodeFrame.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void verifyInvariants();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.code/src/jdk/vm/ci/code/StackLockValue.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public AllocatableValue getSlot();"
          }
        ]
      }
    }
  },
  "jdk-21": {
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.compiler/share/classes/javax/lang/model/element/TypeElement.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.UNNAMED_CLASSES, reflective = true)"
          },
          {
            "id": 1,
            "content": "default boolean isUnnamed();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/classfile/Utility.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void write(final char[] cbuf, final int off, final int len) throws IOException;"
          },
          {
            "id": 1,
            "content": "public void write(final int b) throws IOException;"
          },
          {
            "id": 2,
            "content": "public static String accessToString(final int accessFlags);"
          },
          {
            "id": 3,
            "content": "public static String accessToString(final int accessFlags, final boolean forClass);"
          },
          {
            "id": 4,
            "content": "public static String classOrInterface(final int accessFlags);"
          },
          {
            "id": 5,
            "content": "public static int clearBit(final int flag, final int i);"
          },
          {
            "id": 6,
            "content": "public static String codeToString(final byte[] code, final ConstantPool constantPool, final int index, final int length);"
          },
          {
            "id": 7,
            "content": "public static String codeToString(final byte[] code, final ConstantPool constantPool, final int index, final int length, final boolean verbose);"
          },
          {
            "id": 8,
            "content": "public static String codeToString(final ByteSequence bytes, final ConstantPool constantPool) throws IOException;"
          },
          {
            "id": 9,
            "content": "@SuppressWarnings(\"fallthrough\")"
          },
          {
            "id": 10,
            "content": "public static String codeToString(final ByteSequence bytes, final ConstantPool constantPool, final boolean verbose) throws IOException;"
          },
          {
            "id": 11,
            "content": "public static String compactClassName(final String str);"
          },
          {
            "id": 12,
            "content": "public static String compactClassName(final String str, final boolean chopit);"
          },
          {
            "id": 13,
            "content": "public static String compactClassName(String str, final String prefix, final boolean chopit);"
          },
          {
            "id": 14,
            "content": "public static byte[] decode(final String s, final boolean uncompress) throws IOException;"
          },
          {
            "id": 15,
            "content": "public static String encode(byte[] bytes, final boolean compress) throws IOException;"
          },
          {
            "id": 16,
            "content": "public static String fillup(final String str, final int length, final boolean leftJustify, final char fill);"
          },
          {
            "id": 17,
            "content": "public static String format(final int i, final int length, final boolean leftJustify, final char fill);"
          },
          {
            "id": 18,
            "content": "public static String getSignature(String type);"
          },
          {
            "id": 19,
            "content": "public static boolean isJavaIdentifierPart(final char ch);"
          },
          {
            "id": 20,
            "content": "public static boolean isSet(final int flag, final int i);"
          },
          {
            "id": 21,
            "content": "public static String[] methodSignatureArgumentTypes(final String signature) throws ClassFormatException;"
          },
          {
            "id": 22,
            "content": "public static String[] methodSignatureArgumentTypes(final String signature, final boolean chopit) throws ClassFormatException;"
          },
          {
            "id": 23,
            "content": "public static String methodSignatureReturnType(final String signature) throws ClassFormatException;"
          },
          {
            "id": 24,
            "content": "public static String methodSignatureReturnType(final String signature, final boolean chopit) throws ClassFormatException;"
          },
          {
            "id": 25,
            "content": "public static String methodSignatureToString(final String signature, final String name, final String access);"
          },
          {
            "id": 26,
            "content": "public static String methodSignatureToString(final String signature, final String name, final String access, final boolean chopit);"
          },
          {
            "id": 27,
            "content": "public static String methodSignatureToString(final String signature, final String name, final String access, final boolean chopit, final LocalVariableTable vars) throws ClassFormatException;"
          },
          {
            "id": 28,
            "content": "public static String methodTypeToSignature(final String ret, final String[] argv) throws ClassFormatException;"
          },
          {
            "id": 29,
            "content": "public static String packageToPath(final String name);"
          },
          {
            "id": 30,
            "content": "public static String pathToPackage(final String str);"
          },
          {
            "id": 31,
            "content": "public static String printArray(final Object[] obj);"
          },
          {
            "id": 32,
            "content": "public static String printArray(final Object[] obj, final boolean braces);"
          },
          {
            "id": 33,
            "content": "public static String printArray(final Object[] obj, final boolean braces, final boolean quote);"
          },
          {
            "id": 34,
            "content": "public static void printArray(final PrintStream out, final Object[] obj);"
          },
          {
            "id": 35,
            "content": "public static void printArray(final PrintWriter out, final Object[] obj);"
          },
          {
            "id": 36,
            "content": "public static String replace(String str, final String old, final String new_);"
          },
          {
            "id": 37,
            "content": "public static short searchOpcode(String name);"
          },
          {
            "id": 38,
            "content": "public static int setBit(final int flag, final int i);"
          },
          {
            "id": 39,
            "content": "public static String signatureToString(final String signature);"
          },
          {
            "id": 40,
            "content": "public static String signatureToString(final String signature, final boolean chopit);"
          },
          {
            "id": 41,
            "content": "public static String toHexString(final byte[] bytes);"
          },
          {
            "id": 42,
            "content": "public static byte typeOfMethodSignature(final String signature) throws ClassFormatException;"
          },
          {
            "id": 43,
            "content": "public static byte typeOfSignature(final String signature) throws ClassFormatException;"
          },
          {
            "id": 44,
            "content": "public static String typeSignatureToString(final String signature, final boolean chopit) throws ClassFormatException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/Select.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Deprecated"
          },
          {
            "id": 1,
            "content": "protected int[] match;"
          },
          {
            "id": 2,
            "content": "@Deprecated"
          },
          {
            "id": 3,
            "content": "protected int[] indices;"
          },
          {
            "id": 4,
            "content": "@Deprecated"
          },
          {
            "id": 5,
            "content": "protected InstructionHandle[] targets;"
          },
          {
            "id": 6,
            "content": "@Deprecated"
          },
          {
            "id": 7,
            "content": "protected int fixed_length;"
          },
          {
            "id": 8,
            "content": "@Deprecated"
          },
          {
            "id": 9,
            "content": "protected int match_length;"
          },
          {
            "id": 10,
            "content": "@Deprecated"
          },
          {
            "id": 11,
            "content": "protected int padding;"
          },
          {
            "id": 12,
            "content": "protected Object clone() throws CloneNotSupportedException;"
          },
          {
            "id": 13,
            "content": "void dispose();"
          },
          {
            "id": 14,
            "content": "public void dump(final DataOutputStream out) throws IOException;"
          },
          {
            "id": 15,
            "content": "final int getFixedLength();"
          },
          {
            "id": 16,
            "content": "public int[] getIndices();"
          },
          {
            "id": 17,
            "content": "final int getIndices(final int index);"
          },
          {
            "id": 18,
            "content": "final int getMatch(final int index);"
          },
          {
            "id": 19,
            "content": "final int getMatchLength();"
          },
          {
            "id": 20,
            "content": "final int getPadding();"
          },
          {
            "id": 21,
            "content": "final InstructionHandle getTarget(final int index);"
          },
          {
            "id": 22,
            "content": "@Override"
          },
          {
            "id": 23,
            "content": "protected void initFromFile(final ByteSequence bytes, final boolean wide) throws IOException;"
          },
          {
            "id": 24,
            "content": "final void setFixedLength(final int fixedLength);"
          },
          {
            "id": 25,
            "content": "final int setIndices(final int i, final int value);"
          },
          {
            "id": 26,
            "content": "final void setIndices(final int[] array);"
          },
          {
            "id": 27,
            "content": "final void setMatches(final int[] array);"
          },
          {
            "id": 28,
            "content": "final int setMatchLength(final int matchLength);"
          },
          {
            "id": 29,
            "content": "public void setTarget(final int i, final InstructionHandle target);"
          },
          {
            "id": 30,
            "content": "@Override"
          },
          {
            "id": 31,
            "content": "public String toString(final boolean verbose);"
          },
          {
            "id": 32,
            "content": "@Override"
          },
          {
            "id": 33,
            "content": "protected int updatePosition(final int offset, final int maxOffset);"
          },
          {
            "id": 34,
            "content": "@Override"
          },
          {
            "id": 35,
            "content": "public void updateTarget(final InstructionHandle oldIh, final InstructionHandle newIh);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/InstructionList.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static InstructionHandle findHandle(final InstructionHandle[] ihs, final int[] pos, final int count, final int target);"
          },
          {
            "id": 1,
            "content": "public InstructionList(final BranchInstruction i) {"
          },
          {
            "id": 2,
            "content": "public InstructionList(final byte[] code) {"
          },
          {
            "id": 3,
            "content": "public InstructionList(final CompoundInstruction c) {"
          },
          {
            "id": 4,
            "content": "public void addObserver(final InstructionListObserver o);"
          },
          {
            "id": 5,
            "content": "public BranchHandle append(final BranchInstruction i);"
          },
          {
            "id": 6,
            "content": "public InstructionHandle append(final CompoundInstruction c);"
          },
          {
            "id": 7,
            "content": "public InstructionHandle append(final Instruction i);"
          },
          {
            "id": 8,
            "content": "public InstructionHandle append(final Instruction i, final CompoundInstruction c);"
          },
          {
            "id": 9,
            "content": "public InstructionHandle append(final Instruction i, final Instruction j);"
          },
          {
            "id": 10,
            "content": "public BranchHandle append(final InstructionHandle ih, final BranchInstruction i);"
          },
          {
            "id": 11,
            "content": "public InstructionHandle append(final InstructionHandle ih, final InstructionList il);"
          },
          {
            "id": 12,
            "content": "public InstructionHandle append(final InstructionList il);"
          },
          {
            "id": 13,
            "content": "@Pure"
          },
          {
            "id": 14,
            "content": "public boolean contains(final Instruction i);"
          },
          {
            "id": 15,
            "content": "@Pure"
          },
          {
            "id": 16,
            "content": "public boolean contains(final InstructionHandle i);"
          },
          {
            "id": 17,
            "content": "public InstructionList copy();"
          },
          {
            "id": 18,
            "content": "public void delete(final Instruction i) throws TargetLostException;"
          },
          {
            "id": 19,
            "content": "public void delete(final Instruction from, final Instruction to) throws TargetLostException;"
          },
          {
            "id": 20,
            "content": "public void delete(final InstructionHandle ih) throws TargetLostException;"
          },
          {
            "id": 21,
            "content": "public void delete(final InstructionHandle from, final InstructionHandle to) throws TargetLostException;"
          },
          {
            "id": 22,
            "content": "public void dispose();"
          },
          {
            "id": 23,
            "content": "public InstructionHandle findHandle(final int pos);"
          },
          {
            "id": 24,
            "content": "public byte[] getByteCode();"
          },
          {
            "id": 25,
            "content": "public InstructionHandle getEnd();"
          },
          {
            "id": 26,
            "content": "public InstructionHandle[] getInstructionHandles();"
          },
          {
            "id": 27,
            "content": "public int[] getInstructionPositions();"
          },
          {
            "id": 28,
            "content": "public Instruction[] getInstructions();"
          },
          {
            "id": 29,
            "content": "public int getLength();"
          },
          {
            "id": 30,
            "content": "public InstructionHandle getStart();"
          },
          {
            "id": 31,
            "content": "public BranchHandle insert(final BranchInstruction i);"
          },
          {
            "id": 32,
            "content": "public InstructionHandle insert(final CompoundInstruction c);"
          },
          {
            "id": 33,
            "content": "public InstructionHandle insert(final Instruction i);"
          },
          {
            "id": 34,
            "content": "public InstructionHandle insert(final Instruction i, final CompoundInstruction c);"
          },
          {
            "id": 35,
            "content": "public InstructionHandle insert(final Instruction i, final Instruction j);"
          },
          {
            "id": 36,
            "content": "public InstructionHandle insert(final Instruction i, final InstructionList il);"
          },
          {
            "id": 37,
            "content": "public BranchHandle insert(final InstructionHandle ih, final BranchInstruction i);"
          },
          {
            "id": 38,
            "content": "public InstructionHandle insert(final InstructionHandle ih, final CompoundInstruction c);"
          },
          {
            "id": 39,
            "content": "public InstructionHandle insert(final InstructionHandle ih, final Instruction i);"
          },
          {
            "id": 40,
            "content": "public boolean isEmpty();"
          },
          {
            "id": 41,
            "content": "@Override"
          },
          {
            "id": 42,
            "content": "public Iterator<InstructionHandle> iterator();"
          },
          {
            "id": 43,
            "content": "public void move(final InstructionHandle ih, final InstructionHandle target);"
          },
          {
            "id": 44,
            "content": "public void redirectBranches(final InstructionHandle oldTarget, final InstructionHandle newTarget);"
          },
          {
            "id": 45,
            "content": "public void redirectExceptionHandlers(final CodeExceptionGen[] exceptions, final InstructionHandle oldTarget, final InstructionHandle newTarget);"
          },
          {
            "id": 46,
            "content": "public void redirectLocalVariables(final LocalVariableGen[] lg, final InstructionHandle oldTarget, final InstructionHandle newTarget);"
          },
          {
            "id": 47,
            "content": "public void removeObserver(final InstructionListObserver o);"
          },
          {
            "id": 48,
            "content": "public void replaceConstantPool(final ConstantPoolGen oldCp, final ConstantPoolGen newCp);"
          },
          {
            "id": 49,
            "content": "public int size();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/InstructionTargeter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "void updateTarget(InstructionHandle oldIh, InstructionHandle newIh) throws ClassGenException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/LineNumberGen.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public LineNumberGen(final InstructionHandle ih, final int srcLine) {"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "public Object clone();"
          },
          {
            "id": 3,
            "content": "public InstructionHandle getInstruction();"
          },
          {
            "id": 4,
            "content": "public int getSourceLine();"
          },
          {
            "id": 5,
            "content": "public void setSourceLine(final int srcLine);"
          },
          {
            "id": 6,
            "content": "public void updateTarget(final InstructionHandle oldIh, final InstructionHandle newIh);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/CodeExceptionGen.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Object clone();"
          },
          {
            "id": 1,
            "content": "public CodeException getCodeException(final ConstantPoolGen cp);"
          },
          {
            "id": 2,
            "content": "public InstructionHandle getStartPC();"
          },
          {
            "id": 3,
            "content": "public void setCatchType(final ObjectType catchType);"
          },
          {
            "id": 4,
            "content": "public void setEndPC(final InstructionHandle endPc);"
          },
          {
            "id": 5,
            "content": "public void setHandlerPC(final InstructionHandle handlerPc);"
          },
          {
            "id": 6,
            "content": "public void setStartPC(final InstructionHandle startPc);"
          },
          {
            "id": 7,
            "content": "public void updateTarget(final InstructionHandle oldIh, final InstructionHandle newIh);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/LocalVariableGen.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public Object clone();"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Pure"
          },
          {
            "id": 4,
            "content": "public boolean containsTarget(final InstructionHandle ih);"
          },
          {
            "id": 5,
            "content": "void dispose();"
          },
          {
            "id": 6,
            "content": "@Override"
          },
          {
            "id": 7,
            "content": "public boolean equals(final Object o);"
          },
          {
            "id": 8,
            "content": "public InstructionHandle getEnd();"
          },
          {
            "id": 9,
            "content": "public int getIndex();"
          },
          {
            "id": 10,
            "content": "public boolean getLiveToEnd();"
          },
          {
            "id": 11,
            "content": "@Override"
          },
          {
            "id": 12,
            "content": "public String getName();"
          },
          {
            "id": 13,
            "content": "public int getOrigIndex();"
          },
          {
            "id": 14,
            "content": "public InstructionHandle getStart();"
          },
          {
            "id": 15,
            "content": "@Override"
          },
          {
            "id": 16,
            "content": "public Type getType();"
          },
          {
            "id": 17,
            "content": "@Override"
          },
          {
            "id": 18,
            "content": "public int hashCode();"
          },
          {
            "id": 19,
            "content": "public void setEnd(final InstructionHandle end);"
          },
          {
            "id": 20,
            "content": "public void setLiveToEnd(final boolean liveToEnd);"
          },
          {
            "id": 21,
            "content": "public void setStart(final InstructionHandle start);"
          },
          {
            "id": 22,
            "content": "public void updateTarget(final InstructionHandle oldIh, final InstructionHandle newIh);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/BranchInstruction.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static void notifyTarget(final InstructionHandle oldIh, final InstructionHandle newIh, final InstructionTargeter t);"
          },
          {
            "id": 1,
            "content": "@Deprecated"
          },
          {
            "id": 2,
            "content": "protected int index;"
          },
          {
            "id": 3,
            "content": "@Deprecated"
          },
          {
            "id": 4,
            "content": "protected InstructionHandle target;"
          },
          {
            "id": 5,
            "content": "@Deprecated"
          },
          {
            "id": 6,
            "content": "protected int position;"
          },
          {
            "id": 7,
            "content": "void dispose();"
          },
          {
            "id": 8,
            "content": "public void dump(final DataOutputStream out) throws IOException;"
          },
          {
            "id": 9,
            "content": "public final int getIndex();"
          },
          {
            "id": 10,
            "content": "public InstructionHandle getTarget();"
          },
          {
            "id": 11,
            "content": "protected int getTargetOffset();"
          },
          {
            "id": 12,
            "content": "protected int getTargetOffset(final InstructionHandle target);"
          },
          {
            "id": 13,
            "content": "@Override"
          },
          {
            "id": 14,
            "content": "protected void initFromFile(final ByteSequence bytes, final boolean wide) throws IOException;"
          },
          {
            "id": 15,
            "content": "protected void setIndex(final int index);"
          },
          {
            "id": 16,
            "content": "@Override"
          },
          {
            "id": 17,
            "content": "void setOpcode(final short opcode);"
          },
          {
            "id": 18,
            "content": "public void setTarget(final InstructionHandle target);"
          },
          {
            "id": 19,
            "content": "@Override"
          },
          {
            "id": 20,
            "content": "public String toString(final boolean verbose);"
          },
          {
            "id": 21,
            "content": "protected int updatePosition(final int offset, final int maxOffset);"
          },
          {
            "id": 22,
            "content": "@Override"
          },
          {
            "id": 23,
            "content": "public void updateTarget(final InstructionHandle oldIh, final InstructionHandle newIh);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/ClassGen.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static BCELComparator getComparator();"
          },
          {
            "id": 1,
            "content": "public static void setComparator(final BCELComparator comparator);"
          },
          {
            "id": 2,
            "content": "public ClassGen(final JavaClass clazz) {"
          },
          {
            "id": 3,
            "content": "public ClassGen(final String className, final String superClassName, final String fileName, final int accessFlags, final String[] interfaces, final ConstantPoolGen cp) {"
          },
          {
            "id": 4,
            "content": "public void addAnnotationEntry(final AnnotationEntryGen a);"
          },
          {
            "id": 5,
            "content": "public void addAttribute(final Attribute a);"
          },
          {
            "id": 6,
            "content": "public void addEmptyConstructor(final int accessFlags);"
          },
          {
            "id": 7,
            "content": "public void addField(final Field f);"
          },
          {
            "id": 8,
            "content": "public void addObserver(final ClassObserver o);"
          },
          {
            "id": 9,
            "content": "@Override"
          },
          {
            "id": 10,
            "content": "public Object clone();"
          },
          {
            "id": 11,
            "content": "@Pure"
          },
          {
            "id": 12,
            "content": "@Override"
          },
          {
            "id": 13,
            "content": "public boolean equals(final Object obj);"
          },
          {
            "id": 14,
            "content": "public AnnotationEntryGen[] getAnnotationEntries();"
          },
          {
            "id": 15,
            "content": "public Attribute[] getAttributes();"
          },
          {
            "id": 16,
            "content": "public int getClassNameIndex();"
          },
          {
            "id": 17,
            "content": "public ConstantPoolGen getConstantPool();"
          },
          {
            "id": 18,
            "content": "public Field[] getFields();"
          },
          {
            "id": 19,
            "content": "public JavaClass getJavaClass();"
          },
          {
            "id": 20,
            "content": "public int getMajor();"
          },
          {
            "id": 21,
            "content": "public Method getMethodAt(final int pos);"
          },
          {
            "id": 22,
            "content": "public Method[] getMethods();"
          },
          {
            "id": 23,
            "content": "public int getMinor();"
          },
          {
            "id": 24,
            "content": "public String getSuperclassName();"
          },
          {
            "id": 25,
            "content": "@Override"
          },
          {
            "id": 26,
            "content": "public int hashCode();"
          },
          {
            "id": 27,
            "content": "public void removeAttribute(final Attribute a);"
          },
          {
            "id": 28,
            "content": "public void removeField(final Field f);"
          },
          {
            "id": 29,
            "content": "public void removeInterface(final String name);"
          },
          {
            "id": 30,
            "content": "public void removeMethod(final Method m);"
          },
          {
            "id": 31,
            "content": "public void replaceField(final Field old, final Field newField);"
          },
          {
            "id": 32,
            "content": "public void replaceMethod(final Method old, final Method newMethod);"
          },
          {
            "id": 33,
            "content": "public void setClassName(final String name);"
          },
          {
            "id": 34,
            "content": "public void setClassNameIndex(final int classNameIndex);"
          },
          {
            "id": 35,
            "content": "public void setConstantPool(final ConstantPoolGen constantPool);"
          },
          {
            "id": 36,
            "content": "public void setMajor(final int major);"
          },
          {
            "id": 37,
            "content": "public void setMethodAt(final Method method, final int pos);"
          },
          {
            "id": 38,
            "content": "public void setMethods(final Method[] methods);"
          },
          {
            "id": 39,
            "content": "public void setMinor(final int minor);"
          },
          {
            "id": 40,
            "content": "public void setSuperclassName(final String name);"
          },
          {
            "id": 41,
            "content": "public void setSuperclassNameIndex(final int superclassNameIndex);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.compiler/share/classes/com/sun/tools/javac/tree/TreeInfo.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static boolean unguardedCase(JCCase cse);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.compiler/share/classes/com/sun/tools/javac/file/JavacFileManager.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Type.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "protected final List<TypeMetadata> metadata;"
          },
          {
            "id": 1,
            "content": "public Type(TypeSymbol tsym, List<TypeMetadata> metadata) {"
          },
          {
            "id": 2,
            "content": "protected Type cloneWithMetadata(List<TypeMetadata> metadata);"
          },
          {
            "id": 3,
            "content": "public List<TypeMetadata> getMetadata();"
          },
          {
            "id": 4,
            "content": "@SuppressWarnings(\"unchecked\")"
          },
          {
            "id": 5,
            "content": "public <M extends TypeMetadata> M getMetadata(Class<M> metadataClass);"
          },
          {
            "id": 6,
            "content": "@SuppressWarnings(\"unchecked\")"
          },
          {
            "id": 7,
            "content": "public <M extends TypeMetadata, Z> Z getMetadata(Class<M> metadataClass, Function<M, Z> metadataFunc, Z defaultValue);"
          },
          {
            "id": 8,
            "content": "public Type addMetadata(TypeMetadata md);"
          },
          {
            "id": 9,
            "content": "public Type dropMetadata(Class<? extends TypeMetadata> metadataClass);"
          },
          {
            "id": 10,
            "content": "public Type preannotatedType();"
          },
          {
            "id": 11,
            "content": "protected JCPrimitiveType cloneWithMetadata(List<TypeMetadata> md);"
          },
          {
            "id": 12,
            "content": "public WildcardType(Type type, BoundKind kind, TypeSymbol tsym, List<TypeMetadata> metadata) {"
          },
          {
            "id": 13,
            "content": "public WildcardType(Type type, BoundKind kind, TypeSymbol tsym, TypeVar bound, List<TypeMetadata> metadata) {"
          },
          {
            "id": 14,
            "content": "protected WildcardType cloneWithMetadata(List<TypeMetadata> md);"
          },
          {
            "id": 15,
            "content": "public ClassType(Type outer, List<Type> typarams, TypeSymbol tsym, List<TypeMetadata> metadata) {"
          },
          {
            "id": 16,
            "content": "protected ClassType cloneWithMetadata(List<TypeMetadata> md);"
          },
          {
            "id": 17,
            "content": "public ErasedClassType(Type outer, TypeSymbol tsym, List<TypeMetadata> metadata) {"
          },
          {
            "id": 18,
            "content": "public ArrayType(Type elemtype, TypeSymbol arrayClass, List<TypeMetadata> metadata) {"
          },
          {
            "id": 19,
            "content": "protected ArrayType cloneWithMetadata(List<TypeMetadata> md);"
          },
          {
            "id": 20,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 21,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 22,
            "content": "public TypeVar(TypeSymbol tsym, Type bound, Type lower, List<TypeMetadata> metadata) {"
          },
          {
            "id": 23,
            "content": "protected TypeVar cloneWithMetadata(List<TypeMetadata> md);"
          },
          {
            "id": 24,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 25,
            "content": "public CapturedType(TypeSymbol tsym, Type bound, Type upper, Type lower, WildcardType wildcard, List<TypeMetadata> metadata) {"
          },
          {
            "id": 26,
            "content": "protected CapturedType cloneWithMetadata(List<TypeMetadata> md);"
          },
          {
            "id": 27,
            "content": "public DelegatedType(TypeTag tag, Type qtype, List<TypeMetadata> metadata) {"
          },
          {
            "id": 28,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 29,
            "content": "protected ErrorType cloneWithMetadata(List<TypeMetadata> md);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.compiler/share/classes/com/sun/tools/javac/code/DeferredCompletionFailureHandler.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Symbol.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 2,
            "content": "@SuppressWarnings(\"preview\")"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@CanonicalName"
          },
          {
            "id": 5,
            "content": "public Name getSimpleName();"
          },
          {
            "id": 6,
            "content": "@Override"
          },
          {
            "id": 7,
            "content": "@DefinedBy(Api.LANGUAGE_MODEL)"
          },
          {
            "id": 8,
            "content": "@Override"
          },
          {
            "id": 9,
            "content": "@DefinedBy(Api.LANGUAGE_MODEL)"
          },
          {
            "id": 10,
            "content": "public boolean isUnnamed();"
          },
          {
            "id": 11,
            "content": "@SuppressWarnings(\"preview\")"
          },
          {
            "id": 12,
            "content": "public boolean isUnnamedVariable();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Types.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Resolve.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.compiler/share/classes/com/sun/tools/javac/model/JavacTypes.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.compiler/share/classes/com/sun/source/tree/Tree.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "TEMPLATE(StringTemplateTree.class),"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "ANY_PATTERN(AnyPatternTree.class),"
            },
            "methods": []
          }
        ],
        "new_methods": [
          {
            "id": 2,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.STRING_TEMPLATES, reflective = true)"
          },
          {
            "id": 3,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.UNNAMED)"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/P11Key.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "static final class P11PBEKey extends P11SecretKey implements PBEKey {"
            },
            "methods": [
              {
                "id": 2,
                "content": "@Override"
              },
              {
                "id": 3,
                "content": "public char[] getPassword();"
              },
              {
                "id": 4,
                "content": "@Override"
              },
              {
                "id": 5,
                "content": "public byte[] getSalt();"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "public int getIterationCount();"
              },
              {
                "id": 8,
                "content": "void clearPassword();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "static SecretKey pbeKey(Session session, long keyID, String algorithm, int keyLength, CK_ATTRIBUTE[] attrs, char[] password, byte[] salt, int iterationCount);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/wrapper/Functions.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static int getLength(byte[] value);"
          },
          {
            "id": 1,
            "content": "public static String getPrfName(long id);"
          },
          {
            "id": 2,
            "content": "public static long getPrfId(String name);"
          },
          {
            "id": 3,
            "content": "public static String getParamSourcesName(long id);"
          },
          {
            "id": 4,
            "content": "public static long getParamSourcesId(String name);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.logging/share/classes/java/util/logging/Handler.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "boolean tryUseLock();"
          },
          {
            "id": 1,
            "content": "void unlock();"
          },
          {
            "id": 2,
            "content": "public void setFormatter(Formatter newFormatter) throws SecurityException;"
          },
          {
            "id": 3,
            "content": "public void setEncoding(@Nullable String encoding) throws SecurityException, java.io.UnsupportedEncodingException;"
          },
          {
            "id": 4,
            "content": "public void setFilter(@Nullable Filter newFilter) throws SecurityException;"
          },
          {
            "id": 5,
            "content": "public void setErrorManager(ErrorManager em);"
          },
          {
            "id": 6,
            "content": "public void setLevel(Level newLevel) throws SecurityException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.logging/share/classes/java/util/logging/ErrorManager.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void error(String msg, Exception ex, int code);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/utils/IdealGraphVisualizer/Filter/src/main/java/com/sun/hotspot/igv/filter/FilterChain.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public FilterChain(String name) {"
          },
          {
            "id": 1,
            "content": "public void sortBy(List<String> order);"
          },
          {
            "id": 2,
            "content": "public void applyInOrder(Diagram diagram, FilterChain filterOrder);"
          },
          {
            "id": 3,
            "content": "public void clearFilters();"
          },
          {
            "id": 4,
            "content": "public void addFilters(List<Filter> filtersToAdd);"
          },
          {
            "id": 5,
            "content": "public String getName();"
          },
          {
            "id": 6,
            "content": "@Override"
          },
          {
            "id": 7,
            "content": "public String toString();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/sun/net/www/protocol/https/HttpsURLConnectionImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public long getHeaderFieldDate(String name, long defaultValue);"
          },
          {
            "id": 1,
            "content": "public int getHeaderFieldInt(String name, int defaultValue);"
          },
          {
            "id": 2,
            "content": "public long getHeaderFieldLong(String name, long defaultValue);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/sun/net/www/http/KeepAliveCache.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class KeepAliveCache extends HashMap<KeepAliveKey, KeepAliveCache.ClientVector> implements Runnable {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "class ClientVector extends ArrayDeque<KeepAliveEntry> {"
            },
            "methods": [
              {
                "id": 2,
                "content": "HttpClient get();"
              },
              {
                "id": 3,
                "content": "HttpClient put(HttpClient h);"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/sun/security/util/SignatureFileVerifier.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static final int MAX_SIG_FILE_SIZE;"
          },
          {
            "id": 1,
            "content": "public static boolean isInMetaInf(String name);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/sun/security/x509/X509Key.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "void decode(DerValue val) throws InvalidKeyException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/sun/security/x509/AlgorithmId.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static final ObjectIdentifier SHA1withRSA_oid;"
          },
          {
            "id": 1,
            "content": "public static final ObjectIdentifier SHA224withRSA_oid;"
          },
          {
            "id": 2,
            "content": "public static final ObjectIdentifier SHA256withRSA_oid;"
          },
          {
            "id": 3,
            "content": "public static final ObjectIdentifier SHA384withRSA_oid;"
          },
          {
            "id": 4,
            "content": "public static final ObjectIdentifier SHA512withRSA_oid;"
          },
          {
            "id": 5,
            "content": "public static final ObjectIdentifier SHA512$224withRSA_oid;"
          },
          {
            "id": 6,
            "content": "public static final ObjectIdentifier SHA512$256withRSA_oid;"
          },
          {
            "id": 7,
            "content": "public static final ObjectIdentifier MD2withRSA_oid;"
          },
          {
            "id": 8,
            "content": "public static final ObjectIdentifier MD5withRSA_oid;"
          },
          {
            "id": 9,
            "content": "public static final ObjectIdentifier SHA3_224withRSA_oid;"
          },
          {
            "id": 10,
            "content": "public static final ObjectIdentifier SHA3_256withRSA_oid;"
          },
          {
            "id": 11,
            "content": "public static final ObjectIdentifier SHA3_384withRSA_oid;"
          },
          {
            "id": 12,
            "content": "public static final ObjectIdentifier SHA3_512withRSA_oid;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/sun/security/pkcs/PKCS8Key.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class PKCS8Key implements PrivateKey, InternalPrivateKey {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/sun/nio/ch/FileChannelImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static FileChannel open(FileDescriptor fd, String path, boolean readable, boolean writable, boolean direct, Closeable parent);"
          },
          {
            "id": 1,
            "content": "public MemorySegment map(MapMode mode, long offset, long size, Arena arena) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/net/InetSocketAddress.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static final class InetSocketAddressHolder {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/net/Socket.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "SocketImpl impl();"
          },
          {
            "id": 1,
            "content": "void setConnectedImpl(SocketImpl si) throws SocketException;"
          },
          {
            "id": 2,
            "content": "void setConnected();"
          },
          {
            "id": 3,
            "content": "public void setSoTimeout(int timeout) throws SocketException;"
          },
          {
            "id": 4,
            "content": "public int getSoTimeout() throws SocketException;"
          },
          {
            "id": 5,
            "content": "public void setSendBufferSize(int size) throws SocketException;"
          },
          {
            "id": 6,
            "content": "public int getSendBufferSize() throws SocketException;"
          },
          {
            "id": 7,
            "content": "public void setReceiveBufferSize(int size) throws SocketException;"
          },
          {
            "id": 8,
            "content": "public int getReceiveBufferSize() throws SocketException;"
          },
          {
            "id": 9,
            "content": "public void close() throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/net/InetAddress.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class CachedLookup implements Addresses, Comparable<CachedLookup> {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public int compareTo(CachedLookup other);"
              },
              {
                "id": 3,
                "content": "public boolean tryRemoveExpiredAddress(long now);"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "private static final class ValidCachedLookup extends CachedLookup {"
            },
            "methods": [
              {
                "id": 4,
                "content": "@Override"
              },
              {
                "id": 5,
                "content": "public InetAddress[] get();"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "public boolean tryRemoveExpiredAddress(long now);"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/TreeMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public V putFirst(K k, V v);"
          },
          {
            "id": 1,
            "content": "public V putLast(K k, V v);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/LinkedList.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "static class ReverseOrderLinkedListView<E> extends LinkedList<E> implements java.io.Externalizable {"
            },
            "methods": [
              {
                "id": 3,
                "content": "public String toString();"
              },
              {
                "id": 4,
                "content": "public boolean retainAll(Collection<?> c);"
              },
              {
                "id": 5,
                "content": "public boolean removeAll(Collection<?> c);"
              },
              {
                "id": 6,
                "content": "public boolean containsAll(Collection<?> c);"
              },
              {
                "id": 7,
                "content": "public boolean isEmpty();"
              },
              {
                "id": 8,
                "content": "public Stream<E> parallelStream();"
              },
              {
                "id": 9,
                "content": "public Stream<E> stream();"
              },
              {
                "id": 10,
                "content": "public boolean removeIf(Predicate<? super E> filter);"
              },
              {
                "id": 11,
                "content": "public <T> T[] toArray(IntFunction<T[]> generator);"
              },
              {
                "id": 12,
                "content": "public void forEach(Consumer<? super E> action);"
              },
              {
                "id": 13,
                "content": "public Iterator<E> iterator();"
              },
              {
                "id": 14,
                "content": "public int hashCode();"
              },
              {
                "id": 15,
                "content": "public boolean equals(Object o);"
              },
              {
                "id": 16,
                "content": "public List<E> subList(int fromIndex, int toIndex);"
              },
              {
                "id": 17,
                "content": "public ListIterator<E> listIterator();"
              },
              {
                "id": 18,
                "content": "public void sort(Comparator<? super E> c);"
              },
              {
                "id": 19,
                "content": "public void replaceAll(UnaryOperator<E> operator);"
              },
              {
                "id": 20,
                "content": "public LinkedList<E> reversed();"
              },
              {
                "id": 21,
                "content": "public Spliterator<E> spliterator();"
              },
              {
                "id": 22,
                "content": "public <T> T[] toArray(T[] a);"
              },
              {
                "id": 23,
                "content": "public Object[] toArray();"
              },
              {
                "id": 24,
                "content": "public Iterator<E> descendingIterator();"
              },
              {
                "id": 25,
                "content": "public ListIterator<E> listIterator(int index);"
              },
              {
                "id": 26,
                "content": "public boolean removeLastOccurrence(Object o);"
              },
              {
                "id": 27,
                "content": "public boolean removeFirstOccurrence(Object o);"
              },
              {
                "id": 28,
                "content": "public E pop();"
              },
              {
                "id": 29,
                "content": "public void push(E e);"
              },
              {
                "id": 30,
                "content": "public E pollLast();"
              },
              {
                "id": 31,
                "content": "public E pollFirst();"
              },
              {
                "id": 32,
                "content": "public E peekLast();"
              },
              {
                "id": 33,
                "content": "public E peekFirst();"
              },
              {
                "id": 34,
                "content": "public boolean offerLast(E e);"
              },
              {
                "id": 35,
                "content": "public boolean offerFirst(E e);"
              },
              {
                "id": 36,
                "content": "public boolean offer(E e);"
              },
              {
                "id": 37,
                "content": "public E remove();"
              },
              {
                "id": 38,
                "content": "public E poll();"
              },
              {
                "id": 39,
                "content": "public E element();"
              },
              {
                "id": 40,
                "content": "public E peek();"
              },
              {
                "id": 41,
                "content": "public int lastIndexOf(Object o);"
              },
              {
                "id": 42,
                "content": "public int indexOf(Object o);"
              },
              {
                "id": 43,
                "content": "public E remove(int index);"
              },
              {
                "id": 44,
                "content": "public void add(int index, E element);"
              },
              {
                "id": 45,
                "content": "public E set(int index, E element);"
              },
              {
                "id": 46,
                "content": "public E get(int index);"
              },
              {
                "id": 47,
                "content": "public void clear();"
              },
              {
                "id": 48,
                "content": "public boolean addAll(int index, Collection<? extends E> c);"
              },
              {
                "id": 49,
                "content": "public boolean addAll(Collection<? extends E> c);"
              },
              {
                "id": 50,
                "content": "public boolean remove(Object o);"
              },
              {
                "id": 51,
                "content": "public boolean add(E e);"
              },
              {
                "id": 52,
                "content": "public int size();"
              },
              {
                "id": 53,
                "content": "public boolean contains(Object o);"
              },
              {
                "id": 54,
                "content": "public void addLast(E e);"
              },
              {
                "id": 55,
                "content": "public void addFirst(E e);"
              },
              {
                "id": 56,
                "content": "public E removeLast();"
              },
              {
                "id": 57,
                "content": "public E removeFirst();"
              },
              {
                "id": 58,
                "content": "public E getLast();"
              },
              {
                "id": 59,
                "content": "public E getFirst();"
              },
              {
                "id": 60,
                "content": "public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException;"
              },
              {
                "id": 61,
                "content": "public void writeExternal(ObjectOutput out) throws IOException;"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "public LinkedList<E> reversed();"
          },
          {
            "id": 2,
            "content": "@SuppressWarnings(\"serial\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/SortedSet.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public interface SortedSet<E> extends Set<E>, SequencedSet<E> {"
          },
          {
            "id": 1,
            "content": "default void addFirst(E e);"
          },
          {
            "id": 2,
            "content": "default void addLast(E e);"
          },
          {
            "id": 3,
            "content": "default E getFirst();"
          },
          {
            "id": 4,
            "content": "default E getLast();"
          },
          {
            "id": 5,
            "content": "default E removeFirst();"
          },
          {
            "id": 6,
            "content": "default E removeLast();"
          },
          {
            "id": 7,
            "content": "default SortedSet<E> reversed();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/LinkedHashMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class LinkedHashMap<K, V> extends HashMap<K, V> implements SequencedMap<K, V> {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "final class LinkedKeySet extends AbstractSet<K> implements SequencedSet<K> {"
            },
            "methods": [
              {
                "id": 11,
                "content": "public final void addFirst(K k);"
              },
              {
                "id": 12,
                "content": "public final void addLast(K k);"
              },
              {
                "id": 13,
                "content": "public final K getFirst();"
              },
              {
                "id": 14,
                "content": "public final K getLast();"
              },
              {
                "id": 15,
                "content": "public final K removeFirst();"
              },
              {
                "id": 16,
                "content": "public final K removeLast();"
              },
              {
                "id": 17,
                "content": "public SequencedSet<K> reversed();"
              },
              {
                "id": 18,
                "content": "public SequencedCollection<V> sequencedValues();"
              }
            ]
          },
          {
            "declaration": {
              "id": 2,
              "content": "final class LinkedValues extends AbstractCollection<V> implements SequencedCollection<V> {"
            },
            "methods": [
              {
                "id": 19,
                "content": "public final void addFirst(V v);"
              },
              {
                "id": 20,
                "content": "public final void addLast(V v);"
              },
              {
                "id": 21,
                "content": "public final V getFirst();"
              },
              {
                "id": 22,
                "content": "public final V getLast();"
              },
              {
                "id": 23,
                "content": "public final V removeFirst();"
              },
              {
                "id": 24,
                "content": "public final V removeLast();"
              },
              {
                "id": 25,
                "content": "public SequencedCollection<V> reversed();"
              },
              {
                "id": 26,
                "content": "public SequencedSet<Map.Entry<K, V>> sequencedEntrySet();"
              }
            ]
          },
          {
            "declaration": {
              "id": 3,
              "content": "final class LinkedEntrySet extends AbstractSet<Map.Entry<K, V>> implements SequencedSet<Map.Entry<K, V>> {"
            },
            "methods": [
              {
                "id": 27,
                "content": "final Node<K, V> nsee(Node<K, V> e);"
              },
              {
                "id": 28,
                "content": "public final void addFirst(Map.Entry<K, V> e);"
              },
              {
                "id": 29,
                "content": "public final void addLast(Map.Entry<K, V> e);"
              },
              {
                "id": 30,
                "content": "public final Map.Entry<K, V> getFirst();"
              },
              {
                "id": 31,
                "content": "public final Map.Entry<K, V> getLast();"
              },
              {
                "id": 32,
                "content": "public final Map.Entry<K, V> removeFirst();"
              },
              {
                "id": 33,
                "content": "public final Map.Entry<K, V> removeLast();"
              },
              {
                "id": 34,
                "content": "public SequencedSet<Map.Entry<K, V>> reversed();"
              }
            ]
          },
          {
            "declaration": {
              "id": 4,
              "content": "static class ReversedLinkedHashMapView<K, V> extends AbstractMap<K, V> implements SequencedMap<K, V> {"
            },
            "methods": [
              {
                "id": 36,
                "content": "public boolean equals(Object o);"
              },
              {
                "id": 37,
                "content": "public int hashCode();"
              },
              {
                "id": 38,
                "content": "public int size();"
              },
              {
                "id": 39,
                "content": "public boolean isEmpty();"
              },
              {
                "id": 40,
                "content": "public boolean containsKey(Object key);"
              },
              {
                "id": 41,
                "content": "public boolean containsValue(Object value);"
              },
              {
                "id": 42,
                "content": "public V get(Object key);"
              },
              {
                "id": 43,
                "content": "public V put(K key, V value);"
              },
              {
                "id": 44,
                "content": "public V remove(Object key);"
              },
              {
                "id": 45,
                "content": "public void putAll(Map<? extends K, ? extends V> m);"
              },
              {
                "id": 46,
                "content": "public void clear();"
              },
              {
                "id": 47,
                "content": "public Set<K> keySet();"
              },
              {
                "id": 48,
                "content": "public Collection<V> values();"
              },
              {
                "id": 49,
                "content": "public Set<Entry<K, V>> entrySet();"
              },
              {
                "id": 50,
                "content": "public V getOrDefault(Object key, V defaultValue);"
              },
              {
                "id": 51,
                "content": "public void forEach(BiConsumer<? super K, ? super V> action);"
              },
              {
                "id": 52,
                "content": "public void replaceAll(BiFunction<? super K, ? super V, ? extends V> function);"
              },
              {
                "id": 53,
                "content": "public V putIfAbsent(K key, V value);"
              },
              {
                "id": 54,
                "content": "public boolean remove(Object key, Object value);"
              },
              {
                "id": 55,
                "content": "public boolean replace(K key, V oldValue, V newValue);"
              },
              {
                "id": 56,
                "content": "public V replace(K key, V value);"
              },
              {
                "id": 57,
                "content": "public V computeIfAbsent(K key, Function<? super K, ? extends V> mappingFunction);"
              },
              {
                "id": 58,
                "content": "public V computeIfPresent(K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction);"
              },
              {
                "id": 59,
                "content": "public V compute(K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction);"
              },
              {
                "id": 60,
                "content": "public V merge(K key, V value, BiFunction<? super V, ? super V, ? extends V> remappingFunction);"
              },
              {
                "id": 61,
                "content": "public SequencedMap<K, V> reversed();"
              },
              {
                "id": 62,
                "content": "public Entry<K, V> firstEntry();"
              },
              {
                "id": 63,
                "content": "public Entry<K, V> lastEntry();"
              },
              {
                "id": 64,
                "content": "public Entry<K, V> pollFirstEntry();"
              },
              {
                "id": 65,
                "content": "public Entry<K, V> pollLastEntry();"
              },
              {
                "id": 66,
                "content": "public V putFirst(K k, V v);"
              },
              {
                "id": 67,
                "content": "public V putLast(K k, V v);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 5,
            "content": "public V putFirst(K k, V v);"
          },
          {
            "id": 6,
            "content": "public V putLast(K k, V v);"
          },
          {
            "id": 7,
            "content": "public SequencedSet<K> sequencedKeySet();"
          },
          {
            "id": 8,
            "content": "static <K1, V1> Node<K1, V1> nsee(Node<K1, V1> node);"
          },
          {
            "id": 9,
            "content": "final <T> T[] keysToArray(T[] a, boolean reversed);"
          },
          {
            "id": 10,
            "content": "final <T> T[] valuesToArray(T[] a, boolean reversed);"
          },
          {
            "id": 35,
            "content": "public SequencedMap<K, V> reversed();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/NavigableMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "default NavigableMap<K, V> reversed();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/LongSummaryStatistics.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"overloads\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/ImmutableCollections.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public List<E> reversed();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/List.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public interface List<E> extends SequencedCollection<E> {"
          },
          {
            "id": 1,
            "content": "default void addFirst(E e);"
          },
          {
            "id": 2,
            "content": "default void addLast(E e);"
          },
          {
            "id": 3,
            "content": "default E getFirst();"
          },
          {
            "id": 4,
            "content": "default E getLast();"
          },
          {
            "id": 5,
            "content": "default E removeFirst();"
          },
          {
            "id": 6,
            "content": "default E removeLast();"
          },
          {
            "id": 7,
            "content": "default List<E> reversed();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/ArrayList.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public E getFirst();"
          },
          {
            "id": 1,
            "content": "public E getLast();"
          },
          {
            "id": 2,
            "content": "public void addFirst(E element);"
          },
          {
            "id": 3,
            "content": "public void addLast(E element);"
          },
          {
            "id": 4,
            "content": "public E removeFirst();"
          },
          {
            "id": 5,
            "content": "public E removeLast();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/Locale.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static Stream<Locale> availableLocales();"
          },
          {
            "id": 1,
            "content": "public static String caseFoldLanguageTag(String languageTag);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/Formatter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "static class FormatSpecifier implements FormatString {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "static class Flags {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 2,
              "content": "static class Conversion {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 3,
              "content": "static class DateTime {"
            },
            "methods": []
          }
        ],
        "new_methods": [
          {
            "id": 4,
            "content": "static List<FormatString> parse(String s);"
          },
          {
            "id": 5,
            "content": "interface FormatString {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/Deque.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public interface Deque<E> extends Queue<E>, SequencedCollection<E> {"
          },
          {
            "id": 1,
            "content": "default Deque<E> reversed();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/AbstractMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "abstract static class ViewCollection<E> implements Collection<E> {"
            },
            "methods": [
              {
                "id": 1,
                "content": "UnsupportedOperationException uoe();"
              },
              {
                "id": 2,
                "content": "abstract Collection<E> view();"
              },
              {
                "id": 3,
                "content": "public boolean add(E t);"
              },
              {
                "id": 4,
                "content": "public boolean addAll(Collection<? extends E> c);"
              },
              {
                "id": 5,
                "content": "public void clear();"
              },
              {
                "id": 6,
                "content": "public boolean contains(Object o);"
              },
              {
                "id": 7,
                "content": "public boolean containsAll(Collection<?> c);"
              },
              {
                "id": 8,
                "content": "public void forEach(Consumer<? super E> c);"
              },
              {
                "id": 9,
                "content": "public boolean isEmpty();"
              },
              {
                "id": 10,
                "content": "public Iterator<E> iterator();"
              },
              {
                "id": 11,
                "content": "public Stream<E> parallelStream();"
              },
              {
                "id": 12,
                "content": "public boolean remove(Object o);"
              },
              {
                "id": 13,
                "content": "public boolean removeAll(Collection<?> c);"
              },
              {
                "id": 14,
                "content": "public boolean removeIf(Predicate<? super E> filter);"
              },
              {
                "id": 15,
                "content": "public boolean retainAll(Collection<?> c);"
              },
              {
                "id": 16,
                "content": "public int size();"
              },
              {
                "id": 17,
                "content": "public Spliterator<E> spliterator();"
              },
              {
                "id": 18,
                "content": "public Stream<E> stream();"
              },
              {
                "id": 19,
                "content": "public Object[] toArray();"
              },
              {
                "id": 20,
                "content": "public <T> T[] toArray(IntFunction<T[]> generator);"
              },
              {
                "id": 21,
                "content": "public <T> T[] toArray(T[] a);"
              },
              {
                "id": 22,
                "content": "public String toString();"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/LinkedHashSet.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class LinkedHashSet<E> extends HashSet<E> implements SequencedSet<E>, Cloneable, java.io.Serializable {"
            },
            "methods": [
              {
                "id": 1,
                "content": "@SuppressWarnings(\"unchecked\")"
              },
              {
                "id": 2,
                "content": "LinkedHashMap<E, Object> map();"
              },
              {
                "id": 3,
                "content": "public void addFirst(E e);"
              },
              {
                "id": 4,
                "content": "public void addLast(E e);"
              },
              {
                "id": 5,
                "content": "public E getFirst();"
              },
              {
                "id": 6,
                "content": "public E getLast();"
              },
              {
                "id": 7,
                "content": "public E removeFirst();"
              },
              {
                "id": 8,
                "content": "public E removeLast();"
              },
              {
                "id": 9,
                "content": "public SequencedSet<E> reversed();"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/Collections.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "static class UnmodifiableSequencedCollection<E> extends UnmodifiableCollection<E> implements SequencedCollection<E>, Serializable {"
            },
            "methods": [
              {
                "id": 9,
                "content": "public SequencedCollection<E> reversed();"
              },
              {
                "id": 10,
                "content": "public void addFirst(E e);"
              },
              {
                "id": 11,
                "content": "public void addLast(E e);"
              },
              {
                "id": 12,
                "content": "public E getFirst();"
              },
              {
                "id": 13,
                "content": "public E getLast();"
              },
              {
                "id": 14,
                "content": "public E removeFirst();"
              },
              {
                "id": 15,
                "content": "public E removeLast();"
              },
              {
                "id": 16,
                "content": "@SuppressWarnings(\"unchecked\")"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "static class UnmodifiableSequencedSet<E> extends UnmodifiableSequencedCollection<E> implements SequencedSet<E>, Serializable {"
            },
            "methods": [
              {
                "id": 19,
                "content": "public boolean equals(Object o);"
              },
              {
                "id": 20,
                "content": "public int hashCode();"
              },
              {
                "id": 21,
                "content": "public SequencedSet<E> reversed();"
              }
            ]
          },
          {
            "declaration": {
              "id": 2,
              "content": "private static class UnmodifiableSequencedMap<K, V> extends UnmodifiableMap<K, V> implements SequencedMap<K, V>, Serializable {"
            },
            "methods": [
              {
                "id": 23,
                "content": "public SequencedMap<K, V> reversed();"
              },
              {
                "id": 24,
                "content": "public Entry<K, V> pollFirstEntry();"
              },
              {
                "id": 25,
                "content": "public Entry<K, V> pollLastEntry();"
              },
              {
                "id": 26,
                "content": "public V putFirst(K k, V v);"
              },
              {
                "id": 27,
                "content": "public V putLast(K k, V v);"
              },
              {
                "id": 28,
                "content": "@SuppressWarnings(\"unchecked\")"
              }
            ]
          },
          {
            "declaration": {
              "id": 3,
              "content": "private static class SequencedSetFromMap<E> extends SetFromMap<E> implements SequencedSet<E> {"
            },
            "methods": [
              {
                "id": 30,
                "content": "public SequencedSet<E> reversed();"
              },
              {
                "id": 31,
                "content": "public void addFirst(E e);"
              },
              {
                "id": 32,
                "content": "public void addLast(E e);"
              },
              {
                "id": 33,
                "content": "public E getFirst();"
              },
              {
                "id": 34,
                "content": "public E getLast();"
              },
              {
                "id": 35,
                "content": "public E removeFirst();"
              },
              {
                "id": 36,
                "content": "public E removeLast();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 4,
            "content": "public static void shuffle(List<?> list, Random rnd);"
          },
          {
            "id": 5,
            "content": "public static void shuffle(@GuardSatisfied List<?> list, RandomGenerator rnd);"
          },
          {
            "id": 6,
            "content": "@SuppressWarnings({ \"unchecked\" })"
          },
          {
            "id": 7,
            "content": "@SuppressWarnings({ \"unchecked\" })"
          },
          {
            "id": 8,
            "content": "public static <T> SequencedCollection<T> unmodifiableSequencedCollection(SequencedCollection<? extends T> c);"
          },
          {
            "id": 17,
            "content": "@SuppressWarnings(\"unchecked\")"
          },
          {
            "id": 18,
            "content": "public static <T> SequencedSet<T> unmodifiableSequencedSet(SequencedSet<? extends T> s);"
          },
          {
            "id": 22,
            "content": "public static <K, V> SequencedMap<K, V> unmodifiableSequencedMap(SequencedMap<? extends K, ? extends V> m);"
          },
          {
            "id": 29,
            "content": "public static <E> SequencedSet<E> newSequencedSetFromMap(SequencedMap<E, Boolean> map);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/PrimitiveIterator.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"overloads\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"overloads\")"
          },
          {
            "id": 2,
            "content": "@SuppressWarnings(\"overloads\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/Arrays.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class Arrays {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/Spliterator.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"overloads\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"overloads\")"
          },
          {
            "id": 2,
            "content": "@SuppressWarnings(\"overloads\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/NavigableSet.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "default E removeFirst();"
          },
          {
            "id": 1,
            "content": "default E removeLast();"
          },
          {
            "id": 2,
            "content": "default NavigableSet<E> reversed();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/SortedMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public interface SortedMap<K, V> extends SequencedMap<K, V> {"
          },
          {
            "id": 1,
            "content": "default V putFirst(K k, V v);"
          },
          {
            "id": 2,
            "content": "default V putLast(K k, V v);"
          },
          {
            "id": 3,
            "content": "default SortedMap<K, V> reversed();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/TreeSet.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void addFirst(E e);"
          },
          {
            "id": 1,
            "content": "public void addLast(E e);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/Spliterators.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"overloads\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"overloads\")"
          },
          {
            "id": 2,
            "content": "@SuppressWarnings(\"overloads\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/stream/Collectors.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public int size();"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "public boolean isEmpty();"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "public T get(Object key);"
          },
          {
            "id": 5,
            "content": "@Override"
          },
          {
            "id": 6,
            "content": "public boolean containsKey(Object key);"
          },
          {
            "id": 7,
            "content": "@Override"
          },
          {
            "id": 8,
            "content": "public boolean containsValue(Object value);"
          },
          {
            "id": 9,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/regex/Pattern.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public String @MinLen(1) [] splitWithDelimiters(CharSequence input, int limit);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/zip/ZipCoder.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "Comparison compare(String str, byte[] b, int off, int len, boolean matchDirectory);"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "Comparison compare(String str, byte[] b, int off, int len, boolean matchDirectory);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/concurrent/CopyOnWriteArrayList.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class Reversed<E> implements List<E>, RandomAccess {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "class DescendingIterator implements Iterator<E> {"
            },
            "methods": [
              {
                "id": 17,
                "content": "public boolean hasNext();"
              },
              {
                "id": 18,
                "content": "public E next();"
              },
              {
                "id": 19,
                "content": "public void remove();"
              }
            ]
          },
          {
            "declaration": {
              "id": 2,
              "content": "class DescendingListIterator implements ListIterator<E> {"
            },
            "methods": [
              {
                "id": 20,
                "content": "public boolean hasNext();"
              },
              {
                "id": 21,
                "content": "public E next();"
              },
              {
                "id": 22,
                "content": "public boolean hasPrevious();"
              },
              {
                "id": 23,
                "content": "public E previous();"
              },
              {
                "id": 24,
                "content": "public int nextIndex();"
              },
              {
                "id": 25,
                "content": "public int previousIndex();"
              },
              {
                "id": 26,
                "content": "public void remove();"
              },
              {
                "id": 27,
                "content": "public void set(E e);"
              },
              {
                "id": 28,
                "content": "public void add(E e);"
              },
              {
                "id": 29,
                "content": "public void forEach(Consumer<? super E> action);"
              },
              {
                "id": 30,
                "content": "public Iterator<E> iterator();"
              },
              {
                "id": 31,
                "content": "public Spliterator<E> spliterator();"
              },
              {
                "id": 32,
                "content": "public boolean add(E e);"
              },
              {
                "id": 33,
                "content": "public boolean addAll(Collection<? extends E> c);"
              },
              {
                "id": 34,
                "content": "public void clear();"
              },
              {
                "id": 35,
                "content": "public boolean contains(Object o);"
              },
              {
                "id": 36,
                "content": "public boolean containsAll(Collection<?> c);"
              },
              {
                "id": 37,
                "content": "public boolean equals(Object o);"
              },
              {
                "id": 38,
                "content": "public int hashCode();"
              },
              {
                "id": 39,
                "content": "public boolean isEmpty();"
              },
              {
                "id": 40,
                "content": "public Stream<E> parallelStream();"
              },
              {
                "id": 41,
                "content": "public boolean remove(Object o);"
              },
              {
                "id": 42,
                "content": "public boolean removeAll(Collection<?> c);"
              },
              {
                "id": 43,
                "content": "public boolean retainAll(Collection<?> c);"
              },
              {
                "id": 44,
                "content": "public int size();"
              },
              {
                "id": 45,
                "content": "public Stream<E> stream();"
              },
              {
                "id": 46,
                "content": "public Object[] toArray();"
              },
              {
                "id": 47,
                "content": "@SuppressWarnings(\"unchecked\")"
              },
              {
                "id": 48,
                "content": "public <T> T[] toArray(T[] a);"
              },
              {
                "id": 49,
                "content": "public <T> T[] toArray(IntFunction<T[]> generator);"
              },
              {
                "id": 50,
                "content": "public String toString();"
              },
              {
                "id": 51,
                "content": "public void add(int index, E element);"
              },
              {
                "id": 52,
                "content": "public void addFirst(E e);"
              },
              {
                "id": 53,
                "content": "public void addLast(E e);"
              },
              {
                "id": 54,
                "content": "public boolean addAll(int index, Collection<? extends E> c);"
              },
              {
                "id": 55,
                "content": "public E get(int i);"
              },
              {
                "id": 56,
                "content": "public E getFirst();"
              },
              {
                "id": 57,
                "content": "public E getLast();"
              },
              {
                "id": 58,
                "content": "public int indexOf(Object o);"
              },
              {
                "id": 59,
                "content": "public int lastIndexOf(Object o);"
              },
              {
                "id": 60,
                "content": "public ListIterator<E> listIterator();"
              },
              {
                "id": 61,
                "content": "public ListIterator<E> listIterator(int index);"
              },
              {
                "id": 62,
                "content": "public E remove(int index);"
              },
              {
                "id": 63,
                "content": "public E removeFirst();"
              },
              {
                "id": 64,
                "content": "public E removeLast();"
              },
              {
                "id": 65,
                "content": "public boolean removeIf(Predicate<? super E> filter);"
              },
              {
                "id": 66,
                "content": "public void replaceAll(UnaryOperator<E> operator);"
              },
              {
                "id": 67,
                "content": "public void sort(Comparator<? super E> c);"
              },
              {
                "id": 68,
                "content": "public E set(int index, E element);"
              },
              {
                "id": 69,
                "content": "public List<E> subList(int fromIndex, int toIndex);"
              },
              {
                "id": 70,
                "content": "public List<E> reversed();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 3,
            "content": "public E getFirst();"
          },
          {
            "id": 4,
            "content": "public E getLast();"
          },
          {
            "id": 5,
            "content": "public void addFirst(E e);"
          },
          {
            "id": 6,
            "content": "public void addLast(E e);"
          },
          {
            "id": 7,
            "content": "public E removeFirst();"
          },
          {
            "id": 8,
            "content": "public E removeLast();"
          },
          {
            "id": 9,
            "content": "public E getFirst();"
          },
          {
            "id": 10,
            "content": "public E getLast();"
          },
          {
            "id": 11,
            "content": "public void addFirst(E e);"
          },
          {
            "id": 12,
            "content": "public void addLast(E e);"
          },
          {
            "id": 13,
            "content": "public E removeFirst();"
          },
          {
            "id": 14,
            "content": "public E removeLast();"
          },
          {
            "id": 15,
            "content": "public List<E> reversed();"
          },
          {
            "id": 16,
            "content": "public List<E> reversed();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/concurrent/ConcurrentSkipListSet.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void addFirst(E e);"
          },
          {
            "id": 1,
            "content": "public void addLast(E e);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/concurrent/DelayQueue.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public E remove();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/concurrent/ConcurrentSkipListMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public V putFirst(K k, V v);"
          },
          {
            "id": 1,
            "content": "public V putLast(K k, V v);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/concurrent/Executors.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class AutoShutdownDelegatedExecutorService extends DelegatedExecutorService {"
            },
            "methods": [
              {
                "id": 1,
                "content": "@Override"
              },
              {
                "id": 2,
                "content": "public void shutdown();"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/security/cert/CertStore.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static final String getDefaultType();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/io/ObjectInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static final class HandleTable {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/io/ObjectOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static final class BlockDataOutputStream extends OutputStream implements DataOutput {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "private static final class HandleTable {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 2,
              "content": "private static final class ReplaceTable {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 3,
              "content": "private static final class DebugTraceInfoStack {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/io/ObjectStreamClass.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static final class MemberSignature {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "private static final class FieldReflector {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/io/Console.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public sealed class Console implements Flushable permits ProxyingConsole {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/io/SerialCallbackContext.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "Object getObj() throws NotActiveException;"
          },
          {
            "id": 1,
            "content": "ObjectStreamClass getDesc();"
          },
          {
            "id": 2,
            "content": "void check() throws NotActiveException;"
          },
          {
            "id": 3,
            "content": "void checkAndSetUsed() throws NotActiveException;"
          },
          {
            "id": 4,
            "content": "void setUsed();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/time/chrono/MinguoDate.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public MinguoDate minus(long amountToSubtract, TemporalUnit unit);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/time/chrono/JapaneseDate.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public JapaneseDate minus(long amountToSubtract, TemporalUnit unit);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/time/chrono/ThaiBuddhistDate.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public ThaiBuddhistDate minus(long amountToSubtract, TemporalUnit unit);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/StringBuilder.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class StringBuilder extends AbstractStringBuilder implements Appendable, java.io.Serializable, Comparable<StringBuilder>, CharSequence {"
            },
            "methods": [
              {
                "id": 1,
                "content": "@Override"
              },
              {
                "id": 2,
                "content": "public StringBuilder repeat(int codePoint, int count);"
              },
              {
                "id": 3,
                "content": "@Override"
              },
              {
                "id": 4,
                "content": "public StringBuilder repeat(CharSequence cs, int count);"
              },
              {
                "id": 5,
                "content": "@IntrinsicCandidate"
              },
              {
                "id": 6,
                "content": "@Override"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/StringBuffer.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class StringBuffer extends AbstractStringBuilder implements Appendable, Serializable, Comparable<StringBuffer>, CharSequence {"
            },
            "methods": [
              {
                "id": 1,
                "content": "@Override"
              },
              {
                "id": 2,
                "content": "public synchronized StringBuffer repeat(int codePoint, int count);"
              },
              {
                "id": 3,
                "content": "@Override"
              },
              {
                "id": 4,
                "content": "public synchronized StringBuffer repeat(CharSequence cs, int count);"
              },
              {
                "id": 5,
                "content": "@IntrinsicCandidate"
              },
              {
                "id": 6,
                "content": "@Override"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/Class.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.UNNAMED_CLASSES, reflective = true)"
          },
          {
            "id": 1,
            "content": "public boolean isUnnamedClass();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/String.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static String newStringUTF8NoRepl(byte[] bytes, int offset, int length, boolean noShare);"
          },
          {
            "id": 1,
            "content": "@IndexOrLow({ \"this\" })"
          },
          {
            "id": 2,
            "content": "public int indexOf(int ch, int beginIndex, int endIndex);"
          },
          {
            "id": 3,
            "content": "public int indexOf(String str, int beginIndex, int endIndex);"
          },
          {
            "id": 4,
            "content": "public String @MinLen(1) [] splitWithDelimiters(@Regex String regex, int limit);"
          },
          {
            "id": 5,
            "content": "static void repeatCopyRest(byte[] buffer, int offset, int limit, int copied);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/Character.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static boolean isEmoji(int codePoint);"
          },
          {
            "id": 1,
            "content": "public static boolean isEmojiPresentation(int codePoint);"
          },
          {
            "id": 2,
            "content": "public static boolean isEmojiModifier(int codePoint);"
          },
          {
            "id": 3,
            "content": "public static boolean isEmojiModifierBase(int codePoint);"
          },
          {
            "id": 4,
            "content": "public static boolean isEmojiComponent(int codePoint);"
          },
          {
            "id": 5,
            "content": "public static boolean isExtendedPictographic(int codePoint);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/CharacterData.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "abstract boolean isEmoji(int ch);"
          },
          {
            "id": 1,
            "content": "abstract boolean isEmojiPresentation(int ch);"
          },
          {
            "id": 2,
            "content": "abstract boolean isEmojiModifier(int ch);"
          },
          {
            "id": 3,
            "content": "abstract boolean isEmojiModifierBase(int ch);"
          },
          {
            "id": 4,
            "content": "abstract boolean isEmojiComponent(int ch);"
          },
          {
            "id": 5,
            "content": "abstract boolean isExtendedPictographic(int ch);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/ThreadLocal.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class StackWalkerHolder {"
            },
            "methods": []
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "static void dumpStackIfVirtualThread();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/ClassLoader.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "String nameAndId();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/AbstractStringBuilder.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "long mix(long lengthCoder);"
          },
          {
            "id": 1,
            "content": "long prepend(long lengthCoder, byte[] buffer);"
          },
          {
            "id": 2,
            "content": "public AbstractStringBuilder repeat(int codePoint, int count);"
          },
          {
            "id": 3,
            "content": "public AbstractStringBuilder repeat(CharSequence cs, int count);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/Math.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static int clamp(long value, int min, int max);"
          },
          {
            "id": 1,
            "content": "public static long clamp(long value, long min, long max);"
          },
          {
            "id": 2,
            "content": "public static double clamp(double value, double min, double max);"
          },
          {
            "id": 3,
            "content": "public static float clamp(float value, float min, float max);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/Thread.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public sealed interface Builder permits Builder.OfPlatform, Builder.OfVirtual {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/StrictMath.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static double sin(double a);"
          },
          {
            "id": 1,
            "content": "public static double cos(double a);"
          },
          {
            "id": 2,
            "content": "public static double tan(double a);"
          },
          {
            "id": 3,
            "content": "public static double asin(double a);"
          },
          {
            "id": 4,
            "content": "public static double acos(double a);"
          },
          {
            "id": 5,
            "content": "public static double atan(double a);"
          },
          {
            "id": 6,
            "content": "public static double log(double a);"
          },
          {
            "id": 7,
            "content": "public static double log10(double a);"
          },
          {
            "id": 8,
            "content": "public static double sqrt(double a);"
          },
          {
            "id": 9,
            "content": "public static double IEEEremainder(double f1, double f2);"
          },
          {
            "id": 10,
            "content": "public static double atan2(double y, double x);"
          },
          {
            "id": 11,
            "content": "public static int clamp(long value, int min, int max);"
          },
          {
            "id": 12,
            "content": "public static long clamp(long value, long min, long max);"
          },
          {
            "id": 13,
            "content": "public static double clamp(double value, double min, double max);"
          },
          {
            "id": 14,
            "content": "public static float clamp(float value, float min, float max);"
          },
          {
            "id": 15,
            "content": "public static double sinh(double x);"
          },
          {
            "id": 16,
            "content": "public static double cosh(double x);"
          },
          {
            "id": 17,
            "content": "public static double tanh(double x);"
          },
          {
            "id": 18,
            "content": "public static double expm1(double x);"
          },
          {
            "id": 19,
            "content": "public static double log1p(double x);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/invoke/MethodHandles.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "ClassDefiner makeClassDefiner(String name, byte[] bytes, ClassFileDumper dumper);"
          },
          {
            "id": 1,
            "content": "ClassDefiner makeHiddenClassDefiner(byte[] bytes, ClassFileDumper dumper);"
          },
          {
            "id": 2,
            "content": "ClassDefiner makeHiddenClassDefiner(String name, byte[] bytes, Set<ClassOption> options, ClassFileDumper dumper);"
          },
          {
            "id": 3,
            "content": "String internalName();"
          },
          {
            "id": 4,
            "content": "public <T> Class<T> ensureInitialized(Class<T> targetClass) throws IllegalAccessException;"
          },
          {
            "id": 5,
            "content": "public <T> Class<T> accessClass(Class<T> targetClass) throws IllegalAccessException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/invoke/LambdaForm.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static LambdaForm create(int arity, Name[] names, int result);"
          },
          {
            "id": 1,
            "content": "static LambdaForm create(int arity, Name[] names, int result, Kind kind);"
          },
          {
            "id": 2,
            "content": "static LambdaForm create(int arity, Name[] names);"
          },
          {
            "id": 3,
            "content": "static LambdaForm create(int arity, Name[] names, Kind kind);"
          },
          {
            "id": 4,
            "content": "static LambdaForm create(int arity, Name[] names, boolean forceInline, Kind kind);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/nio/Buffer.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@ForceInline"
          },
          {
            "id": 1,
            "content": "@ForceInline"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/nio/channels/FileChannel.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public MemorySegment map(MapMode mode, long offset, long size, Arena arena) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/javax/net/ssl/TrustManagerFactory.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static final String getDefaultAlgorithm();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/com/sun/crypto/provider/PBKDF2KeyImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void clear();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.net.http/share/classes/jdk/internal/net/http/RequestPublishers.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean hasNext();"
          },
          {
            "id": 1,
            "content": "public ByteBuffer next();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.net.http/share/classes/jdk/internal/net/http/ConnectionPool.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "void start();"
          },
          {
            "id": 1,
            "content": "HttpConnection getConnection(boolean secure, InetSocketAddress addr, InetSocketAddress proxy);"
          },
          {
            "id": 2,
            "content": "boolean contains(HttpConnection c);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/gc/shared/ContiguousSpace.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class ContiguousSpace extends Space implements LiveRegionsProvider {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlLinkInfo.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class HtmlLinkInfo {"
            },
            "methods": [
              {
                "id": 1,
                "content": "PLAIN,"
              },
              {
                "id": 2,
                "content": "SHOW_PREVIEW,"
              },
              {
                "id": 3,
                "content": "SHOW_TYPE_PARAMS,"
              },
              {
                "id": 4,
                "content": "SHOW_TYPE_PARAMS_IN_LABEL,"
              },
              {
                "id": 5,
                "content": "SHOW_TYPE_PARAMS_AND_BOUNDS,"
              },
              {
                "id": 6,
                "content": "LINK_TYPE_PARAMS,"
              },
              {
                "id": 7,
                "content": "LINK_TYPE_PARAMS_AND_BOUNDS"
              },
              {
                "id": 8,
                "content": "public HtmlLinkInfo forType(TypeMirror type);"
              },
              {
                "id": 9,
                "content": "public void setTypeElement(TypeElement typeElement);"
              },
              {
                "id": 10,
                "content": "public TypeElement getTypeElement();"
              },
              {
                "id": 11,
                "content": "public ExecutableElement getExecutableElement();"
              },
              {
                "id": 12,
                "content": "public TypeMirror getType();"
              },
              {
                "id": 13,
                "content": "public Content getLabel();"
              },
              {
                "id": 14,
                "content": "public HtmlStyle getStyle();"
              },
              {
                "id": 15,
                "content": "public boolean isVarArg();"
              },
              {
                "id": 16,
                "content": "public HtmlLinkInfo fragment(String fragment);"
              },
              {
                "id": 17,
                "content": "public String getFragment();"
              },
              {
                "id": 18,
                "content": "public HtmlLinkInfo addLineBreaksInTypeParameters(boolean addLineBreaksInTypeParameters);"
              },
              {
                "id": 19,
                "content": "public boolean addLineBreaksInTypeParameters();"
              },
              {
                "id": 20,
                "content": "public HtmlLinkInfo addLineBreakOpportunitiesInTypeParameters(boolean addLineBreakOpportunities);"
              },
              {
                "id": 21,
                "content": "public boolean addLineBreakOpportunitiesInTypeParameters();"
              },
              {
                "id": 22,
                "content": "public HtmlLinkInfo linkToSelf(boolean linkToSelf);"
              },
              {
                "id": 23,
                "content": "public boolean linkToSelf();"
              },
              {
                "id": 24,
                "content": "public boolean linkTypeParameters();"
              },
              {
                "id": 25,
                "content": "public void showTypeBounds(boolean showTypeBounds);"
              },
              {
                "id": 26,
                "content": "public boolean showTypeBounds();"
              },
              {
                "id": 27,
                "content": "public HtmlLinkInfo showTypeParameterAnnotations(boolean showTypeParameterAnnotations);"
              },
              {
                "id": 28,
                "content": "public boolean showTypeParameterAnnotations();"
              },
              {
                "id": 29,
                "content": "public Element getTargetMember();"
              },
              {
                "id": 30,
                "content": "public boolean isSkipPreview();"
              },
              {
                "id": 31,
                "content": "public boolean showTypeParameters();"
              },
              {
                "id": 32,
                "content": "public Content getClassLinkLabel(BaseConfiguration configuration);"
              },
              {
                "id": 33,
                "content": "protected Content newContent();"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/VisibleMemberTable.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private class LocalMemberTable {"
            },
            "methods": [
              {
                "id": 1,
                "content": "List<Element> getMembers(Name simpleName, Kind kind);"
              },
              {
                "id": 2,
                "content": "<T extends Element> List<T> getMembers(Name simpleName, Kind kind, Class<T> clazz);"
              },
              {
                "id": 3,
                "content": "List<ExecutableElement> getPropertyMethods(Name simpleName);"
              },
              {
                "id": 4,
                "content": "private record PropertyMembers(ExecutableElement propertyMethod, VariableElement field, ExecutableElement getter, ExecutableElement setter) {"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 5,
            "content": "public ImplementedMethods(ExecutableElement implementer) {"
          },
          {
            "id": 6,
            "content": "private record OverrideInfo(ExecutableElement overriddenMethod, boolean simpleOverride) {"
          },
          {
            "id": 7,
            "content": "@Override"
          },
          {
            "id": 8,
            "content": "public String toString();"
          },
          {
            "id": 9,
            "content": "@Override"
          },
          {
            "id": 10,
            "content": "public int hashCode();"
          },
          {
            "id": 11,
            "content": "@Override"
          },
          {
            "id": 12,
            "content": "public boolean equals(Object obj);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/Utils.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public record OverrideInfo(ExecutableElement overriddenMethod, DeclaredType overriddenMethodOwner) {"
          },
          {
            "id": 1,
            "content": "public OverrideInfo overriddenMethod(ExecutableElement method);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/ToolEnvironment.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "boolean isUnnamed(Symbol sym);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/RegisterValue.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class RegisterValue extends AllocatableValue {"
            },
            "methods": [
              {
                "id": 2,
                "content": "protected RegisterValue(ValueKind<?> kind, Register register) {"
              },
              {
                "id": 3,
                "content": "@Override"
              },
              {
                "id": 4,
                "content": "public String toString();"
              },
              {
                "id": 5,
                "content": "public Register getRegister();"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "public int hashCode();"
              },
              {
                "id": 8,
                "content": "@Override"
              },
              {
                "id": 9,
                "content": "@Pure"
              },
              {
                "id": 10,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 11,
                "content": "public boolean equals(@Nullable Object obj);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.code;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/BytecodePosition.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class BytecodePosition {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public BytecodePosition(BytecodePosition caller, ResolvedJavaMethod method, int bci) {"
              },
              {
                "id": 3,
                "content": "@Override"
              },
              {
                "id": 4,
                "content": "public String toString();"
              },
              {
                "id": 5,
                "content": "@Override"
              },
              {
                "id": 6,
                "content": "@Pure"
              },
              {
                "id": 7,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 8,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 9,
                "content": "@Override"
              },
              {
                "id": 10,
                "content": "public int hashCode();"
              },
              {
                "id": 11,
                "content": "public int getBCI();"
              },
              {
                "id": 12,
                "content": "public ResolvedJavaMethod getMethod();"
              },
              {
                "id": 13,
                "content": "public BytecodePosition getCaller();"
              },
              {
                "id": 14,
                "content": "public BytecodePosition addCaller(BytecodePosition link);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.code;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/DebugInfo.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class DebugInfo {"
            },
            "methods": [
              {
                "id": 2,
                "content": "@SuppressFBWarnings(value = \"EI_EXPOSE_REP2\", justification = \"caller transfers ownership of `virtualObjectMapping`\")"
              },
              {
                "id": 3,
                "content": "public DebugInfo(BytecodePosition codePos, VirtualObject[] virtualObjectMapping) {"
              },
              {
                "id": 4,
                "content": "public DebugInfo(BytecodePosition codePos) {"
              },
              {
                "id": 5,
                "content": "public void setReferenceMap(ReferenceMap referenceMap);"
              },
              {
                "id": 6,
                "content": "public boolean hasFrame();"
              },
              {
                "id": 7,
                "content": "public BytecodeFrame frame();"
              },
              {
                "id": 8,
                "content": "@Override"
              },
              {
                "id": 9,
                "content": "public String toString();"
              },
              {
                "id": 10,
                "content": "public BytecodePosition getBytecodePosition();"
              },
              {
                "id": 11,
                "content": "public ReferenceMap getReferenceMap();"
              },
              {
                "id": 12,
                "content": "public VirtualObject[] getVirtualObjectMapping();"
              },
              {
                "id": 13,
                "content": "public void setCalleeSaveInfo(RegisterSaveLayout calleeSaveInfo);"
              },
              {
                "id": 14,
                "content": "public RegisterSaveLayout getCalleeSaveInfo();"
              },
              {
                "id": 15,
                "content": "@Override"
              },
              {
                "id": 16,
                "content": "public int hashCode();"
              },
              {
                "id": 17,
                "content": "@Override"
              },
              {
                "id": 18,
                "content": "@Pure"
              },
              {
                "id": 19,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 20,
                "content": "public boolean equals(@Nullable Object obj);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.code;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/VirtualObject.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class VirtualObject implements JavaValue {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public static VirtualObject get(ResolvedJavaType type, int id);"
              },
              {
                "id": 3,
                "content": "public static VirtualObject get(ResolvedJavaType type, int id, boolean isAutoBox);"
              },
              {
                "id": 4,
                "content": "public interface LayoutVerifier {"
              },
              {
                "id": 5,
                "content": "int getOffset(ResolvedJavaField field);"
              },
              {
                "id": 6,
                "content": "default JavaKind getStorageKind(ResolvedJavaField field);"
              },
              {
                "id": 7,
                "content": "public void verifyLayout(LayoutVerifier verifier);"
              },
              {
                "id": 8,
                "content": "@Override"
              },
              {
                "id": 9,
                "content": "public String toString();"
              },
              {
                "id": 10,
                "content": "public ResolvedJavaType getType();"
              },
              {
                "id": 11,
                "content": "@SuppressFBWarnings(value = \"EI_EXPOSE_REP\", justification = \"`values` is intentional mutable\")"
              },
              {
                "id": 12,
                "content": "public JavaValue[] getValues();"
              },
              {
                "id": 13,
                "content": "public JavaKind getSlotKind(int index);"
              },
              {
                "id": 14,
                "content": "public int getId();"
              },
              {
                "id": 15,
                "content": "public boolean isAutoBox();"
              },
              {
                "id": 16,
                "content": "@SuppressFBWarnings(value = \"EI_EXPOSE_REP2\", justification = \"caller transfers ownership of `slotKinds`\")"
              },
              {
                "id": 17,
                "content": "public void setValues(JavaValue[] values, JavaKind[] slotKinds);"
              },
              {
                "id": 18,
                "content": "@Override"
              },
              {
                "id": 19,
                "content": "public int hashCode();"
              },
              {
                "id": 20,
                "content": "@Override"
              },
              {
                "id": 21,
                "content": "@Pure"
              },
              {
                "id": 22,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 23,
                "content": "public boolean equals(@Nullable Object o);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.code;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/RegisterSaveLayout.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class RegisterSaveLayout {"
            },
            "methods": [
              {
                "id": 2,
                "content": "@SuppressFBWarnings(value = \"EI_EXPOSE_REP2\", justification = \"caller transfers ownership of `registers` and `slots`\")"
              },
              {
                "id": 3,
                "content": "public RegisterSaveLayout(Register[] registers, int[] slots) {"
              },
              {
                "id": 4,
                "content": "public int size();"
              },
              {
                "id": 5,
                "content": "public int registerToSlot(Register register);"
              },
              {
                "id": 6,
                "content": "public Map<Register, Integer> registersToSlots(boolean sorted);"
              },
              {
                "id": 7,
                "content": "public Map<Integer, Register> slotsToRegisters(boolean sorted);"
              },
              {
                "id": 8,
                "content": "@Override"
              },
              {
                "id": 9,
                "content": "public int hashCode();"
              },
              {
                "id": 10,
                "content": "@Override"
              },
              {
                "id": 11,
                "content": "@Pure"
              },
              {
                "id": 12,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 13,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 14,
                "content": "@Override"
              },
              {
                "id": 15,
                "content": "public String toString();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.code;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/Register.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class Register implements Comparable<Register> {"
            },
            "methods": [
              {
                "id": 3,
                "content": "public static final RegisterCategory SPECIAL;"
              },
              {
                "id": 4,
                "content": "public static final Register None;"
              },
              {
                "id": 5,
                "content": "public final int number;"
              },
              {
                "id": 6,
                "content": "public final String name;"
              },
              {
                "id": 7,
                "content": "public final int encoding;"
              },
              {
                "id": 8,
                "content": "public int encoding();"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "public static class RegisterCategory {"
            },
            "methods": [
              {
                "id": 9,
                "content": "public RegisterCategory(String name) {"
              },
              {
                "id": 10,
                "content": "public RegisterCategory(String name, boolean mayContainReference) {"
              },
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "public String toString();"
              },
              {
                "id": 13,
                "content": "@Override"
              },
              {
                "id": 14,
                "content": "public int hashCode();"
              },
              {
                "id": 15,
                "content": "@Override"
              },
              {
                "id": 16,
                "content": "public boolean equals(Object obj);"
              },
              {
                "id": 17,
                "content": "public Register(int number, int encoding, String name, RegisterCategory registerCategory) {"
              },
              {
                "id": 18,
                "content": "public RegisterCategory getRegisterCategory();"
              },
              {
                "id": 19,
                "content": "public boolean mayContainReference();"
              },
              {
                "id": 20,
                "content": "public RegisterValue asValue(ValueKind<?> kind);"
              },
              {
                "id": 21,
                "content": "public RegisterValue asValue();"
              },
              {
                "id": 22,
                "content": "public boolean isValid();"
              },
              {
                "id": 23,
                "content": "@Override"
              },
              {
                "id": 24,
                "content": "public String toString();"
              },
              {
                "id": 25,
                "content": "@Override"
              },
              {
                "id": 26,
                "content": "public int compareTo(Register o);"
              },
              {
                "id": 27,
                "content": "@Override"
              },
              {
                "id": 28,
                "content": "public int hashCode();"
              },
              {
                "id": 29,
                "content": "@Override"
              },
              {
                "id": 30,
                "content": "@Pure"
              },
              {
                "id": 31,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 32,
                "content": "public boolean equals(@Nullable Object obj);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 2,
            "content": "package jdk.vm.ci.code;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/RegisterArray.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class RegisterArray implements Iterable<Register> {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public RegisterArray(Register... registers) {"
              },
              {
                "id": 3,
                "content": "public RegisterArray(Collection<Register> registers) {"
              },
              {
                "id": 4,
                "content": "public int size();"
              },
              {
                "id": 5,
                "content": "public Register get(int index);"
              },
              {
                "id": 6,
                "content": "public void addTo(Collection<Register> collection);"
              },
              {
                "id": 7,
                "content": "public List<Register> asList();"
              },
              {
                "id": 8,
                "content": "public Register[] toArray();"
              },
              {
                "id": 9,
                "content": "@Override"
              },
              {
                "id": 10,
                "content": "public Iterator<Register> iterator();"
              },
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "public int hashCode();"
              },
              {
                "id": 13,
                "content": "@Override"
              },
              {
                "id": 14,
                "content": "@Pure"
              },
              {
                "id": 15,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 16,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 17,
                "content": "@Override"
              },
              {
                "id": 18,
                "content": "public String toString();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.code;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/BytecodeFrame.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class BytecodeFrame extends BytecodePosition {"
            },
            "methods": [
              {
                "id": 2,
                "content": "@SuppressFBWarnings(value = \"EI_EXPOSE_REP2\", justification = \"field is intentionally mutable\")"
              },
              {
                "id": 3,
                "content": "public final JavaValue[] values;"
              },
              {
                "id": 4,
                "content": "public final int numLocals;"
              },
              {
                "id": 5,
                "content": "public final int numStack;"
              },
              {
                "id": 6,
                "content": "public final int numLocks;"
              },
              {
                "id": 7,
                "content": "public final boolean rethrowException;"
              },
              {
                "id": 8,
                "content": "public final boolean duringCall;"
              },
              {
                "id": 9,
                "content": "public static final int UNKNOWN_BCI;"
              },
              {
                "id": 10,
                "content": "public static final int UNWIND_BCI;"
              },
              {
                "id": 11,
                "content": "public static final int BEFORE_BCI;"
              },
              {
                "id": 12,
                "content": "public static final int AFTER_BCI;"
              },
              {
                "id": 13,
                "content": "public static final int AFTER_EXCEPTION_BCI;"
              },
              {
                "id": 14,
                "content": "public static final int INVALID_FRAMESTATE_BCI;"
              },
              {
                "id": 15,
                "content": "public static boolean isPlaceholderBci(int bci);"
              },
              {
                "id": 16,
                "content": "public static String getPlaceholderBciName(int bci);"
              },
              {
                "id": 17,
                "content": "@SuppressFBWarnings(value = \"EI_EXPOSE_REP2\", justification = \"caller transfers ownership of `slotKinds`\")"
              },
              {
                "id": 18,
                "content": "public BytecodeFrame(BytecodeFrame caller, ResolvedJavaMethod method, int bci, boolean rethrowException, boolean duringCall, JavaValue[] values, JavaKind[] slotKinds, int numLocals, int numStack, int numLocks) {"
              },
              {
                "id": 19,
                "content": "public void verifyInvariants();"
              },
              {
                "id": 20,
                "content": "public boolean validateFormat();"
              },
              {
                "id": 21,
                "content": "public JavaKind getLocalValueKind(int i);"
              },
              {
                "id": 22,
                "content": "public JavaKind getStackValueKind(int i);"
              },
              {
                "id": 23,
                "content": "public JavaValue getLocalValue(int i);"
              },
              {
                "id": 24,
                "content": "public JavaValue getStackValue(int i);"
              },
              {
                "id": 25,
                "content": "public JavaValue getLockValue(int i);"
              },
              {
                "id": 26,
                "content": "public BytecodeFrame caller();"
              },
              {
                "id": 27,
                "content": "@Override"
              },
              {
                "id": 28,
                "content": "public int hashCode();"
              },
              {
                "id": 29,
                "content": "@Override"
              },
              {
                "id": 30,
                "content": "@Pure"
              },
              {
                "id": 31,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 32,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 33,
                "content": "@Override"
              },
              {
                "id": 34,
                "content": "public String toString();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.code;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/StackLockValue.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class StackLockValue implements JavaValue {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public StackLockValue(JavaValue object, AllocatableValue slot, boolean eliminated) {"
              },
              {
                "id": 3,
                "content": "public JavaValue getOwner();"
              },
              {
                "id": 4,
                "content": "public void setOwner(JavaValue newOwner);"
              },
              {
                "id": 5,
                "content": "public AllocatableValue getSlot();"
              },
              {
                "id": 6,
                "content": "public boolean isEliminated();"
              },
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "public String toString();"
              },
              {
                "id": 9,
                "content": "@Override"
              },
              {
                "id": 10,
                "content": "public int hashCode();"
              },
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "@Pure"
              },
              {
                "id": 13,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 14,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 15,
                "content": "public void setSlot(AllocatableValue stackSlot);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.code;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/StackSlot.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class StackSlot extends AllocatableValue {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public static StackSlot get(ValueKind<?> kind, int offset, boolean addFrameSize);"
              },
              {
                "id": 3,
                "content": "public int getOffset(int totalFrameSize);"
              },
              {
                "id": 4,
                "content": "public boolean isInCallerFrame();"
              },
              {
                "id": 5,
                "content": "public int getRawOffset();"
              },
              {
                "id": 6,
                "content": "public boolean getRawAddFrameSize();"
              },
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "public String toString();"
              },
              {
                "id": 9,
                "content": "public StackSlot asOutArg();"
              },
              {
                "id": 10,
                "content": "public StackSlot asInArg();"
              },
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "public int hashCode();"
              },
              {
                "id": 13,
                "content": "@Override"
              },
              {
                "id": 14,
                "content": "@Pure"
              },
              {
                "id": 15,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 16,
                "content": "public boolean equals(@Nullable Object obj);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.code;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/site/Infopoint.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class Infopoint extends Site implements Comparable<Infopoint> {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public final DebugInfo debugInfo;"
              },
              {
                "id": 3,
                "content": "public final InfopointReason reason;"
              },
              {
                "id": 4,
                "content": "public Infopoint(int pcOffset, DebugInfo debugInfo, InfopointReason reason) {"
              },
              {
                "id": 5,
                "content": "@Override"
              },
              {
                "id": 6,
                "content": "public String toString();"
              },
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "public int compareTo(Infopoint o);"
              },
              {
                "id": 9,
                "content": "@Override"
              },
              {
                "id": 10,
                "content": "@Pure"
              },
              {
                "id": 11,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 12,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 13,
                "content": "protected static void appendDebugInfo(StringBuilder sb, DebugInfo info);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.code.site;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/site/Mark.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class Mark extends Site {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public final Object id;"
              },
              {
                "id": 3,
                "content": "public Mark(int pcOffset, Object id) {"
              },
              {
                "id": 4,
                "content": "@Override"
              },
              {
                "id": 5,
                "content": "public String toString();"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "@Pure"
              },
              {
                "id": 8,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 9,
                "content": "public boolean equals(@Nullable Object obj);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.code.site;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/site/DataPatch.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class DataPatch extends Site {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public Reference reference;"
              },
              {
                "id": 3,
                "content": "public Object note;"
              },
              {
                "id": 4,
                "content": "public DataPatch(int pcOffset, Reference reference) {"
              },
              {
                "id": 5,
                "content": "public DataPatch(int pcOffset, Reference reference, Object note) {"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "public String toString();"
              },
              {
                "id": 8,
                "content": "@Override"
              },
              {
                "id": 9,
                "content": "@Pure"
              },
              {
                "id": 10,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 11,
                "content": "public boolean equals(@Nullable Object obj);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.code.site;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/site/ConstantReference.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class ConstantReference extends Reference {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public ConstantReference(VMConstant constant) {"
              },
              {
                "id": 3,
                "content": "public VMConstant getConstant();"
              },
              {
                "id": 4,
                "content": "@Override"
              },
              {
                "id": 5,
                "content": "public String toString();"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "public int hashCode();"
              },
              {
                "id": 8,
                "content": "@Override"
              },
              {
                "id": 9,
                "content": "@Pure"
              },
              {
                "id": 10,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 11,
                "content": "public boolean equals(@Nullable Object obj);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.code.site;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/site/ExceptionHandler.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class ExceptionHandler extends Site {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public final int handlerPos;"
              },
              {
                "id": 3,
                "content": "public ExceptionHandler(int pcOffset, int handlerPos) {"
              },
              {
                "id": 4,
                "content": "@Override"
              },
              {
                "id": 5,
                "content": "public String toString();"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "@Pure"
              },
              {
                "id": 8,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 9,
                "content": "public boolean equals(@Nullable Object obj);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.code.site;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/site/DataSectionReference.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class DataSectionReference extends Reference {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public DataSectionReference() {"
              },
              {
                "id": 3,
                "content": "public int getOffset();"
              },
              {
                "id": 4,
                "content": "public void setOffset(int offset);"
              },
              {
                "id": 5,
                "content": "@Override"
              },
              {
                "id": 6,
                "content": "public int hashCode();"
              },
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "@Pure"
              },
              {
                "id": 9,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 10,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "public String toString();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.code.site;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/site/Call.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class Call extends Infopoint {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public final InvokeTarget target;"
              },
              {
                "id": 3,
                "content": "public final int size;"
              },
              {
                "id": 4,
                "content": "public final boolean direct;"
              },
              {
                "id": 5,
                "content": "public Call(InvokeTarget target, int pcOffset, int size, boolean direct, DebugInfo debugInfo) {"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "@Pure"
              },
              {
                "id": 8,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 9,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 10,
                "content": "@Override"
              },
              {
                "id": 11,
                "content": "public String toString();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.code.site;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/Local.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class Local {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public Local(String name, JavaType type, int startBci, int endBci, int slot) {"
              },
              {
                "id": 3,
                "content": "public int getStartBCI();"
              },
              {
                "id": 4,
                "content": "public int getEndBCI();"
              },
              {
                "id": 5,
                "content": "public String getName();"
              },
              {
                "id": 6,
                "content": "public JavaType getType();"
              },
              {
                "id": 7,
                "content": "public int getSlot();"
              },
              {
                "id": 8,
                "content": "@Override"
              },
              {
                "id": 9,
                "content": "@Pure"
              },
              {
                "id": 10,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 11,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 12,
                "content": "@Override"
              },
              {
                "id": 13,
                "content": "public int hashCode();"
              },
              {
                "id": 14,
                "content": "@Override"
              },
              {
                "id": 15,
                "content": "public String toString();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.meta;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/UnresolvedJavaMethod.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class UnresolvedJavaMethod implements JavaMethod {"
            },
            "methods": [
              {
                "id": 2,
                "content": "protected JavaType holder;"
              },
              {
                "id": 3,
                "content": "public UnresolvedJavaMethod(String name, Signature signature, JavaType holder) {"
              },
              {
                "id": 4,
                "content": "@Override"
              },
              {
                "id": 5,
                "content": "public String getName();"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "public Signature getSignature();"
              },
              {
                "id": 8,
                "content": "@Override"
              },
              {
                "id": 9,
                "content": "public JavaType getDeclaringClass();"
              },
              {
                "id": 10,
                "content": "@Override"
              },
              {
                "id": 11,
                "content": "public int hashCode();"
              },
              {
                "id": 12,
                "content": "@Override"
              },
              {
                "id": 13,
                "content": "@Pure"
              },
              {
                "id": 14,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 15,
                "content": "public boolean equals(@Nullable Object obj);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.meta;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/ExceptionHandler.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class ExceptionHandler {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public ExceptionHandler(int startBCI, int endBCI, int catchBCI, int catchTypeCPI, JavaType catchType) {"
              },
              {
                "id": 3,
                "content": "public int getStartBCI();"
              },
              {
                "id": 4,
                "content": "public int getEndBCI();"
              },
              {
                "id": 5,
                "content": "public int getHandlerBCI();"
              },
              {
                "id": 6,
                "content": "public int catchTypeCPI();"
              },
              {
                "id": 7,
                "content": "public boolean isCatchAll();"
              },
              {
                "id": 8,
                "content": "public JavaType getCatchType();"
              },
              {
                "id": 9,
                "content": "@Override"
              },
              {
                "id": 10,
                "content": "@Pure"
              },
              {
                "id": 11,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 12,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 13,
                "content": "@Override"
              },
              {
                "id": 14,
                "content": "public String toString();"
              },
              {
                "id": 15,
                "content": "@Override"
              },
              {
                "id": 16,
                "content": "public int hashCode();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.meta;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/PrimitiveConstant.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class PrimitiveConstant implements JavaConstant, SerializableConstant {"
            },
            "methods": [
              {
                "id": 2,
                "content": "protected PrimitiveConstant(JavaKind kind, long primitive) {"
              },
              {
                "id": 3,
                "content": "static PrimitiveConstant forTypeChar(char kind, long i);"
              },
              {
                "id": 4,
                "content": "public long getRawValue();"
              },
              {
                "id": 5,
                "content": "@Override"
              },
              {
                "id": 6,
                "content": "public JavaKind getJavaKind();"
              },
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "public boolean isNull();"
              },
              {
                "id": 9,
                "content": "@Override"
              },
              {
                "id": 10,
                "content": "public boolean isDefaultForKind();"
              },
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "public boolean asBoolean();"
              },
              {
                "id": 13,
                "content": "@Override"
              },
              {
                "id": 14,
                "content": "public int asInt();"
              },
              {
                "id": 15,
                "content": "@Override"
              },
              {
                "id": 16,
                "content": "public long asLong();"
              },
              {
                "id": 17,
                "content": "@Override"
              },
              {
                "id": 18,
                "content": "public float asFloat();"
              },
              {
                "id": 19,
                "content": "@Override"
              },
              {
                "id": 20,
                "content": "public double asDouble();"
              },
              {
                "id": 21,
                "content": "@Override"
              },
              {
                "id": 22,
                "content": "public Object asBoxedPrimitive();"
              },
              {
                "id": 23,
                "content": "@Override"
              },
              {
                "id": 24,
                "content": "public int getSerializedSize();"
              },
              {
                "id": 25,
                "content": "@Override"
              },
              {
                "id": 26,
                "content": "public void serialize(ByteBuffer buffer);"
              },
              {
                "id": 27,
                "content": "@Override"
              },
              {
                "id": 28,
                "content": "public int hashCode();"
              },
              {
                "id": 29,
                "content": "@Override"
              },
              {
                "id": 30,
                "content": "@Pure"
              },
              {
                "id": 31,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 32,
                "content": "public boolean equals(@Nullable Object o);"
              },
              {
                "id": 33,
                "content": "@Override"
              },
              {
                "id": 34,
                "content": "public String toString();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.meta;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/UnresolvedJavaField.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class UnresolvedJavaField implements JavaField {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public UnresolvedJavaField(JavaType holder, String name, JavaType type) {"
              },
              {
                "id": 3,
                "content": "@Override"
              },
              {
                "id": 4,
                "content": "public String getName();"
              },
              {
                "id": 5,
                "content": "@Override"
              },
              {
                "id": 6,
                "content": "public JavaType getType();"
              },
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "public JavaType getDeclaringClass();"
              },
              {
                "id": 9,
                "content": "@Override"
              },
              {
                "id": 10,
                "content": "public int hashCode();"
              },
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "@Pure"
              },
              {
                "id": 13,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 14,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 15,
                "content": "@Override"
              },
              {
                "id": 16,
                "content": "public String toString();"
              },
              {
                "id": 17,
                "content": "public ResolvedJavaField resolve(ResolvedJavaType accessingClass);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.meta;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/NullConstant.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "final class NullConstant implements JavaConstant {"
            },
            "methods": [
              {
                "id": 2,
                "content": "protected NullConstant() {"
              },
              {
                "id": 3,
                "content": "@Override"
              },
              {
                "id": 4,
                "content": "public JavaKind getJavaKind();"
              },
              {
                "id": 5,
                "content": "@Override"
              },
              {
                "id": 6,
                "content": "public boolean isNull();"
              },
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "public boolean isDefaultForKind();"
              },
              {
                "id": 9,
                "content": "@Override"
              },
              {
                "id": 10,
                "content": "public Object asBoxedPrimitive();"
              },
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "public int asInt();"
              },
              {
                "id": 13,
                "content": "@Override"
              },
              {
                "id": 14,
                "content": "public boolean asBoolean();"
              },
              {
                "id": 15,
                "content": "@Override"
              },
              {
                "id": 16,
                "content": "public long asLong();"
              },
              {
                "id": 17,
                "content": "@Override"
              },
              {
                "id": 18,
                "content": "public float asFloat();"
              },
              {
                "id": 19,
                "content": "@Override"
              },
              {
                "id": 20,
                "content": "public double asDouble();"
              },
              {
                "id": 21,
                "content": "@Override"
              },
              {
                "id": 22,
                "content": "public String toString();"
              },
              {
                "id": 23,
                "content": "@Override"
              },
              {
                "id": 24,
                "content": "public String toValueString();"
              },
              {
                "id": 25,
                "content": "@Override"
              },
              {
                "id": 26,
                "content": "public int hashCode();"
              },
              {
                "id": 27,
                "content": "@Override"
              },
              {
                "id": 28,
                "content": "@Pure"
              },
              {
                "id": 29,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 30,
                "content": "public boolean equals(@Nullable Object o);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.meta;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/JavaTypeProfile.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class JavaTypeProfile extends AbstractJavaProfile<ProfiledType, ResolvedJavaType> {"
            },
            "methods": [
              {
                "id": 3,
                "content": "public JavaTypeProfile(TriState nullSeen, double notRecordedProbability, ProfiledType[] pitems) {"
              },
              {
                "id": 4,
                "content": "public TriState getNullSeen();"
              },
              {
                "id": 5,
                "content": "public ProfiledType[] getTypes();"
              },
              {
                "id": 6,
                "content": "public JavaTypeProfile restrict(JavaTypeProfile otherProfile);"
              },
              {
                "id": 7,
                "content": "public JavaTypeProfile restrict(ResolvedJavaType declaredType, boolean nonNull);"
              },
              {
                "id": 8,
                "content": "@Override"
              },
              {
                "id": 9,
                "content": "@Pure"
              },
              {
                "id": 10,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 11,
                "content": "public boolean equals(@Nullable Object other);"
              },
              {
                "id": 12,
                "content": "@Override"
              },
              {
                "id": 13,
                "content": "public int hashCode();"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "public static class ProfiledType extends AbstractProfiledItem<ResolvedJavaType> {"
            },
            "methods": [
              {
                "id": 14,
                "content": "public ProfiledType(ResolvedJavaType type, double probability) {"
              },
              {
                "id": 15,
                "content": "public ResolvedJavaType getType();"
              },
              {
                "id": 16,
                "content": "@Override"
              },
              {
                "id": 17,
                "content": "public String toString();"
              },
              {
                "id": 18,
                "content": "@Override"
              },
              {
                "id": 19,
                "content": "public String toString();"
              },
              {
                "id": 20,
                "content": "public boolean allTypesRecorded();"
              },
              {
                "id": 21,
                "content": "public ResolvedJavaType asSingleType();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 2,
            "content": "package jdk.vm.ci.meta;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/UnresolvedJavaType.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class UnresolvedJavaType implements JavaType {"
            },
            "methods": [
              {
                "id": 2,
                "content": "@Override"
              },
              {
                "id": 3,
                "content": "public String getName();"
              },
              {
                "id": 4,
                "content": "public static UnresolvedJavaType create(String name);"
              },
              {
                "id": 5,
                "content": "@Override"
              },
              {
                "id": 6,
                "content": "public JavaType getComponentType();"
              },
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "public JavaType getArrayClass();"
              },
              {
                "id": 9,
                "content": "@Override"
              },
              {
                "id": 10,
                "content": "public JavaKind getJavaKind();"
              },
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "public int hashCode();"
              },
              {
                "id": 13,
                "content": "@Override"
              },
              {
                "id": 14,
                "content": "@Pure"
              },
              {
                "id": 15,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 16,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 17,
                "content": "@Override"
              },
              {
                "id": 18,
                "content": "public String toString();"
              },
              {
                "id": 19,
                "content": "@Override"
              },
              {
                "id": 20,
                "content": "public ResolvedJavaType resolve(ResolvedJavaType accessingClass);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.meta;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/Assumptions.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class Assumptions implements Iterable<Assumptions.Assumption> {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "public abstract static class Assumption {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 2,
              "content": "public static class AssumptionResult<T> {"
            },
            "methods": [
              {
                "id": 9,
                "content": "public AssumptionResult(T result, Assumption... assumptions) {"
              },
              {
                "id": 10,
                "content": "public AssumptionResult(T result) {"
              },
              {
                "id": 11,
                "content": "public T getResult();"
              },
              {
                "id": 12,
                "content": "public boolean isAssumptionFree();"
              },
              {
                "id": 13,
                "content": "public void add(AssumptionResult<T> other);"
              },
              {
                "id": 14,
                "content": "public boolean canRecordTo(Assumptions target);"
              },
              {
                "id": 15,
                "content": "public void recordTo(Assumptions target);"
              },
              {
                "id": 16,
                "content": "@Override"
              },
              {
                "id": 17,
                "content": "public String toString();"
              }
            ]
          },
          {
            "declaration": {
              "id": 3,
              "content": "public static final class NoFinalizableSubclass extends Assumption {"
            },
            "methods": [
              {
                "id": 18,
                "content": "public final ResolvedJavaType receiverType;"
              },
              {
                "id": 19,
                "content": "public NoFinalizableSubclass(ResolvedJavaType receiverType) {"
              },
              {
                "id": 20,
                "content": "@Override"
              },
              {
                "id": 21,
                "content": "public int hashCode();"
              },
              {
                "id": 22,
                "content": "@Override"
              },
              {
                "id": 23,
                "content": "public boolean equals(Object obj);"
              },
              {
                "id": 24,
                "content": "@Override"
              },
              {
                "id": 25,
                "content": "public String toString();"
              }
            ]
          },
          {
            "declaration": {
              "id": 4,
              "content": "public static final class ConcreteSubtype extends Assumption {"
            },
            "methods": [
              {
                "id": 26,
                "content": "public final ResolvedJavaType context;"
              },
              {
                "id": 27,
                "content": "public final ResolvedJavaType subtype;"
              },
              {
                "id": 28,
                "content": "public ConcreteSubtype(ResolvedJavaType context, ResolvedJavaType subtype) {"
              },
              {
                "id": 29,
                "content": "@Override"
              },
              {
                "id": 30,
                "content": "public int hashCode();"
              },
              {
                "id": 31,
                "content": "@Override"
              },
              {
                "id": 32,
                "content": "public boolean equals(Object obj);"
              },
              {
                "id": 33,
                "content": "@Override"
              },
              {
                "id": 34,
                "content": "public String toString();"
              }
            ]
          },
          {
            "declaration": {
              "id": 5,
              "content": "public static final class LeafType extends Assumption {"
            },
            "methods": [
              {
                "id": 35,
                "content": "public final ResolvedJavaType context;"
              },
              {
                "id": 36,
                "content": "public LeafType(ResolvedJavaType context) {"
              },
              {
                "id": 37,
                "content": "@Override"
              },
              {
                "id": 38,
                "content": "public int hashCode();"
              },
              {
                "id": 39,
                "content": "@Override"
              },
              {
                "id": 40,
                "content": "public boolean equals(Object obj);"
              },
              {
                "id": 41,
                "content": "@Override"
              },
              {
                "id": 42,
                "content": "public String toString();"
              }
            ]
          },
          {
            "declaration": {
              "id": 6,
              "content": "public static final class ConcreteMethod extends Assumption {"
            },
            "methods": [
              {
                "id": 43,
                "content": "public final ResolvedJavaMethod method;"
              },
              {
                "id": 44,
                "content": "public final ResolvedJavaType context;"
              },
              {
                "id": 45,
                "content": "public final ResolvedJavaMethod impl;"
              },
              {
                "id": 46,
                "content": "public ConcreteMethod(ResolvedJavaMethod method, ResolvedJavaType context, ResolvedJavaMethod impl) {"
              },
              {
                "id": 47,
                "content": "@Override"
              },
              {
                "id": 48,
                "content": "public int hashCode();"
              },
              {
                "id": 49,
                "content": "@Override"
              },
              {
                "id": 50,
                "content": "public boolean equals(Object obj);"
              },
              {
                "id": 51,
                "content": "@Override"
              },
              {
                "id": 52,
                "content": "public String toString();"
              }
            ]
          },
          {
            "declaration": {
              "id": 7,
              "content": "public static final class CallSiteTargetValue extends Assumption {"
            },
            "methods": [
              {
                "id": 53,
                "content": "public final JavaConstant callSite;"
              },
              {
                "id": 54,
                "content": "public final JavaConstant methodHandle;"
              },
              {
                "id": 55,
                "content": "public CallSiteTargetValue(JavaConstant callSite, JavaConstant methodHandle) {"
              },
              {
                "id": 56,
                "content": "@Override"
              },
              {
                "id": 57,
                "content": "public int hashCode();"
              },
              {
                "id": 58,
                "content": "@Override"
              },
              {
                "id": 59,
                "content": "public boolean equals(Object obj);"
              },
              {
                "id": 60,
                "content": "@Override"
              },
              {
                "id": 61,
                "content": "public String toString();"
              },
              {
                "id": 62,
                "content": "public boolean isEmpty();"
              },
              {
                "id": 63,
                "content": "@Override"
              },
              {
                "id": 64,
                "content": "public int hashCode();"
              },
              {
                "id": 65,
                "content": "@Override"
              },
              {
                "id": 66,
                "content": "@Pure"
              },
              {
                "id": 67,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 68,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 69,
                "content": "@Override"
              },
              {
                "id": 70,
                "content": "public Iterator<Assumption> iterator();"
              },
              {
                "id": 71,
                "content": "public void recordNoFinalizableSubclassAssumption(ResolvedJavaType receiverType);"
              },
              {
                "id": 72,
                "content": "public void recordConcreteSubtype(ResolvedJavaType context, ResolvedJavaType subtype);"
              },
              {
                "id": 73,
                "content": "public void recordConcreteMethod(ResolvedJavaMethod method, ResolvedJavaType context, ResolvedJavaMethod impl);"
              },
              {
                "id": 74,
                "content": "public void record(Assumption assumption);"
              },
              {
                "id": 75,
                "content": "public Assumption[] toArray();"
              },
              {
                "id": 76,
                "content": "public void record(Assumptions other);"
              },
              {
                "id": 77,
                "content": "@Override"
              },
              {
                "id": 78,
                "content": "public String toString();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 8,
            "content": "package jdk.vm.ci.meta;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/AbstractJavaProfile.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public abstract class AbstractJavaProfile<T extends AbstractProfiledItem<U>, U> {"
            },
            "methods": [
              {
                "id": 2,
                "content": "@SuppressFBWarnings(value = \"EI_EXPOSE_REP2\", justification = \"caller transfers ownership of the `pitems` array parameter\")"
              },
              {
                "id": 3,
                "content": "public AbstractJavaProfile(double notRecordedProbability, T[] pitems) {"
              },
              {
                "id": 4,
                "content": "public double getNotRecordedProbability();"
              },
              {
                "id": 5,
                "content": "protected T[] getItems();"
              },
              {
                "id": 6,
                "content": "public T findEntry(ResolvedJavaType type);"
              },
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "public String toString();"
              },
              {
                "id": 9,
                "content": "public boolean isIncluded(U item);"
              },
              {
                "id": 10,
                "content": "@Override"
              },
              {
                "id": 11,
                "content": "@Pure"
              },
              {
                "id": 12,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 13,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 14,
                "content": "@Override"
              },
              {
                "id": 15,
                "content": "public int hashCode();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.meta;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/Value.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public abstract class Value {"
            },
            "methods": [
              {
                "id": 3,
                "content": "public static final Value[] NO_VALUES;"
              },
              {
                "id": 4,
                "content": "public static final AllocatableValue ILLEGAL;"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "private static final class IllegalValue extends AllocatableValue {"
            },
            "methods": [
              {
                "id": 5,
                "content": "@Override"
              },
              {
                "id": 6,
                "content": "public String toString();"
              },
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "public boolean equals(Object other);"
              },
              {
                "id": 9,
                "content": "protected Value(ValueKind<?> valueKind) {"
              },
              {
                "id": 10,
                "content": "protected final String getKindSuffix();"
              },
              {
                "id": 11,
                "content": "public final ValueKind<?> getValueKind();"
              },
              {
                "id": 12,
                "content": "public final <K extends ValueKind<K>> K getValueKind(Class<K> cls);"
              },
              {
                "id": 13,
                "content": "public final PlatformKind getPlatformKind();"
              },
              {
                "id": 14,
                "content": "@Override"
              },
              {
                "id": 15,
                "content": "public int hashCode();"
              },
              {
                "id": 16,
                "content": "@Override"
              },
              {
                "id": 17,
                "content": "@Pure"
              },
              {
                "id": 18,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 19,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 20,
                "content": "public final boolean identityEquals(Value other);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 2,
            "content": "package jdk.vm.ci.meta;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/AbstractProfiledItem.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public abstract class AbstractProfiledItem<T> implements Comparable<AbstractProfiledItem<?>> {"
            },
            "methods": [
              {
                "id": 2,
                "content": "protected final T item;"
              },
              {
                "id": 3,
                "content": "protected final double probability;"
              },
              {
                "id": 4,
                "content": "public AbstractProfiledItem(T item, double probability) {"
              },
              {
                "id": 5,
                "content": "protected T getItem();"
              },
              {
                "id": 6,
                "content": "public double getProbability();"
              },
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "public int compareTo(AbstractProfiledItem<?> o);"
              },
              {
                "id": 9,
                "content": "@Override"
              },
              {
                "id": 10,
                "content": "public int hashCode();"
              },
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "@Pure"
              },
              {
                "id": 13,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 14,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 15,
                "content": "@Override"
              },
              {
                "id": 16,
                "content": "public abstract String toString();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.meta;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotObjectConstantImpl.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "abstract class HotSpotObjectConstantImpl implements HotSpotObjectConstant {"
            },
            "methods": [
              {
                "id": 2,
                "content": "protected final boolean compressed;"
              },
              {
                "id": 3,
                "content": "@Override"
              },
              {
                "id": 4,
                "content": "public JavaKind getJavaKind();"
              },
              {
                "id": 5,
                "content": "@Override"
              },
              {
                "id": 6,
                "content": "public boolean isCompressed();"
              },
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "public abstract JavaConstant compress();"
              },
              {
                "id": 9,
                "content": "@Override"
              },
              {
                "id": 10,
                "content": "public abstract JavaConstant uncompress();"
              },
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "public HotSpotResolvedObjectType getType();"
              },
              {
                "id": 13,
                "content": "@Override"
              },
              {
                "id": 14,
                "content": "public abstract int getIdentityHashCode();"
              },
              {
                "id": 15,
                "content": "@Override"
              },
              {
                "id": 16,
                "content": "public JavaConstant getCallSiteTarget(Assumptions assumptions);"
              },
              {
                "id": 17,
                "content": "@Override"
              },
              {
                "id": 18,
                "content": "public boolean isInternedString();"
              },
              {
                "id": 19,
                "content": "@Override"
              },
              {
                "id": 20,
                "content": "public <T> T asObject(Class<T> type);"
              },
              {
                "id": 21,
                "content": "@Override"
              },
              {
                "id": 22,
                "content": "public Object asObject(ResolvedJavaType type);"
              },
              {
                "id": 23,
                "content": "@Override"
              },
              {
                "id": 24,
                "content": "public boolean isNull();"
              },
              {
                "id": 25,
                "content": "@Override"
              },
              {
                "id": 26,
                "content": "public boolean isDefaultForKind();"
              },
              {
                "id": 27,
                "content": "@Override"
              },
              {
                "id": 28,
                "content": "public Object asBoxedPrimitive();"
              },
              {
                "id": 29,
                "content": "@Override"
              },
              {
                "id": 30,
                "content": "public int asInt();"
              },
              {
                "id": 31,
                "content": "@Override"
              },
              {
                "id": 32,
                "content": "public boolean asBoolean();"
              },
              {
                "id": 33,
                "content": "@Override"
              },
              {
                "id": 34,
                "content": "public long asLong();"
              },
              {
                "id": 35,
                "content": "@Override"
              },
              {
                "id": 36,
                "content": "public float asFloat();"
              },
              {
                "id": 37,
                "content": "@Override"
              },
              {
                "id": 38,
                "content": "public double asDouble();"
              },
              {
                "id": 39,
                "content": "@Pure"
              },
              {
                "id": 40,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 41,
                "content": "@Override"
              },
              {
                "id": 42,
                "content": "public boolean equals(@Nullable Object o);"
              },
              {
                "id": 43,
                "content": "@Override"
              },
              {
                "id": 44,
                "content": "public int hashCode();"
              },
              {
                "id": 45,
                "content": "@Override"
              },
              {
                "id": 46,
                "content": "public String toValueString();"
              },
              {
                "id": 47,
                "content": "@Override"
              },
              {
                "id": 48,
                "content": "public String toString();"
              },
              {
                "id": 49,
                "content": "public JavaConstant readFieldValue(HotSpotResolvedJavaField field);"
              },
              {
                "id": 50,
                "content": "public ResolvedJavaType asJavaType();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.hotspot;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotSignature.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class HotSpotSignature implements Signature {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public HotSpotSignature(HotSpotJVMCIRuntime runtime, String signature) {"
              },
              {
                "id": 3,
                "content": "public HotSpotSignature(HotSpotJVMCIRuntime runtime, ResolvedJavaType returnType, ResolvedJavaType... parameterTypes) {"
              },
              {
                "id": 4,
                "content": "@Override"
              },
              {
                "id": 5,
                "content": "public int getParameterCount(boolean withReceiver);"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "public JavaKind getParameterKind(int index);"
              },
              {
                "id": 8,
                "content": "@Override"
              },
              {
                "id": 9,
                "content": "public JavaType getParameterType(int index, ResolvedJavaType accessingClass);"
              },
              {
                "id": 10,
                "content": "@Override"
              },
              {
                "id": 11,
                "content": "public String toMethodDescriptor();"
              },
              {
                "id": 12,
                "content": "@Override"
              },
              {
                "id": 13,
                "content": "public JavaKind getReturnKind();"
              },
              {
                "id": 14,
                "content": "@Override"
              },
              {
                "id": 15,
                "content": "public JavaType getReturnType(ResolvedJavaType accessingClass);"
              },
              {
                "id": 16,
                "content": "@Override"
              },
              {
                "id": 17,
                "content": "public String toString();"
              },
              {
                "id": 18,
                "content": "@Override"
              },
              {
                "id": 19,
                "content": "@Pure"
              },
              {
                "id": 20,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 21,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 22,
                "content": "@Override"
              },
              {
                "id": 23,
                "content": "public int hashCode();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.hotspot;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotResolvedJavaFieldImpl.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "class HotSpotResolvedJavaFieldImpl implements HotSpotResolvedJavaField {"
            },
            "methods": [
              {
                "id": 2,
                "content": "@Override"
              },
              {
                "id": 3,
                "content": "@Pure"
              },
              {
                "id": 4,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 5,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "public int hashCode();"
              },
              {
                "id": 8,
                "content": "@Override"
              },
              {
                "id": 9,
                "content": "public int getModifiers();"
              },
              {
                "id": 10,
                "content": "@Override"
              },
              {
                "id": 11,
                "content": "public boolean isInternal();"
              },
              {
                "id": 12,
                "content": "@Override"
              },
              {
                "id": 13,
                "content": "public boolean isInObject(JavaConstant object);"
              },
              {
                "id": 14,
                "content": "@Override"
              },
              {
                "id": 15,
                "content": "public HotSpotResolvedObjectTypeImpl getDeclaringClass();"
              },
              {
                "id": 16,
                "content": "@Override"
              },
              {
                "id": 17,
                "content": "public String getName();"
              },
              {
                "id": 18,
                "content": "@Override"
              },
              {
                "id": 19,
                "content": "public JavaType getType();"
              },
              {
                "id": 20,
                "content": "@Override"
              },
              {
                "id": 21,
                "content": "public int getOffset();"
              },
              {
                "id": 22,
                "content": "int getIndex();"
              },
              {
                "id": 23,
                "content": "@Override"
              },
              {
                "id": 24,
                "content": "public String toString();"
              },
              {
                "id": 25,
                "content": "@Override"
              },
              {
                "id": 26,
                "content": "public boolean isSynthetic();"
              },
              {
                "id": 27,
                "content": "@Override"
              },
              {
                "id": 28,
                "content": "public boolean isStable();"
              },
              {
                "id": 29,
                "content": "@Override"
              },
              {
                "id": 30,
                "content": "public Annotation[] getAnnotations();"
              },
              {
                "id": 31,
                "content": "@Override"
              },
              {
                "id": 32,
                "content": "public Annotation[] getDeclaredAnnotations();"
              },
              {
                "id": 33,
                "content": "@Override"
              },
              {
                "id": 34,
                "content": "public <T extends Annotation> T getAnnotation(Class<T> annotationClass);"
              },
              {
                "id": 35,
                "content": "@Override"
              },
              {
                "id": 36,
                "content": "public JavaConstant getConstantValue();"
              },
              {
                "id": 37,
                "content": "@Override"
              },
              {
                "id": 38,
                "content": "public AnnotationData getAnnotationData(ResolvedJavaType annotationType);"
              },
              {
                "id": 39,
                "content": "@Override"
              },
              {
                "id": 40,
                "content": "public List<AnnotationData> getAnnotationData(ResolvedJavaType type1, ResolvedJavaType type2, ResolvedJavaType... types);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.hotspot;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotCompressedNullConstant.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class HotSpotCompressedNullConstant implements JavaConstant, HotSpotConstant {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public static final JavaConstant COMPRESSED_NULL;"
              },
              {
                "id": 3,
                "content": "@Override"
              },
              {
                "id": 4,
                "content": "public JavaKind getJavaKind();"
              },
              {
                "id": 5,
                "content": "@Override"
              },
              {
                "id": 6,
                "content": "public boolean isNull();"
              },
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "public boolean isCompressed();"
              },
              {
                "id": 9,
                "content": "@Override"
              },
              {
                "id": 10,
                "content": "public Constant compress();"
              },
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "public Constant uncompress();"
              },
              {
                "id": 13,
                "content": "@Override"
              },
              {
                "id": 14,
                "content": "public boolean isDefaultForKind();"
              },
              {
                "id": 15,
                "content": "@Override"
              },
              {
                "id": 16,
                "content": "public Object asBoxedPrimitive();"
              },
              {
                "id": 17,
                "content": "@Override"
              },
              {
                "id": 18,
                "content": "public int asInt();"
              },
              {
                "id": 19,
                "content": "@Override"
              },
              {
                "id": 20,
                "content": "public boolean asBoolean();"
              },
              {
                "id": 21,
                "content": "@Override"
              },
              {
                "id": 22,
                "content": "public long asLong();"
              },
              {
                "id": 23,
                "content": "@Override"
              },
              {
                "id": 24,
                "content": "public float asFloat();"
              },
              {
                "id": 25,
                "content": "@Override"
              },
              {
                "id": 26,
                "content": "public double asDouble();"
              },
              {
                "id": 27,
                "content": "@Override"
              },
              {
                "id": 28,
                "content": "public String toString();"
              },
              {
                "id": 29,
                "content": "@Override"
              },
              {
                "id": 30,
                "content": "public String toValueString();"
              },
              {
                "id": 31,
                "content": "@Override"
              },
              {
                "id": 32,
                "content": "public int hashCode();"
              },
              {
                "id": 33,
                "content": "@Override"
              },
              {
                "id": 34,
                "content": "@Pure"
              },
              {
                "id": 35,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 36,
                "content": "public boolean equals(@Nullable Object o);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.hotspot;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/VMIntrinsicMethod.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class VMIntrinsicMethod {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public final String declaringClass;"
              },
              {
                "id": 3,
                "content": "public final String name;"
              },
              {
                "id": 4,
                "content": "public final String descriptor;"
              },
              {
                "id": 5,
                "content": "public final int id;"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "@Pure"
              },
              {
                "id": 8,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 9,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 10,
                "content": "@Override"
              },
              {
                "id": 11,
                "content": "public int hashCode();"
              },
              {
                "id": 12,
                "content": "@Override"
              },
              {
                "id": 13,
                "content": "public String toString();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.hotspot;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotReferenceMap.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class HotSpotReferenceMap extends ReferenceMap {"
            },
            "methods": [
              {
                "id": 2,
                "content": "@SuppressFBWarnings(value = \"EI_EXPOSE_REP2\", justification = \"caller transfers ownership of `objects`, `derivedBase` and `sizeInBytes`\")"
              },
              {
                "id": 3,
                "content": "public HotSpotReferenceMap(Location[] objects, Location[] derivedBase, int[] sizeInBytes, int maxRegisterSize) {"
              },
              {
                "id": 4,
                "content": "@Override"
              },
              {
                "id": 5,
                "content": "public int hashCode();"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "@Pure"
              },
              {
                "id": 8,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 9,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 10,
                "content": "@Override"
              },
              {
                "id": 11,
                "content": "public String toString();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.hotspot;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "final class HotSpotResolvedJavaMethodImpl extends HotSpotMethod implements HotSpotResolvedJavaMethod, MetaspaceHandleObject {"
            },
            "methods": [
              {
                "id": 2,
                "content": "@Override"
              },
              {
                "id": 3,
                "content": "public String getName();"
              },
              {
                "id": 4,
                "content": "@Override"
              },
              {
                "id": 5,
                "content": "@Pure"
              },
              {
                "id": 6,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 7,
                "content": "public boolean equals(@Nullable Object obj);"
              },
              {
                "id": 8,
                "content": "@Override"
              },
              {
                "id": 9,
                "content": "public int hashCode();"
              },
              {
                "id": 10,
                "content": "@Override"
              },
              {
                "id": 11,
                "content": "public HotSpotResolvedObjectTypeImpl getDeclaringClass();"
              },
              {
                "id": 12,
                "content": "long getMethodPointer();"
              },
              {
                "id": 13,
                "content": "@Override"
              },
              {
                "id": 14,
                "content": "public long getMetadataHandle();"
              },
              {
                "id": 15,
                "content": "@Override"
              },
              {
                "id": 16,
                "content": "public Constant getEncoding();"
              },
              {
                "id": 17,
                "content": "public int getAllModifiers();"
              },
              {
                "id": 18,
                "content": "@Override"
              },
              {
                "id": 19,
                "content": "public int getModifiers();"
              },
              {
                "id": 20,
                "content": "@Override"
              },
              {
                "id": 21,
                "content": "public boolean canBeStaticallyBound();"
              },
              {
                "id": 22,
                "content": "@Override"
              },
              {
                "id": 23,
                "content": "public byte[] getCode();"
              },
              {
                "id": 24,
                "content": "@Override"
              },
              {
                "id": 25,
                "content": "public int getCodeSize();"
              },
              {
                "id": 26,
                "content": "@Override"
              },
              {
                "id": 27,
                "content": "public ExceptionHandler[] getExceptionHandlers();"
              },
              {
                "id": 28,
                "content": "@Override"
              },
              {
                "id": 29,
                "content": "public boolean isCallerSensitive();"
              },
              {
                "id": 30,
                "content": "@Override"
              },
              {
                "id": 31,
                "content": "public boolean isForceInline();"
              },
              {
                "id": 32,
                "content": "@Override"
              },
              {
                "id": 33,
                "content": "public boolean hasReservedStackAccess();"
              },
              {
                "id": 34,
                "content": "@Override"
              },
              {
                "id": 35,
                "content": "public void setNotInlinableOrCompilable();"
              },
              {
                "id": 36,
                "content": "@Override"
              },
              {
                "id": 37,
                "content": "public boolean ignoredBySecurityStackWalk();"
              },
              {
                "id": 38,
                "content": "@Override"
              },
              {
                "id": 39,
                "content": "public boolean isClassInitializer();"
              },
              {
                "id": 40,
                "content": "@Override"
              },
              {
                "id": 41,
                "content": "public boolean isConstructor();"
              },
              {
                "id": 42,
                "content": "@Override"
              },
              {
                "id": 43,
                "content": "public int getMaxLocals();"
              },
              {
                "id": 44,
                "content": "@Override"
              },
              {
                "id": 45,
                "content": "public int getMaxStackSize();"
              },
              {
                "id": 46,
                "content": "@Override"
              },
              {
                "id": 47,
                "content": "public StackTraceElement asStackTraceElement(int bci);"
              },
              {
                "id": 48,
                "content": "@Override"
              },
              {
                "id": 49,
                "content": "public ResolvedJavaMethod uniqueConcreteMethod(HotSpotResolvedObjectType receiver);"
              },
              {
                "id": 50,
                "content": "@Override"
              },
              {
                "id": 51,
                "content": "public HotSpotSignature getSignature();"
              },
              {
                "id": 52,
                "content": "@Override"
              },
              {
                "id": 53,
                "content": "public boolean hasCompiledCode();"
              },
              {
                "id": 54,
                "content": "@Override"
              },
              {
                "id": 55,
                "content": "public boolean hasCompiledCodeAtLevel(int level);"
              },
              {
                "id": 56,
                "content": "@Override"
              },
              {
                "id": 57,
                "content": "public ProfilingInfo getProfilingInfo(boolean includeNormal, boolean includeOSR);"
              },
              {
                "id": 58,
                "content": "@Override"
              },
              {
                "id": 59,
                "content": "public void reprofile();"
              },
              {
                "id": 60,
                "content": "@Override"
              },
              {
                "id": 61,
                "content": "public ConstantPool getConstantPool();"
              },
              {
                "id": 62,
                "content": "@Override"
              },
              {
                "id": 63,
                "content": "public Parameter[] getParameters();"
              },
              {
                "id": 64,
                "content": "@Override"
              },
              {
                "id": 65,
                "content": "public Annotation[][] getParameterAnnotations();"
              },
              {
                "id": 66,
                "content": "@Override"
              },
              {
                "id": 67,
                "content": "public Annotation[] getAnnotations();"
              },
              {
                "id": 68,
                "content": "@Override"
              },
              {
                "id": 69,
                "content": "public Annotation[] getDeclaredAnnotations();"
              },
              {
                "id": 70,
                "content": "@Override"
              },
              {
                "id": 71,
                "content": "public <T extends Annotation> T getAnnotation(Class<T> annotationClass);"
              },
              {
                "id": 72,
                "content": "@Override"
              },
              {
                "id": 73,
                "content": "public boolean isBridge();"
              },
              {
                "id": 74,
                "content": "@Override"
              },
              {
                "id": 75,
                "content": "public boolean isSynthetic();"
              },
              {
                "id": 76,
                "content": "@Override"
              },
              {
                "id": 77,
                "content": "public boolean isVarArgs();"
              },
              {
                "id": 78,
                "content": "@Override"
              },
              {
                "id": 79,
                "content": "public boolean isDefault();"
              },
              {
                "id": 80,
                "content": "@Override"
              },
              {
                "id": 81,
                "content": "public Type[] getGenericParameterTypes();"
              },
              {
                "id": 82,
                "content": "@Override"
              },
              {
                "id": 83,
                "content": "public boolean canBeInlined();"
              },
              {
                "id": 84,
                "content": "@Override"
              },
              {
                "id": 85,
                "content": "public boolean hasNeverInlineDirective();"
              },
              {
                "id": 86,
                "content": "@Override"
              },
              {
                "id": 87,
                "content": "public boolean shouldBeInlined();"
              },
              {
                "id": 88,
                "content": "@Override"
              },
              {
                "id": 89,
                "content": "public LineNumberTable getLineNumberTable();"
              },
              {
                "id": 90,
                "content": "@Override"
              },
              {
                "id": 91,
                "content": "public LocalVariableTable getLocalVariableTable();"
              },
              {
                "id": 92,
                "content": "@Override"
              },
              {
                "id": 93,
                "content": "public int vtableEntryOffset(ResolvedJavaType resolved);"
              },
              {
                "id": 94,
                "content": "@Override"
              },
              {
                "id": 95,
                "content": "public boolean isInVirtualMethodTable(ResolvedJavaType resolved);"
              },
              {
                "id": 96,
                "content": "@Override"
              },
              {
                "id": 97,
                "content": "public SpeculationLog getSpeculationLog();"
              },
              {
                "id": 98,
                "content": "@Override"
              },
              {
                "id": 99,
                "content": "public int intrinsicId();"
              },
              {
                "id": 100,
                "content": "@Override"
              },
              {
                "id": 101,
                "content": "public boolean isIntrinsicCandidate();"
              },
              {
                "id": 102,
                "content": "@Override"
              },
              {
                "id": 103,
                "content": "public int allocateCompileId(int entryBCI);"
              },
              {
                "id": 104,
                "content": "@Override"
              },
              {
                "id": 105,
                "content": "public boolean hasCodeAtLevel(int entryBCI, int level);"
              },
              {
                "id": 106,
                "content": "@Override"
              },
              {
                "id": 107,
                "content": "public int methodIdnum();"
              },
              {
                "id": 108,
                "content": "@Override"
              },
              {
                "id": 109,
                "content": "public AnnotationData getAnnotationData(ResolvedJavaType type);"
              },
              {
                "id": 110,
                "content": "@Override"
              },
              {
                "id": 111,
                "content": "public List<AnnotationData> getAnnotationData(ResolvedJavaType type1, ResolvedJavaType type2, ResolvedJavaType... types);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.hotspot;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotMetaspaceConstantImpl.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "final class HotSpotMetaspaceConstantImpl implements HotSpotMetaspaceConstant, VMConstant {"
            },
            "methods": [
              {
                "id": 2,
                "content": "static HotSpotMetaspaceConstantImpl forMetaspaceObject(MetaspaceObject metaspaceObject, boolean compressed);"
              },
              {
                "id": 3,
                "content": "static MetaspaceObject getMetaspaceObject(Constant constant);"
              },
              {
                "id": 4,
                "content": "@Override"
              },
              {
                "id": 5,
                "content": "public int hashCode();"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "@Pure"
              },
              {
                "id": 8,
                "content": "@EnsuresNonNullIf(expression = \"#1\", result = true)"
              },
              {
                "id": 9,
                "content": "public boolean equals(@Nullable Object o);"
              },
              {
                "id": 10,
                "content": "@Override"
              },
              {
                "id": 11,
                "content": "public String toValueString();"
              },
              {
                "id": 12,
                "content": "@Override"
              },
              {
                "id": 13,
                "content": "public String toString();"
              },
              {
                "id": 14,
                "content": "@Override"
              },
              {
                "id": 15,
                "content": "public boolean isDefaultForKind();"
              },
              {
                "id": 16,
                "content": "@Override"
              },
              {
                "id": 17,
                "content": "public boolean isCompressed();"
              },
              {
                "id": 18,
                "content": "@Override"
              },
              {
                "id": 19,
                "content": "public Constant compress();"
              },
              {
                "id": 20,
                "content": "@Override"
              },
              {
                "id": 21,
                "content": "public Constant uncompress();"
              },
              {
                "id": 22,
                "content": "@Override"
              },
              {
                "id": 23,
                "content": "public HotSpotResolvedObjectType asResolvedJavaType();"
              },
              {
                "id": 24,
                "content": "@Override"
              },
              {
                "id": 25,
                "content": "public HotSpotResolvedJavaMethod asResolvedJavaMethod();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.vm.ci.hotspot;"
          }
        ]
      }
    }
  },
  "jdk-22": {
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.security.jgss/share/classes/sun/security/jgss/GSSCredentialImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.security.jgss/share/classes/sun/security/jgss/GSSNameImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.security.jgss/share/classes/sun/security/jgss/spi/GSSNameSpi.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.security.jgss/share/classes/sun/security/jgss/krb5/Krb5NameElement.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.security.jgss/share/classes/sun/security/krb5/PrincipalName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.security.jgss/share/classes/sun/security/krb5/Realm.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.security.jgss/share/classes/sun/security/krb5/internal/HostAddresses.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.security.jgss/share/classes/sun/security/krb5/internal/HostAddress.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.security.jgss/share/classes/org/ietf/jgss/GSSCredential.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.security.jgss/share/classes/org/ietf/jgss/ChannelBinding.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.security.jgss/share/classes/org/ietf/jgss/GSSName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.security.jgss/share/classes/org/ietf/jgss/Oid.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.security.jgss/share/classes/javax/security/auth/kerberos/KeyTab.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.security.jgss/share/classes/javax/security/auth/kerberos/KerberosKey.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.security.jgss/share/classes/javax/security/auth/kerberos/KerberosTicket.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.security.jgss/share/classes/javax/security/auth/kerberos/KerberosPrincipal.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "public boolean equals(@Nullable Object obj);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.jfr/share/classes/jdk/jfr/internal/Type.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static final Type STACK_TRACE;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.compiler/share/classes/javax/lang/model/util/Elements.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "default TypeElement getEnumConstantBody(VariableElement enumConstant);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.compiler/share/classes/javax/lang/model/element/RecordComponentElement.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "TypeMirror asType();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml/share/classes/javax/xml/catalog/CatalogImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public final NotFoundAction getResolve();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.compiler/share/classes/com/sun/tools/javac/tree/TreeInfo.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class ConstructorCallFinder extends TreeScanner {"
            },
            "methods": [
              {
                "id": 5,
                "content": "List<JCMethodInvocation> find(JCMethodDecl meth);"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "public void visitApply(JCMethodInvocation invoke);"
              },
              {
                "id": 8,
                "content": "@Override"
              },
              {
                "id": 9,
                "content": "public void visitClassDef(JCClassDecl tree);"
              },
              {
                "id": 10,
                "content": "@Override"
              },
              {
                "id": 11,
                "content": "public void visitLambda(JCLambda tree);"
              },
              {
                "id": 12,
                "content": "public static void mapSuperCalls(JCBlock block, Function<? super JCExpressionStatement, ? extends JCStatement> mapper);"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "private static class SuperCallTranslator extends TreeTranslator {"
            },
            "methods": [
              {
                "id": 13,
                "content": "@Override"
              },
              {
                "id": 14,
                "content": "public void visitExec(JCExpressionStatement stat);"
              },
              {
                "id": 15,
                "content": "@Override"
              },
              {
                "id": 16,
                "content": "public void visitClassDef(JCClassDecl tree);"
              },
              {
                "id": 17,
                "content": "@Override"
              },
              {
                "id": 18,
                "content": "public void visitLambda(JCLambda tree);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 2,
            "content": "public static boolean hasAnyConstructorCall(JCMethodDecl tree);"
          },
          {
            "id": 3,
            "content": "public static boolean hasConstructorCall(JCMethodDecl tree, Name target);"
          },
          {
            "id": 4,
            "content": "public static JCMethodInvocation findConstructorCall(JCMethodDecl md);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Symbol.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean isImplicit();"
          },
          {
            "id": 1,
            "content": "public Type implicitReceiverType();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Types.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "class DisjointChecker {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Resolve.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "class RefBeforeCtorCalledError extends StaticError {"
            },
            "methods": [
              {
                "id": 3,
                "content": "@Override"
              },
              {
                "id": 4,
                "content": "JCDiagnostic getDiagnostic(JCDiagnostic.DiagnosticType dkind, DiagnosticPosition pos, Symbol location, Type site, Name name, List<Type> argtypes, List<Type> typeargtypes);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "Symbol access(Env<AttrContext> env, DiagnosticPosition pos, Symbol location, Symbol sym);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/P11Key.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "public DSAParams getParams();"
          },
          {
            "id": 4,
            "content": "@Override"
          },
          {
            "id": 5,
            "content": "public ECParameterSpec getParams();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/unix/classes/sun/nio/ch/FileKey.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/unix/classes/sun/nio/fs/UnixPath.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public UnixPath resolve(Path first, Path... more);"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/windows/classes/sun/nio/ch/FileKey.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/util/calendar/CalendarDate.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public sealed abstract class CalendarDate implements Cloneable permits BaseCalendar.Date {"
            },
            "methods": [
              {
                "id": 1,
                "content": "@Override"
              },
              {
                "id": 2,
                "content": "@Override"
              },
              {
                "id": 3,
                "content": "@Override"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/util/calendar/ImmutableGregorianDate.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "final class ImmutableGregorianDate extends BaseCalendar.Date {"
            },
            "methods": [
              {
                "id": 1,
                "content": "@Override"
              },
              {
                "id": 2,
                "content": "@Override"
              },
              {
                "id": 3,
                "content": "@Override"
              },
              {
                "id": 4,
                "content": "@Override"
              },
              {
                "id": 5,
                "content": "@Override"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "@Override"
              },
              {
                "id": 9,
                "content": "@Override"
              },
              {
                "id": 10,
                "content": "@Override"
              },
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "@Override"
              },
              {
                "id": 13,
                "content": "@Override"
              },
              {
                "id": 14,
                "content": "@Override"
              },
              {
                "id": 15,
                "content": "@Override"
              },
              {
                "id": 16,
                "content": "@Override"
              },
              {
                "id": 17,
                "content": "@Override"
              },
              {
                "id": 18,
                "content": "@Override"
              },
              {
                "id": 19,
                "content": "@Override"
              },
              {
                "id": 20,
                "content": "@Override"
              },
              {
                "id": 21,
                "content": "@Override"
              },
              {
                "id": 22,
                "content": "@Override"
              },
              {
                "id": 23,
                "content": "@Override"
              },
              {
                "id": 24,
                "content": "@Override"
              },
              {
                "id": 25,
                "content": "@Override"
              },
              {
                "id": 26,
                "content": "@Override"
              },
              {
                "id": 27,
                "content": "@Override"
              },
              {
                "id": 28,
                "content": "@Override"
              },
              {
                "id": 29,
                "content": "@Override"
              },
              {
                "id": 30,
                "content": "@Override"
              },
              {
                "id": 31,
                "content": "@Override"
              },
              {
                "id": 32,
                "content": "@Override"
              },
              {
                "id": 33,
                "content": "@Override"
              },
              {
                "id": 34,
                "content": "@Override"
              },
              {
                "id": 35,
                "content": "@Override"
              },
              {
                "id": 36,
                "content": "@Override"
              },
              {
                "id": 37,
                "content": "@Override"
              },
              {
                "id": 38,
                "content": "@Override"
              },
              {
                "id": 39,
                "content": "@Override"
              },
              {
                "id": 40,
                "content": "@Override"
              },
              {
                "id": 41,
                "content": "@Override"
              },
              {
                "id": 42,
                "content": "@Override"
              },
              {
                "id": 43,
                "content": "@Override"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/tools/keytool/Main.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class ExitException extends RuntimeException {"
            },
            "methods": [
              {
                "id": 1,
                "content": "public ExitException(int errorCode) {"
              },
              {
                "id": 2,
                "content": "public int run(String[] args, PrintStream out) throws Exception;"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "public boolean equals(@Nullable Object obj);"
          },
          {
            "id": 5,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/util/BitArray.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/util/DerInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Date getTime() throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/util/DerValue.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Date getTime() throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/X500Name.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/CRLExtensions.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/Extension.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/URIName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/DNSName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/X509Key.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/GeneralName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public boolean equals(@Nullable Object obj);"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/X509CertInfo.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public boolean equals(@Nullable Object obj);"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/IPAddressName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/OIDName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/AVA.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/KeyIdentifier.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "public boolean equals(@Nullable Object obj);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/EDIPartyName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public boolean equals(@Nullable Object obj);"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/PolicyInformation.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public boolean equals(@Nullable Object obj);"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/OtherName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/CertificatePolicyId.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public boolean equals(@Nullable Object obj);"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/DistributionPointName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/CertificateExtensions.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/RFC822Name.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/DistributionPoint.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/GeneralSubtree.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public boolean equals(@Nullable Object obj);"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/jca/ProviderConfig.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/pkcs10/PKCS10.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public boolean equals(@Nullable Object obj);"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/pkcs10/PKCS10Attributes.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/pkcs/PKCS8Key.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/pkcs/EncryptedPrivateKeyInfo.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public boolean equals(@Nullable Object obj);"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/nio/ch/FileChannelImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private sealed abstract static class Unmapper implements Runnable, UnmapperProxy {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "private static final class DefaultUnmapper extends Unmapper {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 2,
              "content": "private static final class SyncUnmapper extends Unmapper {"
            },
            "methods": [
              {
                "id": 16,
                "content": "@Override"
              },
              {
                "id": 17,
                "content": "@Override"
              },
              {
                "id": 18,
                "content": "@Override"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@Override"
          },
          {
            "id": 5,
            "content": "@Override"
          },
          {
            "id": 6,
            "content": "@Override"
          },
          {
            "id": 7,
            "content": "@Override"
          },
          {
            "id": 8,
            "content": "@Override"
          },
          {
            "id": 9,
            "content": "@Override"
          },
          {
            "id": 10,
            "content": "@Override"
          },
          {
            "id": 11,
            "content": "@Override"
          },
          {
            "id": 12,
            "content": "@Override"
          },
          {
            "id": 13,
            "content": "@Override"
          },
          {
            "id": 14,
            "content": "@Override"
          },
          {
            "id": 15,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/net/Inet4Address.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static Inet4Address ofLiteral(String ipv4AddressLiteral);"
          },
          {
            "id": 1,
            "content": "static Inet4Address parseAddressString(String addressLiteral, boolean throwIAE);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/net/ProxySelector.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public List<Proxy> select(URI uri);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/net/URLPermission.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/net/Inet6Address.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static InetAddress ofLiteral(String ipv6AddressLiteral);"
          },
          {
            "id": 1,
            "content": "static InetAddress parseAddressString(String addressLiteral, boolean removeSqBrackets) throws UnknownHostException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/net/NetworkInterface.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/net/InetAddress.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static InetAddress ofLiteral(String ipAddressLiteral);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/util/BitSet.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/util/Calendar.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Pure"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/util/DualPivotQuicksort.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@FunctionalInterface"
          },
          {
            "id": 1,
            "content": "private static interface SortOperation<A> {"
          },
          {
            "id": 2,
            "content": "void sort(A a, int low, int high);"
          },
          {
            "id": 3,
            "content": "@FunctionalInterface"
          },
          {
            "id": 4,
            "content": "interface PartitionOperation<A> {"
          },
          {
            "id": 5,
            "content": "int[] partition(A a, int low, int high, int pivotIndex1, int pivotIndex2);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/util/AbstractMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "final class KeyIterator implements Iterator<K> {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public boolean hasNext();"
              },
              {
                "id": 3,
                "content": "public void remove();"
              },
              {
                "id": 4,
                "content": "public K next();"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "final class ValueIterator implements Iterator<V> {"
            },
            "methods": [
              {
                "id": 5,
                "content": "public boolean hasNext();"
              },
              {
                "id": 6,
                "content": "public void remove();"
              },
              {
                "id": 7,
                "content": "public V next();"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/util/stream/Stream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.STREAM_GATHERERS)"
          },
          {
            "id": 1,
            "content": "default <R> Stream<R> gather(Gatherer<? super T, ?, R> gatherer);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/util/zip/ZipFile.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static boolean getDisableZip64ExtraFieldValidation();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/util/concurrent/ForkJoinPool.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static long slotOffset(int index);"
          },
          {
            "id": 1,
            "content": "final void updateBase(int v);"
          },
          {
            "id": 2,
            "content": "final void updateTop(int v);"
          },
          {
            "id": 3,
            "content": "final void forgetSource();"
          },
          {
            "id": 4,
            "content": "final void updateArray(ForkJoinTask<?>[] a);"
          },
          {
            "id": 5,
            "content": "final void unlockPhase();"
          },
          {
            "id": 6,
            "content": "final boolean tryLockPhase();"
          },
          {
            "id": 7,
            "content": "final void push(ForkJoinTask<?> task, ForkJoinPool pool, boolean internal);"
          },
          {
            "id": 8,
            "content": "final boolean tryUnpush(ForkJoinTask<?> task, boolean internal);"
          },
          {
            "id": 9,
            "content": "final void topLevelExec(ForkJoinTask<?> task, WorkQueue src, int srcId);"
          },
          {
            "id": 10,
            "content": "final void tryRemoveAndExec(ForkJoinTask<?> task, boolean internal);"
          },
          {
            "id": 11,
            "content": "final int helpComplete(ForkJoinTask<?> task, boolean internal, int limit);"
          },
          {
            "id": 12,
            "content": "static boolean poolIsStopping(ForkJoinPool p);"
          },
          {
            "id": 13,
            "content": "final void signalWork(ForkJoinTask<?>[] a, int k);"
          },
          {
            "id": 14,
            "content": "final int helpJoin(ForkJoinTask<?> task, WorkQueue w, boolean internal);"
          },
          {
            "id": 15,
            "content": "final int helpComplete(ForkJoinTask<?> task, WorkQueue w, boolean internal);"
          },
          {
            "id": 16,
            "content": "final WorkQueue externalSubmissionQueue();"
          },
          {
            "id": 17,
            "content": "static WorkQueue externalQueue(ForkJoinPool p);"
          },
          {
            "id": 18,
            "content": "public <T> List<Future<T>> invokeAllUninterruptibly(Collection<? extends Callable<T>> tasks);"
          },
          {
            "id": 19,
            "content": "@Override"
          },
          {
            "id": 20,
            "content": "public <T> List<Future<T>> invokeAll(Collection<? extends Callable<T>> tasks) throws InterruptedException;"
          },
          {
            "id": 21,
            "content": "final long beginCompensatedBlock();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/util/concurrent/ForkJoinTask.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "static final class AdaptedCallable<T> extends ForkJoinTask<T> implements RunnableFuture<T> {"
            },
            "methods": [
              {
                "id": 22,
                "content": "public final T getRawResult();"
              },
              {
                "id": 23,
                "content": "public final void setRawResult(T v);"
              },
              {
                "id": 24,
                "content": "public final boolean exec();"
              },
              {
                "id": 25,
                "content": "public final void run();"
              },
              {
                "id": 26,
                "content": "public String toString();"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "static abstract class InterruptibleTask<T> extends ForkJoinTask<T> implements RunnableFuture<T> {"
            },
            "methods": [
              {
                "id": 27,
                "content": "abstract T compute() throws Exception;"
              },
              {
                "id": 28,
                "content": "public final boolean exec();"
              },
              {
                "id": 29,
                "content": "public boolean cancel(boolean mayInterruptIfRunning);"
              },
              {
                "id": 30,
                "content": "public final void run();"
              },
              {
                "id": 31,
                "content": "Object adaptee();"
              },
              {
                "id": 32,
                "content": "public String toString();"
              }
            ]
          },
          {
            "declaration": {
              "id": 2,
              "content": "static final class AdaptedInterruptibleCallable<T> extends InterruptibleTask<T> {"
            },
            "methods": [
              {
                "id": 33,
                "content": "public final T getRawResult();"
              },
              {
                "id": 34,
                "content": "public final void setRawResult(T v);"
              },
              {
                "id": 35,
                "content": "final T compute() throws Exception;"
              },
              {
                "id": 36,
                "content": "final Object adaptee();"
              }
            ]
          },
          {
            "declaration": {
              "id": 3,
              "content": "static final class AdaptedInterruptibleRunnable<T> extends InterruptibleTask<T> {"
            },
            "methods": [
              {
                "id": 37,
                "content": "public final T getRawResult();"
              },
              {
                "id": 38,
                "content": "public final void setRawResult(T v);"
              },
              {
                "id": 39,
                "content": "final T compute();"
              },
              {
                "id": 40,
                "content": "final Object adaptee();"
              }
            ]
          },
          {
            "declaration": {
              "id": 4,
              "content": "static final class RunnableExecuteAction extends InterruptibleTask<Void> {"
            },
            "methods": [
              {
                "id": 41,
                "content": "final Void compute();"
              },
              {
                "id": 42,
                "content": "final Object adaptee();"
              },
              {
                "id": 43,
                "content": "void onAuxExceptionSet(Throwable ex);"
              },
              {
                "id": 44,
                "content": "@SuppressWarnings(\"serial\")"
              }
            ]
          },
          {
            "declaration": {
              "id": 5,
              "content": "static final class InvokeAnyRoot<T> extends InterruptibleTask<T> {"
            },
            "methods": [
              {
                "id": 45,
                "content": "final void tryComplete(InvokeAnyTask<T> f, T v, Throwable ex, boolean completed);"
              },
              {
                "id": 46,
                "content": "public final T compute();"
              },
              {
                "id": 47,
                "content": "public final T getRawResult();"
              },
              {
                "id": 48,
                "content": "public final void setRawResult(T v);"
              },
              {
                "id": 49,
                "content": "final T invokeAny(Collection<? extends Callable<T>> tasks, ForkJoinPool pool, boolean timed, long nanos) throws InterruptedException, ExecutionException, TimeoutException;"
              },
              {
                "id": 50,
                "content": "@SuppressWarnings(\"serial\")"
              }
            ]
          },
          {
            "declaration": {
              "id": 6,
              "content": "static final class InvokeAnyTask<T> extends InterruptibleTask<Void> {"
            },
            "methods": [
              {
                "id": 51,
                "content": "final Void compute() throws Exception;"
              },
              {
                "id": 52,
                "content": "final void onRootCompletion();"
              },
              {
                "id": 53,
                "content": "public final Void getRawResult();"
              },
              {
                "id": 54,
                "content": "public final void setRawResult(Void v);"
              },
              {
                "id": 55,
                "content": "final Object adaptee();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 7,
            "content": "final int trySetCancelled();"
          },
          {
            "id": 8,
            "content": "final boolean trySetThrown(Throwable ex);"
          },
          {
            "id": 9,
            "content": "void onAuxExceptionSet(Throwable ex);"
          },
          {
            "id": 10,
            "content": "final void trySetException(Throwable ex);"
          },
          {
            "id": 11,
            "content": "final void doExec();"
          },
          {
            "id": 12,
            "content": "final int setForkJoinTaskStatusMarkerBit();"
          },
          {
            "id": 13,
            "content": "final int getForkJoinTaskStatusMarkerBit();"
          },
          {
            "id": 14,
            "content": "public ForkJoinTask() {"
          },
          {
            "id": 15,
            "content": "final void quietlyJoinPoolInvokeAllTask(long deadline) throws InterruptedException;"
          },
          {
            "id": 16,
            "content": "public static ForkJoinTask<?> adapt(Runnable runnable);"
          },
          {
            "id": 17,
            "content": "public static <T> ForkJoinTask<T> adapt(Runnable runnable, T result);"
          },
          {
            "id": 18,
            "content": "public static <T> ForkJoinTask<T> adapt(Callable<? extends T> callable);"
          },
          {
            "id": 19,
            "content": "public static <T> ForkJoinTask<T> adaptInterruptible(Callable<? extends T> callable);"
          },
          {
            "id": 20,
            "content": "public static <T> ForkJoinTask<T> adaptInterruptible(Runnable runnable, T result);"
          },
          {
            "id": 21,
            "content": "public static ForkJoinTask<?> adaptInterruptible(Runnable runnable);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/util/concurrent/LinkedTransferQueue.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "static final class DualNode implements ForkJoinPool.ManagedBlocker {"
            },
            "methods": [
              {
                "id": 1,
                "content": "final Object cmpExItem(Object cmp, Object val);"
              },
              {
                "id": 2,
                "content": "final DualNode cmpExNext(DualNode cmp, DualNode val);"
              },
              {
                "id": 3,
                "content": "final boolean matched();"
              },
              {
                "id": 4,
                "content": "final void selfLinkItem();"
              },
              {
                "id": 5,
                "content": "final Object await(Object e, long ns, Object blocker, boolean spin);"
              },
              {
                "id": 6,
                "content": "final DualNode cmpExTail(DualNode cmp, DualNode val);"
              },
              {
                "id": 7,
                "content": "final DualNode cmpExHead(DualNode cmp, DualNode val);"
              },
              {
                "id": 8,
                "content": "final boolean sweepNow();"
              },
              {
                "id": 9,
                "content": "final Object xfer(Object e, long ns);"
              },
              {
                "id": 10,
                "content": "final boolean tryCasSuccessor(DualNode pred, DualNode c, DualNode p);"
              },
              {
                "id": 11,
                "content": "final DualNode skipDeadNodes(DualNode pred, DualNode c, DualNode p, DualNode q);"
              },
              {
                "id": 12,
                "content": "final boolean tryMatchData(DualNode p, Object x);"
              },
              {
                "id": 13,
                "content": "final DualNode firstDataNode();"
              },
              {
                "id": 14,
                "content": "final int countOfMode(boolean data);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 15,
            "content": "@SuppressWarnings(\"unchecked\")"
          },
          {
            "id": 16,
            "content": "@SuppressWarnings(\"unchecked\")"
          },
          {
            "id": 17,
            "content": "@SuppressWarnings(\"unchecked\")"
          },
          {
            "id": 18,
            "content": "void forEachFrom(Consumer<? super E> action, DualNode p);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/util/concurrent/SynchronousQueue.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "static final class Transferer<E> extends LinkedTransferQueue<E> {"
            },
            "methods": [
              {
                "id": 2,
                "content": "final Object xferLifo(Object e, long ns);"
              },
              {
                "id": 3,
                "content": "@SuppressWarnings(\"unchecked\")"
              },
              {
                "id": 4,
                "content": "@SuppressWarnings(\"unchecked\")"
              },
              {
                "id": 5,
                "content": "@SuppressWarnings(\"unchecked\")"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "@SuppressWarnings(\"serial\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/security/AccessControlContext.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/security/Principal.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/security/CodeSigner.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/security/AllPermission.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/security/spec/ECFieldFp.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/security/spec/ECFieldF2m.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/security/spec/ECPoint.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/security/cert/Certificate.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/security/cert/X509CRL.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/security/cert/X509CRLEntry.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/security/cert/CertPath.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/security/interfaces/ECPrivateKey.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "default ECParameterSpec getParams();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/io/FileDescriptor.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void sync() throws SyncFailedException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/io/RandomAccessFile.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public RandomAccessFile(String pathname, String mode) throws FileNotFoundException {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/io/Console.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean isTerminal();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/Integer.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static final class IntegerCache {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/StackStreamFactory.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "static class StackFrameTraverser<T> extends AbstractStackWalker<T, StackFrame> implements Spliterator<StackFrame> {"
            },
            "methods": [
              {
                "id": 6,
                "content": "protected int batchSize(int lastBatchSize);"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "static class StackFrameBuffer<T extends ClassFrameInfo> extends FrameBuffer<T> {"
            },
            "methods": [
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "T[] frames();"
              },
              {
                "id": 9,
                "content": "@SuppressWarnings(\"unchecked\")"
              },
              {
                "id": 10,
                "content": "T[] allocateArray(int size);"
              },
              {
                "id": 11,
                "content": "T[] fill(T[] array, int startIndex, int size);"
              },
              {
                "id": 12,
                "content": "@Override"
              },
              {
                "id": 13,
                "content": "void resize(int size);"
              },
              {
                "id": 14,
                "content": "@Override"
              },
              {
                "id": 15,
                "content": "T nextStackFrame();"
              },
              {
                "id": 16,
                "content": "@Override"
              },
              {
                "id": 17,
                "content": "final Class<?> at(int index);"
              }
            ]
          },
          {
            "declaration": {
              "id": 2,
              "content": "static class ClassFrameBuffer extends StackFrameBuffer<ClassFrameInfo> {"
            },
            "methods": [
              {
                "id": 18,
                "content": "@Override"
              },
              {
                "id": 19,
                "content": "ClassFrameInfo[] allocateArray(int size);"
              },
              {
                "id": 20,
                "content": "@Override"
              },
              {
                "id": 21,
                "content": "ClassFrameInfo[] fill(ClassFrameInfo[] array, int startIndex, int size);"
              }
            ]
          },
          {
            "declaration": {
              "id": 3,
              "content": "static final class CallerClassFinder extends AbstractStackWalker<Integer, ClassFrameInfo> {"
            },
            "methods": [
              {
                "id": 22,
                "content": "protected int batchSize(int lastBatchSize);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 4,
            "content": "protected final int mode;"
          },
          {
            "id": 5,
            "content": "protected abstract int batchSize(int lastBatchSize);"
          },
          {
            "id": 23,
            "content": "abstract void resize(int size);"
          },
          {
            "id": 24,
            "content": "final int currentBatchSize();"
          },
          {
            "id": 25,
            "content": "final int numFrames();"
          },
          {
            "id": 26,
            "content": "final boolean isFull();"
          },
          {
            "id": 27,
            "content": "final void setBatch(int depth, int startIndex, int numFrames);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/Byte.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static final class ByteCache {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/Short.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static final class ShortCache {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/Long.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static final class LongCache {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/Class.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static Class<?> forPrimitiveName(String primitiveName);"
          },
          {
            "id": 1,
            "content": "Method findMethod(boolean publicOnly, String name, Class<?>... parameterTypes);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/String.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "boolean bytesCompatible(Charset charset);"
          },
          {
            "id": 1,
            "content": "void copyToSegmentRaw(MemorySegment segment, long offset);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/Character.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static final class CharacterCache {"
            },
            "methods": []
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "public static final UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_I;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/StackWalker.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "RETAIN_CLASS_REFERENCE, DROP_METHOD_INFO, SHOW_REFLECT_FRAMES, SHOW_HIDDEN_FRAMES"
          },
          {
            "id": 1,
            "content": "static StackWalker newInstance(Set<Option> options, ContinuationScope contScope);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/Thread.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Hidden"
          },
          {
            "id": 1,
            "content": "@ForceInline"
          },
          {
            "id": 2,
            "content": "final void runWith(Object bindings, Runnable op);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/invoke/MethodHandles.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "MethodHandle serializableConstructor(Class<?> decl, Constructor<?> c) throws IllegalAccessException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/reflect/ReflectAccess.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Class<?>[] getExecutableSharedExceptionTypes(Executable ex);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/nio/file/Path.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "default Path resolve(Path first, Path... more);"
          },
          {
            "id": 1,
            "content": "default Path resolve(String first, String... more);"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/nio/charset/Charset.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/text/DateFormatSymbols.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/text/MessageFormat.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/text/RuleBasedCollator.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/text/ChoiceFormat.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@Override"
          },
          {
            "id": 5,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/text/ParsePosition.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/text/AttributedString.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/text/FieldPosition.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/javax/crypto/CryptoAllPermission.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/javax/crypto/CryptoPermission.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/javax/crypto/CryptoPolicyParser.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/javax/crypto/spec/SecretKeySpec.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/javax/crypto/spec/RC2ParameterSpec.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/javax/crypto/spec/RC5ParameterSpec.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/javax/security/auth/Subject.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/javax/security/auth/PrivateCredentialPermission.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/javax/security/auth/x500/X500Principal.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/javax/security/cert/Certificate.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public boolean equals(@Nullable Object obj);"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/com/sun/crypto/provider/PBEKey.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "public boolean isDestroyed();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/com/sun/crypto/provider/PBKDF2KeyImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/com/sun/crypto/provider/DHPrivateKey.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/com/sun/crypto/provider/DHPublicKey.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/com/sun/crypto/provider/DESedeKey.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/com/sun/crypto/provider/DESKey.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.net.http/share/classes/jdk/internal/net/http/ConnectionPool.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "void returnToPool(HttpConnection conn, Deadline now, long keepAlive);"
          },
          {
            "id": 1,
            "content": "long purgeExpiredConnectionsAndReturnNextDeadline(Deadline now);"
          },
          {
            "id": 2,
            "content": "Optional<Deadline> nextExpiryDeadline();"
          },
          {
            "id": 3,
            "content": "void add(HttpConnection conn, Deadline now, long keepAlive);"
          },
          {
            "id": 4,
            "content": "List<HttpConnection> purgeUntil(Deadline now);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.naming/share/classes/com/sun/jndi/ldap/pool/ConnectionDesc.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "boolean release();"
          },
          {
            "id": 1,
            "content": "PooledConnection tryUse();"
          },
          {
            "id": 2,
            "content": "boolean expire(long threshold);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/ClassWriter.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class ClassWriter extends SubWriterHolderWriter {"
            },
            "methods": [
              {
                "id": 2,
                "content": "protected final TypeElement typeElement;"
              },
              {
                "id": 3,
                "content": "protected final ClassTree classTree;"
              },
              {
                "id": 4,
                "content": "protected final PropertyUtils.PropertyHelper pHelper;"
              },
              {
                "id": 5,
                "content": "public ClassWriter(HtmlConfiguration configuration, TypeElement typeElement, ClassTree classTree) {"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "public PropertyUtils.PropertyHelper getPropertyHelper();"
              },
              {
                "id": 8,
                "content": "@Override"
              },
              {
                "id": 9,
                "content": "public void buildPage() throws DocletException;"
              },
              {
                "id": 10,
                "content": "protected void buildClassDoc() throws DocletException;"
              },
              {
                "id": 11,
                "content": "protected void buildClassTree(Content classContent);"
              },
              {
                "id": 12,
                "content": "protected void buildClassInfo(Content target);"
              },
              {
                "id": 13,
                "content": "protected void buildParamInfo(Content target);"
              },
              {
                "id": 14,
                "content": "protected void buildSuperInterfacesInfo(Content target);"
              },
              {
                "id": 15,
                "content": "protected void buildImplementedInterfacesInfo(Content target);"
              },
              {
                "id": 16,
                "content": "protected void buildSubClassInfo(Content target);"
              },
              {
                "id": 17,
                "content": "protected void buildSubInterfacesInfo(Content target);"
              },
              {
                "id": 18,
                "content": "protected void buildInterfaceUsageInfo(Content target);"
              },
              {
                "id": 19,
                "content": "protected void buildFunctionalInterfaceInfo(Content target);"
              },
              {
                "id": 20,
                "content": "protected void buildDeprecationInfo(Content target);"
              },
              {
                "id": 21,
                "content": "protected void buildNestedClassInfo(Content target);"
              },
              {
                "id": 22,
                "content": "protected void buildClassSignature(Content target);"
              },
              {
                "id": 23,
                "content": "protected void buildClassDescription(Content target);"
              },
              {
                "id": 24,
                "content": "protected void buildClassTagInfo(Content target);"
              },
              {
                "id": 25,
                "content": "protected void buildMemberSummary(Content classContent);"
              },
              {
                "id": 26,
                "content": "protected void buildMemberDetails(Content classContent);"
              },
              {
                "id": 27,
                "content": "protected Content getHeader(String header);"
              },
              {
                "id": 28,
                "content": "protected Content getClassContentHeader();"
              },
              {
                "id": 29,
                "content": "@Override"
              },
              {
                "id": 30,
                "content": "protected Navigation getNavBar(PageMode pageMode, Element element);"
              },
              {
                "id": 31,
                "content": "protected void addFooter();"
              },
              {
                "id": 32,
                "content": "protected void printDocument(Content content) throws DocFileIOException;"
              },
              {
                "id": 33,
                "content": "protected Content getClassInfo(Content classInfo);"
              },
              {
                "id": 34,
                "content": "@Override"
              },
              {
                "id": 35,
                "content": "public TypeElement getCurrentPageElement();"
              },
              {
                "id": 36,
                "content": "protected void addClassSignature(Content classInfo);"
              },
              {
                "id": 37,
                "content": "protected void addClassDescription(Content classInfo);"
              },
              {
                "id": 38,
                "content": "protected void addClassTagInfo(Content classInfo);"
              },
              {
                "id": 39,
                "content": "protected void addClassTree(Content target);"
              },
              {
                "id": 40,
                "content": "protected void addParamInfo(Content target);"
              },
              {
                "id": 41,
                "content": "protected void addSubClassInfo(Content target);"
              },
              {
                "id": 42,
                "content": "protected void addSubInterfacesInfo(Content target);"
              },
              {
                "id": 43,
                "content": "protected void addInterfaceUsageInfo(Content target);"
              },
              {
                "id": 44,
                "content": "protected void addImplementedInterfacesInfo(Content target);"
              },
              {
                "id": 45,
                "content": "protected void addSuperInterfacesInfo(Content target);"
              },
              {
                "id": 46,
                "content": "protected void addNestedClassInfo(final Content target);"
              },
              {
                "id": 47,
                "content": "protected void addFunctionalInterfaceInfo(Content target);"
              },
              {
                "id": 48,
                "content": "protected void addClassDeprecationInfo(Content classInfo);"
              },
              {
                "id": 49,
                "content": "public TypeElement getTypeElement();"
              },
              {
                "id": 50,
                "content": "protected Content getMemberDetails(Content content);"
              },
              {
                "id": 51,
                "content": "@Override"
              },
              {
                "id": 52,
                "content": "public boolean isIndexable();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.javadoc.internal.doclets.formats.html;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlDocletWriter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public abstract class HtmlDocletWriter {"
            },
            "methods": [
              {
                "id": 1,
                "content": "public final Messages messages;"
              },
              {
                "id": 2,
                "content": "public final Links links;"
              },
              {
                "id": 3,
                "content": "public final Map<String, Integer> indexAnchorTable;"
              },
              {
                "id": 4,
                "content": "protected HtmlDocletWriter(HtmlConfiguration configuration, DocPath path, boolean generating) {"
              },
              {
                "id": 5,
                "content": "public abstract void buildPage() throws DocletException;"
              },
              {
                "id": 6,
                "content": "protected final void writeGenerating();"
              },
              {
                "id": 7,
                "content": "public TagletWriter getTagletWriterInstance(TagletWriter.Context context);"
              },
              {
                "id": 8,
                "content": "public boolean isIndexable();"
              },
              {
                "id": 9,
                "content": "protected Content getHeader(Navigation.PageMode pageMode);"
              },
              {
                "id": 10,
                "content": "protected Content getHeader(Navigation.PageMode pageMode, Element element);"
              },
              {
                "id": 11,
                "content": "public TypeElement getCurrentPageElement();"
              },
              {
                "id": 12,
                "content": "public Content commentTagsToContent(Element element, List<? extends DocTree> trees, TagletWriter.Context context);"
              },
              {
                "id": 13,
                "content": "public Content invalidTagOutput(String summary, Optional<Content> detail);"
              },
              {
                "id": 14,
                "content": "public void addRestrictedSummary(Element forWhat, Content target);"
              },
              {
                "id": 15,
                "content": "public void addRestrictedInfo(ExecutableElement forWhat, Content target);"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/ModuleWriter.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class ModuleWriter extends HtmlDocletWriter {"
            },
            "methods": [
              {
                "id": 3,
                "content": "protected ModuleElement mdle;"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "static class PackageEntry {"
            },
            "methods": [
              {
                "id": 4,
                "content": "public ModuleWriter(HtmlConfiguration configuration, ModuleElement mdle) {"
              },
              {
                "id": 5,
                "content": "@Override"
              },
              {
                "id": 6,
                "content": "public void buildPage() throws DocletException;"
              },
              {
                "id": 7,
                "content": "protected void buildModuleDoc() throws DocletException;"
              },
              {
                "id": 8,
                "content": "protected void buildContent();"
              },
              {
                "id": 9,
                "content": "protected void buildSummary(Content target);"
              },
              {
                "id": 10,
                "content": "protected void buildModulesSummary(Content summariesList);"
              },
              {
                "id": 11,
                "content": "protected void buildPackagesSummary(Content summariesList);"
              },
              {
                "id": 12,
                "content": "protected void buildServicesSummary(Content summariesList);"
              },
              {
                "id": 13,
                "content": "protected void buildModuleDescription(Content moduleContent);"
              },
              {
                "id": 14,
                "content": "protected Content getModuleHeader(String heading);"
              },
              {
                "id": 15,
                "content": "@Override"
              },
              {
                "id": 16,
                "content": "protected Navigation getNavBar(PageMode pageMode, Element element);"
              },
              {
                "id": 17,
                "content": "protected Content getContentHeader();"
              },
              {
                "id": 18,
                "content": "protected Content getSummariesList();"
              },
              {
                "id": 19,
                "content": "protected Content getSummary(Content source);"
              },
              {
                "id": 20,
                "content": "public void computeModulesData();"
              },
              {
                "id": 21,
                "content": "public boolean shouldDocument(Element element);"
              },
              {
                "id": 22,
                "content": "public boolean display(Set<? extends Element> section);"
              },
              {
                "id": 23,
                "content": "public boolean display(Map<? extends Element, ?> section);"
              },
              {
                "id": 24,
                "content": "public void addSummaryHeader(Content startMarker, Content heading, Content target);"
              },
              {
                "id": 25,
                "content": "protected void addModulesSummary(Content summariesList);"
              },
              {
                "id": 26,
                "content": "protected void addPackagesSummary(Content summariesList);"
              },
              {
                "id": 27,
                "content": "public void addPackageSummary(HtmlTree li);"
              },
              {
                "id": 28,
                "content": "public void addIndirectPackages(Table<?> table, Map<ModuleElement, SortedSet<PackageElement>> ip);"
              },
              {
                "id": 29,
                "content": "protected void addServicesSummary(Content summariesList);"
              },
              {
                "id": 30,
                "content": "public void addUsesList(Table<?> table);"
              },
              {
                "id": 31,
                "content": "public void addProvidesList(Table<?> table);"
              },
              {
                "id": 32,
                "content": "public void addDeprecationInfo(Content div);"
              },
              {
                "id": 33,
                "content": "protected void addModuleDescription(Content moduleContent);"
              },
              {
                "id": 34,
                "content": "protected void addModuleSignature(Content moduleContent);"
              },
              {
                "id": 35,
                "content": "protected void addModuleContent(Content source);"
              },
              {
                "id": 36,
                "content": "protected void addModuleFooter();"
              },
              {
                "id": 37,
                "content": "protected void printDocument(Content content) throws DocFileIOException;"
              },
              {
                "id": 38,
                "content": "public void addPackageDeprecationInfo(Content li, PackageElement pkg);"
              },
              {
                "id": 39,
                "content": "@Override"
              },
              {
                "id": 40,
                "content": "public boolean isIndexable();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 2,
            "content": "package jdk.javadoc.internal.doclets.formats.html;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/TreeWriter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public TreeWriter(HtmlConfiguration configuration, ClassTree classTree) {"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "public void buildPage() throws DocFileIOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/Content.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public abstract class Content {"
            },
            "methods": [
              {
                "id": 2,
                "content": "@Override"
              },
              {
                "id": 3,
                "content": "public String toString();"
              },
              {
                "id": 4,
                "content": "public Content add(Content content);"
              },
              {
                "id": 5,
                "content": "public Content add(CharSequence stringContent);"
              },
              {
                "id": 6,
                "content": "public <T> Content addAll(Collection<T> items, Function<T, Content> mapper);"
              },
              {
                "id": 7,
                "content": "public abstract boolean write(Writer writer, String newline, boolean atNewline) throws IOException;"
              },
              {
                "id": 8,
                "content": "public abstract boolean isEmpty();"
              },
              {
                "id": 9,
                "content": "@Pure"
              },
              {
                "id": 10,
                "content": "public boolean isDiscardable();"
              },
              {
                "id": 11,
                "content": "public int charCount();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.javadoc.internal.doclets.formats.html;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlConfiguration.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public HtmlIndexBuilder indexBuilder;"
          },
          {
            "id": 1,
            "content": "protected RestrictedAPIListBuilder restrictedAPIListBuilder;"
          },
          {
            "id": 2,
            "content": "public final Messages messages;"
          },
          {
            "id": 3,
            "content": "public TagletManager tagletManager;"
          },
          {
            "id": 4,
            "content": "RESTRICTED,"
          },
          {
            "id": 5,
            "content": "@Override"
          },
          {
            "id": 6,
            "content": "public Set<PackageElement> getContainingPackagesSeen();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/taglets/BaseTaglet.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class BaseTaglet implements Taglet {"
            },
            "methods": [
              {
                "id": 2,
                "content": "protected final HtmlConfiguration config;"
              },
              {
                "id": 3,
                "content": "protected final Messages messages;"
              },
              {
                "id": 4,
                "content": "protected final Resources resources;"
              },
              {
                "id": 5,
                "content": "protected final Utils utils;"
              },
              {
                "id": 6,
                "content": "protected final DocTree.Kind tagKind;"
              },
              {
                "id": 7,
                "content": "protected final String name;"
              },
              {
                "id": 8,
                "content": "protected TagletWriter tagletWriter;"
              },
              {
                "id": 9,
                "content": "public BaseTaglet(HtmlConfiguration config, DocTree.Kind tagKind, boolean inline, Set<Location> sites) {"
              },
              {
                "id": 10,
                "content": "protected BaseTaglet(HtmlConfiguration config, String name, boolean inline, Set<Location> sites) {"
              },
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "public Set<Location> getAllowedLocations();"
              },
              {
                "id": 13,
                "content": "@Override"
              },
              {
                "id": 14,
                "content": "@Pure"
              },
              {
                "id": 15,
                "content": "public final boolean isInlineTag();"
              },
              {
                "id": 16,
                "content": "@Override"
              },
              {
                "id": 17,
                "content": "public String getName();"
              },
              {
                "id": 18,
                "content": "public DocTree.Kind getTagKind();"
              },
              {
                "id": 19,
                "content": "@Override"
              },
              {
                "id": 20,
                "content": "public Content getInlineTagOutput(Element element, DocTree tag, TagletWriter tagletWriter);"
              },
              {
                "id": 21,
                "content": "@Override"
              },
              {
                "id": 22,
                "content": "public Content getAllBlockTagOutput(Element holder, TagletWriter tagletWriter);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.javadoc.internal.doclets.formats.html.taglets;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/taglets/UserTaglet.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class UserTaglet implements Taglet {"
            },
            "methods": [
              {
                "id": 2,
                "content": "@Override"
              },
              {
                "id": 3,
                "content": "public Set<jdk.javadoc.doclet.Taglet.Location> getAllowedLocations();"
              },
              {
                "id": 4,
                "content": "@Override"
              },
              {
                "id": 5,
                "content": "@Pure"
              },
              {
                "id": 6,
                "content": "public boolean isInlineTag();"
              },
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "public boolean isBlockTag();"
              },
              {
                "id": 9,
                "content": "@Override"
              },
              {
                "id": 10,
                "content": "public String getName();"
              },
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "public Content getInlineTagOutput(Element element, DocTree tag, TagletWriter tagletWriter);"
              },
              {
                "id": 13,
                "content": "@Override"
              },
              {
                "id": 14,
                "content": "public Content getAllBlockTagOutput(Element holder, TagletWriter tagletWriter);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.javadoc.internal.doclets.formats.html.taglets;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/taglets/TagletManager.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class TagletManager {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public TagletManager(HtmlConfiguration config) {"
              },
              {
                "id": 3,
                "content": "public Set<String> getAllTagletNames();"
              },
              {
                "id": 4,
                "content": "public void initTagletPath(JavaFileManager fileManager) throws IOException;"
              },
              {
                "id": 5,
                "content": "public void addCustomTag(String classname, JavaFileManager fileManager);"
              },
              {
                "id": 6,
                "content": "public void loadTaglets(JavaFileManager fileManager) throws IOException;"
              },
              {
                "id": 7,
                "content": "public void addNewSimpleCustomTag(String tagName, String header, String locations);"
              },
              {
                "id": 8,
                "content": "void seenTag(String name);"
              },
              {
                "id": 9,
                "content": "public void checkTags(Element element, Iterable<? extends DocTree> trees);"
              },
              {
                "id": 10,
                "content": "Map<String, Taglet> getInlineTaglets();"
              },
              {
                "id": 11,
                "content": "public List<Taglet> getSerializedFormTaglets();"
              },
              {
                "id": 12,
                "content": "@SuppressWarnings(\"fallthrough\")"
              },
              {
                "id": 13,
                "content": "public List<Taglet> getBlockTaglets(Element e);"
              },
              {
                "id": 14,
                "content": "@Pure"
              },
              {
                "id": 15,
                "content": "public boolean isKnownCustomTag(String tagName);"
              },
              {
                "id": 16,
                "content": "public void printReport();"
              },
              {
                "id": 17,
                "content": "Taglet getTaglet(String name);"
              },
              {
                "id": 18,
                "content": "public Taglet getTaglet(DocTree.Kind kind);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.javadoc.internal.doclets.formats.html.taglets;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/taglets/SimpleTaglet.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class SimpleTaglet extends BaseTaglet implements InheritableTaglet {"
            },
            "methods": [
              {
                "id": 2,
                "content": "protected SimpleTaglet(HtmlConfiguration config, DocTree.Kind tagKind, String header, Set<Taglet.Location> locations, boolean enabled) {"
              },
              {
                "id": 3,
                "content": "@Override"
              },
              {
                "id": 4,
                "content": "public Output inherit(Element dst, Element src, DocTree tag, boolean isFirstSentence);"
              },
              {
                "id": 5,
                "content": "boolean isEnabled();"
              },
              {
                "id": 6,
                "content": "record Documentation(DocTree tag, List<? extends DocTree> description, ExecutableElement method) {"
              },
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "public Content getAllBlockTagOutput(Element holder, TagletWriter tagletWriter);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.javadoc.internal.doclets.formats.html.taglets;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/WorkArounds.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean isRestrictedAPI(Element el);"
          },
          {
            "id": 1,
            "content": "public static boolean isImplicitlyDeclaredClass(Element e);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/PropertyUtils.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public static class PropertyHelper {"
            },
            "methods": [
              {
                "id": 1,
                "content": "public PropertyHelper(BaseConfiguration configuration, TypeElement typeElement) {"
              },
              {
                "id": 2,
                "content": "public Element getPropertyElement(Element element);"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/CommentHelper.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public R visitInheritDoc(InheritDocTree node, Void p);"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/Utils.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private class Overrides implements Iterator<ExecutableElement> {"
            },
            "methods": [
              {
                "id": 10,
                "content": "public Overrides(ExecutableElement method) {"
              },
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "public boolean hasNext();"
              },
              {
                "id": 13,
                "content": "@Override"
              },
              {
                "id": 14,
                "content": "public ExecutableElement next();"
              },
              {
                "id": 15,
                "content": "public static String diagnosticDescriptionOf(Element e);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "public boolean isFunctionalInterface(TypeElement typeElement);"
          },
          {
            "id": 2,
            "content": "@Pure"
          },
          {
            "id": 3,
            "content": "public List<? extends BlockTagTree> getBlockTags(Element element, Predicate<? super BlockTagTree> filter);"
          },
          {
            "id": 4,
            "content": "public <T extends BlockTagTree> List<T> getBlockTags(Element element, Predicate<? super BlockTagTree> filter, Class<T> tClass);"
          },
          {
            "id": 5,
            "content": "public List<? extends BlockTagTree> getBlockTags(Element element, DocTree.Kind kind);"
          },
          {
            "id": 6,
            "content": "public <T extends BlockTagTree> List<? extends T> getBlockTags(Element element, DocTree.Kind kind, Class<T> tClass);"
          },
          {
            "id": 7,
            "content": "public List<? extends BlockTagTree> getBlockTags(Element element, String tagName);"
          },
          {
            "id": 8,
            "content": "public boolean isRestrictedAPI(Element el);"
          },
          {
            "id": 9,
            "content": "DEPRECATED, PREVIEW, RESTRICTED"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/ElementsTable.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public AccessLevel getAccessValue(ElementKind kind);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.desktop/share/classes/javax/swing/UIDefaults.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "String composeKey(String key, int reduce, String suffix);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.desktop/share/classes/javax/swing/JFileChooser.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@BeanProperty(expert = true, description = \"Sets the FileSystemView used to get filesystem information.\")"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "public void setEnabled(boolean enabled);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/org/jcp/xml/dsig/internal/dom/DOMReference.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@Override"
          },
          {
            "id": 5,
            "content": "@Override"
          },
          {
            "id": 6,
            "content": "@Override"
          },
          {
            "id": 7,
            "content": "@Override"
          },
          {
            "id": 8,
            "content": "@Override"
          },
          {
            "id": 9,
            "content": "@Override"
          },
          {
            "id": 10,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/org/jcp/xml/dsig/internal/dom/DOMSignatureProperty.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/org/jcp/xml/dsig/internal/dom/DOMRetrievalMethod.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/org/jcp/xml/dsig/internal/dom/DOMKeyValue.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/org/jcp/xml/dsig/internal/dom/DOMTransform.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/org/jcp/xml/dsig/internal/dom/DOMKeyInfo.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/org/jcp/xml/dsig/internal/dom/DOMDigestMethod.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@Override"
          },
          {
            "id": 5,
            "content": "@Override"
          },
          {
            "id": 6,
            "content": "@Override"
          },
          {
            "id": 7,
            "content": "@Override"
          },
          {
            "id": 8,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/org/jcp/xml/dsig/internal/dom/DOMX509IssuerSerial.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/org/jcp/xml/dsig/internal/dom/DOMXMLSignature.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@Override"
          },
          {
            "id": 5,
            "content": "@Override"
          },
          {
            "id": 6,
            "content": "@Override"
          },
          {
            "id": 7,
            "content": "@Override"
          },
          {
            "id": 8,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/org/jcp/xml/dsig/internal/dom/DOMKeyName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/org/jcp/xml/dsig/internal/dom/DOMSubTreeData.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/org/jcp/xml/dsig/internal/dom/DOMSignedInfo.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/org/jcp/xml/dsig/internal/dom/DOMSignatureProperties.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/org/jcp/xml/dsig/internal/dom/DOMXMLObject.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/org/jcp/xml/dsig/internal/dom/DOMX509Data.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/org/jcp/xml/dsig/internal/dom/DOMManifest.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/com/sun/org/apache/xml/internal/security/signature/Reference.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/com/sun/org/apache/xml/internal/security/signature/reference/ReferenceSubTreeData.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/com/sun/org/apache/xml/internal/security/utils/DigesterOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "public synchronized void write(int arg0);"
          },
          {
            "id": 3,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/com/sun/org/apache/xml/internal/security/utils/SignerOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/com/sun/org/apache/xml/internal/security/utils/UnsyncByteArrayOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/com/sun/org/apache/xml/internal/security/keys/KeyInfo.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/com/sun/org/apache/xml/internal/security/keys/keyresolver/KeyResolver.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/com/sun/org/apache/xml/internal/security/keys/content/X509Data.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/com/sun/org/apache/xml/internal/security/keys/content/x509/XMLX509Certificate.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/com/sun/org/apache/xml/internal/security/keys/content/x509/XMLX509SubjectName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/com/sun/org/apache/xml/internal/security/keys/content/x509/XMLX509SKI.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/com/sun/org/apache/xml/internal/security/keys/content/x509/XMLX509IssuerSerial.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/com/sun/org/apache/xml/internal/security/keys/storage/StorageResolver.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/com/sun/org/apache/xml/internal/security/keys/storage/implementations/KeyStoreResolver.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/com/sun/org/apache/xml/internal/security/keys/storage/implementations/SingleCertificateResolver.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/VMIntrinsicMethod.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public final boolean isAvailable;"
          },
          {
            "id": 1,
            "content": "public final boolean c1Supported;"
          },
          {
            "id": 2,
            "content": "public final boolean c2Supported;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public BitSet getOopMapAt(int bci);"
          }
        ]
      }
    }
  },
  "jdk-23": {
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.jfr/share/classes/jdk/jfr/internal/Type.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void setFields(List<ValueDescriptor> fields);"
          },
          {
            "id": 1,
            "content": "public <T> T getAnnotationValue(Class<? extends java.lang.annotation.Annotation> clazz, T defaultValue);"
          },
          {
            "id": 2,
            "content": "public boolean hasAnnotation(Class<? extends java.lang.annotation.Annotation> clazz);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.compiler/share/classes/javax/lang/model/util/Elements.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "default DocCommentKind getDocCommentKind(Element e);"
          },
          {
            "id": 1,
            "content": "enum DocCommentKind {"
          },
          {
            "id": 2,
            "content": "END_OF_LINE, TRADITIONAL"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.compiler/share/classes/javax/lang/model/util/Types.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "default <T extends TypeMirror> T stripAnnotations(T t);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.compiler/share/classes/com/sun/tools/javac/tree/TreeInfo.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static boolean isExplicitThisReference(Types types, Type.ClassType currentClass, JCTree tree);"
          },
          {
            "id": 1,
            "content": "public static boolean isConstructorCall(JCMethodInvocation invoke);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Symbol.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "private record PermittedClassWithPos(Symbol permittedClass, int pos) {"
          },
          {
            "id": 1,
            "content": "public void addPermittedSubclass(ClassSymbol csym, int pos);"
          },
          {
            "id": 2,
            "content": "public boolean isPermittedSubclass(Symbol csym);"
          },
          {
            "id": 3,
            "content": "public void clearPermittedSubclasses();"
          },
          {
            "id": 4,
            "content": "public void setPermittedSubclasses(List<Symbol> permittedSubs);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Types.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean isUnconditionallyExact(Type source, Type target);"
          },
          {
            "id": 1,
            "content": "public boolean isUnconditionallyExactPrimitives(Type selectorType, Type targetType);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Resolve.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "Symbol findVar(DiagnosticPosition pos, Env<AttrContext> env, Name name);"
          },
          {
            "id": 1,
            "content": "Symbol findIdentInternal(DiagnosticPosition pos, Env<AttrContext> env, Name name, KindSelector kind);"
          },
          {
            "id": 2,
            "content": "public boolean isEarlyReference(Env<AttrContext> env, JCTree base, VarSymbol v);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.compiler/share/classes/com/sun/tools/javac/model/JavacTypes.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@DefinedBy(Api.LANGUAGE_MODEL)"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"unchecked\")"
          },
          {
            "id": 2,
            "content": "public <T extends TypeMirror> T stripAnnotations(T t);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/P11Key.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private abstract static class P11PrivateKey extends P11Key implements PrivateKey {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "private abstract static class P11PublicKey extends P11Key implements PublicKey {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/net/www/MessageHeader.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public final class MessageHeader {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/util/calendar/CalendarDate.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public abstract sealed class CalendarDate implements Cloneable permits BaseCalendar.Date {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/util/locale/BaseLocale.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static final byte ROOT, ENGLISH, US, FRENCH, GERMAN, ITALIAN, JAPANESE, KOREAN, CHINESE, SIMPLIFIED_CHINESE, TRADITIONAL_CHINESE, FRANCE, GERMANY, ITALY, JAPAN, KOREA, UK, CANADA, CANADA_FRENCH, NUM_CONSTANTS;"
          },
          {
            "id": 1,
            "content": "public static final UnaryOperator<BaseLocale> INTERNER;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/security/util/BitArray.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/security/util/DerValue.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/security/x509/GeneralSubtrees.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/security/x509/GeneralNames.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/security/x509/RFC822Name.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/security/x509/AlgorithmId.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/security/jca/ProviderList.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private final class ServiceIterator implements Iterator<Service> {"
            },
            "methods": [
              {
                "id": 3,
                "content": "@Override"
              },
              {
                "id": 4,
                "content": "public boolean hasNext();"
              },
              {
                "id": 5,
                "content": "@Override"
              },
              {
                "id": 6,
                "content": "public Service next();"
              },
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "public void remove();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "public Iterator<Service> getServices(String type, String algorithm);"
          },
          {
            "id": 2,
            "content": "public Iterator<Service> getServices(List<ServiceId> ids);"
          },
          {
            "id": 9,
            "content": "ArrayList<PreferredEntry> getAll(ServiceIterator s);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/nio/ch/FileChannelImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private abstract static sealed class Unmapper implements Runnable, UnmapperProxy {"
            },
            "methods": []
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "public static FileChannel open(FileDescriptor fd, String path, boolean readable, boolean writable, boolean sync, boolean direct, Closeable parent);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/net/MulticastSocket.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Deprecated()"
          },
          {
            "id": 1,
            "content": "@Deprecated()"
          },
          {
            "id": 2,
            "content": "@Deprecated()"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/net/Inet4Address.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static Inet4Address ofPosixLiteral(String posixIPAddressLiteral);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/net/DatagramSocketImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Deprecated()"
          },
          {
            "id": 1,
            "content": "@Deprecated()"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/net/Socket.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 2,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 3,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 4,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 5,
            "content": "@Deprecated()"
          },
          {
            "id": 6,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 7,
            "content": "@Deprecated()"
          },
          {
            "id": 8,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/net/ServerSocket.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/TreeMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/LinkedList.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/EnumMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/LinkedHashMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/IdentityHashMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/HashMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/ImmutableCollections.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public E removeFirst();"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "public E removeLast();"
          },
          {
            "id": 3,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/SimpleTimeZone.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/WeakHashMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/ArrayDeque.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/Timer.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/Random.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/Formatter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "static final class FormatSpecifierParser {"
            },
            "methods": [
              {
                "id": 1,
                "content": "void reset(char first, int start);"
              },
              {
                "id": 2,
                "content": "int parse();"
              },
              {
                "id": 3,
                "content": "static boolean isConversion(char c);"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/GregorianCalendar.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 2,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 3,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 4,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 5,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/HashSet.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/Hashtable.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/LinkedHashSet.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/TreeSet.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/jar/Manifest.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/jar/JarOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/jar/JarInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/zip/Inflater.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@Deprecated()"
          },
          {
            "id": 2,
            "content": "@Deprecated()"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/zip/Deflater.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@Deprecated()"
          },
          {
            "id": 2,
            "content": "@Deprecated()"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/zip/ZipFile.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "public String toString();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/concurrent/ForkJoinPool.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "final ForkJoinTask<?> poll();"
          },
          {
            "id": 1,
            "content": "final void topLevelExec(ForkJoinTask<?> task, int cfg);"
          },
          {
            "id": 2,
            "content": "final void signalWork();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/concurrent/ConcurrentHashMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/concurrent/ConcurrentSkipListSet.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/concurrent/DelayQueue.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/concurrent/ConcurrentSkipListMap.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/concurrent/ForkJoinTask.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "abstract static class InterruptibleTask<T> extends ForkJoinTask<T> implements RunnableFuture<T> {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/concurrent/AbstractExecutorService.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@Override"
          },
          {
            "id": 5,
            "content": "@Override"
          },
          {
            "id": 6,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/concurrent/LinkedBlockingDeque.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/security/DigestOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/security/DigestInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/security/Provider.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/security/cert/PKIXParameters.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/PrintStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 2,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 3,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/ObjectInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/ObjectOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@Deprecated()"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/FileOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/FileInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/OutputStreamWriter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 2,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 3,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/InputStreamReader.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 2,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 3,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/PipedReader.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/RandomAccessFile.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/StreamTokenizer.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/WriteAbortedException.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/PipedInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/PipedWriter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/Console.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.IMPLICIT_CLASSES)"
          },
          {
            "id": 1,
            "content": "public Console println(Object obj);"
          },
          {
            "id": 2,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.IMPLICIT_CLASSES)"
          },
          {
            "id": 3,
            "content": "public Console print(Object obj);"
          },
          {
            "id": 4,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.IMPLICIT_CLASSES)"
          },
          {
            "id": 5,
            "content": "public String readln(String prompt);"
          },
          {
            "id": 6,
            "content": "public Console format(String format, @Nullable Object... args);"
          },
          {
            "id": 7,
            "content": "@FormatMethod"
          },
          {
            "id": 8,
            "content": "public Console format(Locale locale, String format, @Nullable Object... args);"
          },
          {
            "id": 9,
            "content": "public Console printf(Locale locale, String format, Object... args);"
          },
          {
            "id": 10,
            "content": "public String readLine(String format, @Nullable Object... args);"
          },
          {
            "id": 11,
            "content": "@Nullable"
          },
          {
            "id": 12,
            "content": "public String readLine(Locale locale, String format, @Nullable Object... args);"
          },
          {
            "id": 13,
            "content": "public char @Nullable [] readPassword(String format, @Nullable Object... args);"
          },
          {
            "id": 14,
            "content": "public char @Nullable [] readPassword(Locale locale, String format, @Nullable Object... args);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/ByteArrayOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void writeTo(OutputStream out) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/PipedOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/math/BigInteger.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/time/Instant.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Duration until(Instant endExclusive);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/System.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class In extends FileInputStream {"
            },
            "methods": [
              {
                "id": 2,
                "content": "@Override"
              },
              {
                "id": 3,
                "content": "public int read() throws IOException;"
              },
              {
                "id": 4,
                "content": "@Override"
              },
              {
                "id": 5,
                "content": "public int read(byte[] b) throws IOException;"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "public int read(byte[] b, int off, int len) throws IOException;"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "private static class Out extends FileOutputStream {"
            },
            "methods": [
              {
                "id": 8,
                "content": "public void write(int b) throws IOException;"
              },
              {
                "id": 9,
                "content": "@Override"
              },
              {
                "id": 10,
                "content": "public void write(byte[] b) throws IOException;"
              },
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "public void write(byte[] b, int off, int len) throws IOException;"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/StringBuilder.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@IntrinsicCandidate"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/AssertionError.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/StringBuffer.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@IntrinsicCandidate"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/Process.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "static class PipeOutputStream extends FileOutputStream {"
            },
            "methods": [
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "public void write(int b) throws IOException;"
              },
              {
                "id": 9,
                "content": "@Override"
              },
              {
                "id": 10,
                "content": "public void write(byte[] b) throws IOException;"
              },
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "public void write(byte[] b, int off, int len) throws IOException;"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "public int read() throws IOException;"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "public int read(byte[] b) throws IOException;"
          },
          {
            "id": 5,
            "content": "@Override"
          },
          {
            "id": 6,
            "content": "public int read(byte[] b, int off, int len) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/Throwable.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 2,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 3,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 4,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/ClassLoader.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 2,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/ExceptionInInitializerError.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/ThreadGroup.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/Thread.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "Interruptible nioBlocker();"
          },
          {
            "id": 1,
            "content": "void blockedOn(Interruptible b);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/invoke/MemberName.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "void ensureTypeVisible(Class<?> refc);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/reflect/Executable.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          },
          {
            "id": 2,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/DecimalFormat.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 2,
            "content": "@SuppressWarnings(\"this-escape\")"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "public boolean isStrict();"
          },
          {
            "id": 5,
            "content": "@Override"
          },
          {
            "id": 6,
            "content": "public void setStrict(boolean strict);"
          },
          {
            "id": 7,
            "content": "@Override"
          },
          {
            "id": 8,
            "content": "public String toString();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/MessageFormat.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public String toString();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/RuleBasedCollator.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/SimpleDateFormat.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public String toString();"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/ChoiceFormat.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public boolean isStrict();"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "public void setStrict(boolean strict);"
          },
          {
            "id": 4,
            "content": "public static double nextDouble(double d, boolean positive);"
          },
          {
            "id": 5,
            "content": "public String toString();"
          },
          {
            "id": 6,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/AttributedString.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/DateFormat.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/NumberFormat.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean isStrict();"
          },
          {
            "id": 1,
            "content": "public void setStrict(boolean strict);"
          },
          {
            "id": 2,
            "content": "static String matchToStyle(NumberFormat fmt, Locale locale);"
          },
          {
            "id": 3,
            "content": "@SuppressWarnings(\"this-escape\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.httpserver/share/classes/sun/net/httpserver/UnmodifiableHeaders.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@Override"
          },
          {
            "id": 5,
            "content": "@Override"
          },
          {
            "id": 6,
            "content": "@Override"
          },
          {
            "id": 7,
            "content": "@Override"
          },
          {
            "id": 8,
            "content": "@Override"
          },
          {
            "id": 9,
            "content": "@Override"
          },
          {
            "id": 10,
            "content": "@Override"
          },
          {
            "id": 11,
            "content": "@Override"
          },
          {
            "id": 12,
            "content": "@Override"
          },
          {
            "id": 13,
            "content": "@Override"
          },
          {
            "id": 14,
            "content": "@Override"
          },
          {
            "id": 15,
            "content": "@Override"
          },
          {
            "id": 16,
            "content": "@Override"
          },
          {
            "id": 17,
            "content": "@Override"
          },
          {
            "id": 18,
            "content": "@Override"
          },
          {
            "id": 19,
            "content": "@Override"
          },
          {
            "id": 20,
            "content": "@Override"
          },
          {
            "id": 21,
            "content": "public String toString();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/code/CodeBlob.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public int getContentOffset();"
          },
          {
            "id": 1,
            "content": "public int getCodeOffset();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/gc/shared/ContiguousSpace.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class ContiguousSpace extends VMObject implements LiveRegionsProvider {"
            },
            "methods": [
              {
                "id": 1,
                "content": "public Address bottom();"
              },
              {
                "id": 2,
                "content": "public Address end();"
              },
              {
                "id": 3,
                "content": "public OopHandle bottomAsOopHandle();"
              },
              {
                "id": 4,
                "content": "public OopHandle nextOopHandle(OopHandle handle, long size);"
              },
              {
                "id": 5,
                "content": "public void print();"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlDocletWriter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private class MarkdownHandler {"
            },
            "methods": [
              {
                "id": 6,
                "content": "boolean handle(DocTree tree, InlineVisitor visitor);"
              },
              {
                "id": 7,
                "content": "void addContent(Content result);"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "private class HeadingNodeRenderer extends AbstractVisitor implements NodeRenderer {"
            },
            "methods": [
              {
                "id": 8,
                "content": "@Override"
              },
              {
                "id": 9,
                "content": "public Set<Class<? extends Node>> getNodeTypes();"
              },
              {
                "id": 10,
                "content": "@Override"
              },
              {
                "id": 11,
                "content": "public void render(Node node);"
              },
              {
                "id": 12,
                "content": "@Override"
              },
              {
                "id": 13,
                "content": "public void visit(Heading heading);"
              },
              {
                "id": 14,
                "content": "@Override"
              },
              {
                "id": 15,
                "content": "protected void visitChildren(Node parent);"
              }
            ]
          },
          {
            "declaration": {
              "id": 2,
              "content": "private class InlineVisitor extends SimpleDocTreeVisitor<Boolean, Content> {"
            },
            "methods": [
              {
                "id": 16,
                "content": "@Override"
              },
              {
                "id": 17,
                "content": "public Boolean visitAttribute(AttributeTree node, Content content);"
              },
              {
                "id": 18,
                "content": "@Override"
              },
              {
                "id": 19,
                "content": "public Boolean visitComment(CommentTree node, Content content);"
              },
              {
                "id": 20,
                "content": "@Override"
              },
              {
                "id": 21,
                "content": "public Boolean visitDocRoot(DocRootTree node, Content content);"
              },
              {
                "id": 22,
                "content": "@Override"
              },
              {
                "id": 23,
                "content": "public Boolean visitEndElement(EndElementTree node, Content content);"
              },
              {
                "id": 24,
                "content": "@Override"
              },
              {
                "id": 25,
                "content": "public Boolean visitEntity(EntityTree node, Content content);"
              },
              {
                "id": 26,
                "content": "@Override"
              },
              {
                "id": 27,
                "content": "public Boolean visitErroneous(ErroneousTree node, Content content);"
              },
              {
                "id": 28,
                "content": "@Override"
              },
              {
                "id": 29,
                "content": "public Boolean visitEscape(EscapeTree node, Content content);"
              },
              {
                "id": 30,
                "content": "@Override"
              },
              {
                "id": 31,
                "content": "public Boolean visitInheritDoc(InheritDocTree node, Content content);"
              },
              {
                "id": 32,
                "content": "@Override"
              },
              {
                "id": 33,
                "content": "public Boolean visitStartElement(StartElementTree node, Content content);"
              },
              {
                "id": 34,
                "content": "@Override"
              },
              {
                "id": 35,
                "content": "public Boolean visitText(TextTree node, Content content);"
              },
              {
                "id": 36,
                "content": "@Override"
              },
              {
                "id": 37,
                "content": "protected Boolean defaultAction(DocTree node, Content content);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 3,
            "content": "protected final TableOfContents tableOfContents;"
          },
          {
            "id": 4,
            "content": "public String getFileTitle(DocFileElement element);"
          },
          {
            "id": 5,
            "content": "boolean ignoreNonInlineTag(DocTree dtree, List<Name> openTags);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/Content.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean isPhrasingContent();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlConfiguration.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public record JavaScriptFile(DocPath path, boolean isModule) {"
          },
          {
            "id": 1,
            "content": "public List<JavaScriptFile> getAdditionalScripts();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/taglets/SimpleTaglet.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static SimpleTaglet createWithDefaultForNested(HtmlConfiguration config, DocTree.Kind tagKind, String header, Set<Taglet.Location> locations, boolean enabled);"
          },
          {
            "id": 1,
            "content": "protected List<? extends BlockTagTree> getDefaultBlockTags(Element e, Predicate<? super BlockTagTree> accepts);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/TextBuilder.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean isPhrasingContent();"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/Text.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean isPhrasingContent();"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlTree.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Map<HtmlAttr, String> getAttrs();"
          },
          {
            "id": 1,
            "content": "public List<Content> getContents();"
          },
          {
            "id": 2,
            "content": "public static HtmlTree INPUT(HtmlAttr.InputType type, HtmlId id);"
          },
          {
            "id": 3,
            "content": "public static HtmlTree INPUT(HtmlAttr.InputType type, HtmlStyle style);"
          },
          {
            "id": 4,
            "content": "public static HtmlTree OL(HtmlStyle style);"
          },
          {
            "id": 5,
            "content": "@Override"
          },
          {
            "id": 6,
            "content": "public boolean isPhrasingContent();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/RawHtml.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static RawHtml markdown(CharSequence markdownOutput);"
          },
          {
            "id": 1,
            "content": "public boolean isPhrasingContent();"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/ContentBuilder.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public List<Content> getContents();"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "public boolean isPhrasingContent();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/WorkArounds.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Map<String, Object> getJepInfo(String feature);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/BaseConfiguration.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "protected DocLint doclint;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/ElementsTable.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "ElementsTable compilationUnits(com.sun.tools.javac.util.List<JCCompilationUnit> compilationUnits);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.jlink/share/classes/jdk/tools/jlink/internal/ResourcePoolManager.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static CompressedModuleData newCompressedResource(ResourcePoolEntry original, ByteBuffer compressed, String plugin, StringTable strings, ByteOrder order);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.accessibility/windows/classes/com/sun/java/accessibility/internal/AccessBridge.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private abstract static class AccessibilityGraphicsEnvironment extends GraphicsEnvironment {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.jshell/share/classes/jdk/internal/jshell/tool/Startup.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static Startup unpack(String storedForm, boolean preview, MessageHandler mh);"
          },
          {
            "id": 1,
            "content": "static Startup defaultStartup(boolean preview, MessageHandler mh);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.desktop/share/classes/java/beans/Beans.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Deprecated()"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings({ \"deprecation\", \"removal\" })"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.desktop/share/classes/java/beans/beancontext/BeanContextChildSupport.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"removal\")"
          },
          {
            "id": 1,
            "content": "@Deprecated()"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.desktop/share/classes/javax/swing/plaf/basic/BasicSliderUI.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Deprecated()"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.desktop/share/classes/javax/swing/text/StyleContext.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "static final class KeyEnumeration implements Enumeration<Object> {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "static final class FontKey {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.desktop/share/classes/javax/swing/text/html/HTMLDocument.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "final class ConvertSpanAction extends CharacterAction {"
            },
            "methods": [
              {
                "id": 3,
                "content": "@Override"
              },
              {
                "id": 4,
                "content": "void convertAttributes(HTML.Tag t, MutableAttributeSet attr);"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "final class ConvertAction extends CharacterAction {"
            },
            "methods": [
              {
                "id": 5,
                "content": "@Override"
              },
              {
                "id": 6,
                "content": "void convertAttributes(HTML.Tag t, MutableAttributeSet attr);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 2,
            "content": "void convertAttributes(HTML.Tag t, MutableAttributeSet attr);"
          }
        ]
      }
    }
  },
  "jdk-24": {
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.management/share/classes/java/lang/management/ManagementFactory.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"doclint:reference\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.management/share/classes/javax/management/openmbean/OpenMBeanAttributeInfoSupport.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"unchecked\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"unchecked\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.xml/share/classes/com/sun/org/apache/xerces/internal/impl/xpath/regex/RegularExpression.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "boolean claim();"
          },
          {
            "id": 1,
            "content": "void release();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.xml/share/classes/com/sun/org/apache/xalan/internal/xsltc/compiler/util/ErrorMsg.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static final String UNSUPPORTED_EXT_FUNC_ERR;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.compiler/share/classes/com/sun/tools/javac/file/JavacFileManager.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public ArchiveContainer(Path archivePath) throws IOException, ProviderNotFoundException {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Type.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public ErrorType(Type originalType, TypeSymbol tsym, List<TypeMetadata> metadata) {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Symbol.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public ClassSymbol innermostAccessibleEnclosingClass();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Types.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public static class FunctionDescriptorLookupError extends CompilerInternalException {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "public abstract class SignatureGenerator {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 2,
              "content": "public class InvalidSignatureException extends CompilerInternalException {"
            },
            "methods": []
          }
        ],
        "new_methods": [
          {
            "id": 3,
            "content": "public final boolean dumpStacktraceOnError;"
          },
          {
            "id": 4,
            "content": "boolean areDisjoint(ClassSymbol csym, List<Type> permittedSubtypes);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Resolve.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public static class InapplicableMethodException extends CompilerInternalException {"
            },
            "methods": []
          },
          {
            "declaration": {
              "id": 1,
              "content": "abstract class ReferenceLookupHelper extends LookupHelper {"
            },
            "methods": [
              {
                "id": 10,
                "content": "ReferenceLookupHelper unboundLookup(InferenceContext inferenceContext);"
              },
              {
                "id": 11,
                "content": "abstract JCMemberReference.ReferenceKind referenceKind(Symbol sym);"
              },
              {
                "id": 12,
                "content": "Symbol access(Env<AttrContext> env, DiagnosticPosition pos, Symbol location, Symbol sym);"
              }
            ]
          },
          {
            "declaration": {
              "id": 2,
              "content": "class MethodReferenceLookupHelper extends ReferenceLookupHelper {"
            },
            "methods": [
              {
                "id": 13,
                "content": "@Override"
              },
              {
                "id": 14,
                "content": "@Override"
              },
              {
                "id": 15,
                "content": "ReferenceLookupHelper unboundLookup(InferenceContext inferenceContext);"
              },
              {
                "id": 16,
                "content": "@Override"
              },
              {
                "id": 17,
                "content": "ReferenceKind referenceKind(Symbol sym);"
              }
            ]
          },
          {
            "declaration": {
              "id": 3,
              "content": "class UnboundMethodReferenceLookupHelper extends MethodReferenceLookupHelper {"
            },
            "methods": [
              {
                "id": 18,
                "content": "@Override"
              }
            ]
          },
          {
            "declaration": {
              "id": 4,
              "content": "class ArrayConstructorReferenceLookupHelper extends ReferenceLookupHelper {"
            },
            "methods": [
              {
                "id": 19,
                "content": "protected Symbol lookup(Env<AttrContext> env, MethodResolutionPhase phase);"
              }
            ]
          },
          {
            "declaration": {
              "id": 5,
              "content": "class ConstructorReferenceLookupHelper extends ReferenceLookupHelper {"
            },
            "methods": [
              {
                "id": 20,
                "content": "Symbol findSelfContaining(DiagnosticPosition pos, Env<AttrContext> env, TypeSymbol c, boolean isSuper);"
              },
              {
                "id": 21,
                "content": "Symbol findLocalClassOwner(Env<AttrContext> env, TypeSymbol c);"
              }
            ]
          },
          {
            "declaration": {
              "id": 6,
              "content": "class BadLocalClassCreation extends StaticError {"
            },
            "methods": [
              {
                "id": 22,
                "content": "@Override"
              },
              {
                "id": 23,
                "content": "JCDiagnostic getDiagnostic(JCDiagnostic.DiagnosticType dkind, DiagnosticPosition pos, Symbol location, Type site, Name name, List<Type> argtypes, List<Type> typeargtypes);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 7,
            "content": "Symbol access(Env<AttrContext> env, DiagnosticPosition pos, Symbol location, Symbol sym);"
          },
          {
            "id": 8,
            "content": "@Override"
          },
          {
            "id": 9,
            "content": "void debug(DiagnosticPosition pos, Symbol sym);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.compiler/share/classes/com/sun/tools/javac/api/JavacScope.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public ScopeType getScopeType();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.logging/share/classes/java/util/logging/Handler.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public abstract void close();"
          },
          {
            "id": 1,
            "content": "public synchronized void setFormatter(Formatter newFormatter);"
          },
          {
            "id": 2,
            "content": "public synchronized void setEncoding(@Nullable String encoding) throws java.io.UnsupportedEncodingException;"
          },
          {
            "id": 3,
            "content": "public synchronized void setFilter(@Nullable Filter newFilter);"
          },
          {
            "id": 4,
            "content": "public synchronized void setErrorManager(ErrorManager em);"
          },
          {
            "id": 5,
            "content": "public synchronized void setLevel(Level newLevel);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.logging/share/classes/java/util/logging/Logger.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void setFilter(@GuardSatisfied Logger this, @Nullable Filter newFilter);"
          },
          {
            "id": 1,
            "content": "public void setLevel(@GuardSatisfied Logger this, @Nullable Level newLevel);"
          },
          {
            "id": 2,
            "content": "public void addHandler(@GuardSatisfied Logger this, Handler handler);"
          },
          {
            "id": 3,
            "content": "public void removeHandler(@GuardSatisfied Logger this, @Nullable Handler handler);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.logging/share/classes/java/util/logging/LogManager.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static final class LoggingProviderAccess implements LoggingProviderImpl.LogManagerAccess {"
            },
            "methods": []
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "public void readConfiguration() throws IOException;"
          },
          {
            "id": 2,
            "content": "String getConfigurationFileName();"
          },
          {
            "id": 3,
            "content": "public void reset();"
          },
          {
            "id": 4,
            "content": "public void readConfiguration(InputStream ins) throws IOException;"
          },
          {
            "id": 5,
            "content": "public void checkAccess();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/sun/net/www/MessageHeader.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public MessageHeader(int maxHeaderSize) {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/sun/security/ssl/SSLSessionImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "byte[] incrTicketNonceCounter();"
          },
          {
            "id": 1,
            "content": "public boolean isPSK();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/sun/nio/ch/FileChannelImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "int available() throws IOException;"
          },
          {
            "id": 1,
            "content": "boolean isOther() throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/sun/nio/ch/FileDispatcher.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "abstract int available(FileDescriptor fd) throws IOException;"
          },
          {
            "id": 1,
            "content": "abstract boolean isOther(FileDescriptor fd) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/net/URLClassLoader.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/net/NetworkInterface.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public List<InterfaceAddress> getInterfaceAddresses();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/net/InetAddress.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static InetAddress[] getAllByName0(String host) throws UnknownHostException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/util/ArrayList.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public void sort(Comparator<? super E> c);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/util/Locale.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static final class LocaleCache implements Function<Object, Locale> {"
            },
            "methods": [
              {
                "id": 1,
                "content": "public static Locale cache(Object key);"
              },
              {
                "id": 2,
                "content": "@Override"
              },
              {
                "id": 3,
                "content": "public Locale apply(Object key);"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/util/Formatter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "private record FixedString(String s, int start, int end) implements FormatString {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/util/zip/ZipEntry.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static boolean isCENHeaderValid(String name, byte[] extra, String comment);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/util/zip/ZipFile.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static record EntryPos(String name, int pos) {"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/util/zip/ZipCoder.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "byte compare(String str, byte[] b, int off, int len, boolean matchDirectory);"
          },
          {
            "id": 1,
            "content": "byte compare(String str, byte[] b, int off, int len, boolean matchDirectory);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/util/zip/ZipUtils.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static final long get64S(byte[] b, int off);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/util/concurrent/Exchanger.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "static final class Slot {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/util/concurrent/ForkJoinPool.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "final void topLevelExec(ForkJoinTask<?> task, int fifo);"
          },
          {
            "id": 1,
            "content": "final void cancelTasks();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/util/concurrent/atomic/AtomicReferenceArray.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"unchecked\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"unchecked\")"
          },
          {
            "id": 2,
            "content": "@SuppressWarnings(\"unchecked\")"
          },
          {
            "id": 3,
            "content": "@SuppressWarnings(\"unchecked\")"
          },
          {
            "id": 4,
            "content": "@SuppressWarnings(\"unchecked\")"
          },
          {
            "id": 5,
            "content": "@SuppressWarnings(\"unchecked\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/util/concurrent/atomic/AtomicReference.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"unchecked\")"
          },
          {
            "id": 1,
            "content": "@SuppressWarnings(\"unchecked\")"
          },
          {
            "id": 2,
            "content": "@SuppressWarnings(\"unchecked\")"
          },
          {
            "id": 3,
            "content": "@SuppressWarnings(\"unchecked\")"
          },
          {
            "id": 4,
            "content": "@SuppressWarnings(\"unchecked\")"
          },
          {
            "id": 5,
            "content": "@SuppressWarnings(\"unchecked\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/security/Security.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static final class SecPropLoader {"
            },
            "methods": [
              {
                "id": 1,
                "content": "static void loadAll();"
              },
              {
                "id": 2,
                "content": "static boolean isInclude(String key);"
              },
              {
                "id": 3,
                "content": "static void checkReservedKey(String key) throws IllegalArgumentException;"
              },
              {
                "id": 4,
                "content": "static void loadInclude(String propFile);"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/security/Policy.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public boolean isReadOnly();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/io/ObjectInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "protected ObjectInputStream() throws IOException {"
          },
          {
            "id": 1,
            "content": "protected boolean enableResolveObject(boolean enable);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/io/ObjectOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "protected ObjectOutputStream() throws IOException {"
          },
          {
            "id": 1,
            "content": "protected boolean enableReplaceObject(boolean enable);"
          },
          {
            "id": 2,
            "content": "@SuppressWarnings(\"deprecation\")"
          },
          {
            "id": 3,
            "content": "void writeBytes(String s, int len) throws IOException;"
          },
          {
            "id": 4,
            "content": "public void writeUTF(String str) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/io/DataOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"deprecation\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/io/PushbackInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public synchronized void close() throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/io/BufferedWriter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"try\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/io/BufferedInputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public synchronized int read(byte[] b, @IndexOrHigh({ \"#1\" }) int off, @LTLengthOf(value = { \"#1\" }, offset = { \"#2 - 1\" }) @NonNegative int len) throws IOException;"
          },
          {
            "id": 1,
            "content": "public synchronized long skip(long n) throws IOException;"
          },
          {
            "id": 2,
            "content": "public synchronized int available() throws IOException;"
          },
          {
            "id": 3,
            "content": "public synchronized void mark(int readlimit);"
          },
          {
            "id": 4,
            "content": "public synchronized void reset() throws IOException;"
          },
          {
            "id": 5,
            "content": "public synchronized long transferTo(OutputStream out) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/io/Reader.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static Reader of(final CharSequence cs);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/io/BufferedOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public synchronized void write(@PolySigned int b) throws IOException;"
          },
          {
            "id": 1,
            "content": "public synchronized void flush() throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/io/Console.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Console println();"
          },
          {
            "id": 1,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.IMPLICIT_CLASSES)"
          },
          {
            "id": 2,
            "content": "@PreviewFeature(feature = PreviewFeature.Feature.IMPLICIT_CLASSES)"
          },
          {
            "id": 3,
            "content": "public String readln();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/io/ByteArrayOutputStream.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public synchronized void writeTo(OutputStream out) throws IOException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/math/BigInteger.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static int bitLengthForLong(long n);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/math/MutableBigInteger.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "void shiftAdd(MutableBigInteger addend, int n);"
          },
          {
            "id": 1,
            "content": "void shiftAddDisjoint(MutableBigInteger addend, int n);"
          },
          {
            "id": 2,
            "content": "MutableBigInteger[] sqrtRem(boolean needRemainder);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/time/LocalDateTime.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "void formatTo(StringBuilder buf);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/time/LocalTime.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "void formatTo(StringBuilder buf);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/time/LocalDate.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "void formatTo(StringBuilder buf);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/System.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Restricted"
          },
          {
            "id": 1,
            "content": "@Restricted"
          },
          {
            "id": 2,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/Process.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean waitFor(Duration duration) throws InterruptedException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/Float.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@Override"
          },
          {
            "id": 5,
            "content": "@Override"
          },
          {
            "id": 6,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/Class.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class Holder {"
            },
            "methods": [
              {
                "id": 32,
                "content": "ProtectionDomain protectionDomain();"
              },
              {
                "id": 33,
                "content": "static native <T> Class<T> getPrimitiveClass(String name);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "public Object @Nullable [] getSigners();"
          },
          {
            "id": 2,
            "content": "void setSigners(Object[] signers);"
          },
          {
            "id": 3,
            "content": "public Method getEnclosingMethod();"
          },
          {
            "id": 4,
            "content": "public Constructor<? extends Object> getEnclosingConstructor();"
          },
          {
            "id": 5,
            "content": "public Class<? extends Object> getDeclaringClass();"
          },
          {
            "id": 6,
            "content": "public Class<? extends Object> getEnclosingClass();"
          },
          {
            "id": 7,
            "content": "public Class<? extends Object>[] getClasses();"
          },
          {
            "id": 8,
            "content": "public Field[] getFields();"
          },
          {
            "id": 9,
            "content": "public Method[] getMethods();"
          },
          {
            "id": 10,
            "content": "public Constructor<? extends Object>[] getConstructors();"
          },
          {
            "id": 11,
            "content": "public Field getField(String name) throws NoSuchFieldException;"
          },
          {
            "id": 12,
            "content": "@Pure"
          },
          {
            "id": 13,
            "content": "@GetMethod"
          },
          {
            "id": 14,
            "content": "public Method getMethod(String name, Class<?>@Nullable ... parameterTypes) throws NoSuchMethodException;"
          },
          {
            "id": 15,
            "content": "@GetConstructor"
          },
          {
            "id": 16,
            "content": "@Pure"
          },
          {
            "id": 17,
            "content": "public Constructor<T> getConstructor(Class<?>... parameterTypes) throws NoSuchMethodException;"
          },
          {
            "id": 18,
            "content": "public Class<? extends Object>[] getDeclaredClasses();"
          },
          {
            "id": 19,
            "content": "public Field[] getDeclaredFields();"
          },
          {
            "id": 20,
            "content": "public RecordComponent[] getRecordComponents();"
          },
          {
            "id": 21,
            "content": "public Method[] getDeclaredMethods();"
          },
          {
            "id": 22,
            "content": "public Constructor<?>[] getDeclaredConstructors();"
          },
          {
            "id": 23,
            "content": "public Field getDeclaredField(String name) throws NoSuchFieldException;"
          },
          {
            "id": 24,
            "content": "@GetMethod"
          },
          {
            "id": 25,
            "content": "public Method getDeclaredMethod(String name, Class<?>... parameterTypes) throws NoSuchMethodException;"
          },
          {
            "id": 26,
            "content": "List<Method> getDeclaredPublicMethods(String name, Class<?>... parameterTypes);"
          },
          {
            "id": 27,
            "content": "Method findMethod(boolean publicOnly, String name, Class<?>... parameterTypes);"
          },
          {
            "id": 28,
            "content": "public Constructor<T> getDeclaredConstructor(Class<?>... parameterTypes) throws NoSuchMethodException;"
          },
          {
            "id": 29,
            "content": "@Nullable"
          },
          {
            "id": 30,
            "content": "public InputStream getResourceAsStream(String name);"
          },
          {
            "id": 31,
            "content": "public ProtectionDomain getProtectionDomain();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/Character.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static final UnicodeBlock TODHRI;"
          },
          {
            "id": 1,
            "content": "public static final UnicodeBlock GARAY;"
          },
          {
            "id": 2,
            "content": "public static final UnicodeBlock TULU_TIGALARI;"
          },
          {
            "id": 3,
            "content": "public static final UnicodeBlock MYANMAR_EXTENDED_C;"
          },
          {
            "id": 4,
            "content": "public static final UnicodeBlock SUNUWAR;"
          },
          {
            "id": 5,
            "content": "public static final UnicodeBlock EGYPTIAN_HIEROGLYPHS_EXTENDED_A;"
          },
          {
            "id": 6,
            "content": "public static final UnicodeBlock GURUNG_KHEMA;"
          },
          {
            "id": 7,
            "content": "public static final UnicodeBlock KIRAT_RAI;"
          },
          {
            "id": 8,
            "content": "public static final UnicodeBlock SYMBOLS_FOR_LEGACY_COMPUTING_SUPPLEMENT;"
          },
          {
            "id": 9,
            "content": "public static final UnicodeBlock OL_ONAL;"
          },
          {
            "id": 10,
            "content": "TODHRI,"
          },
          {
            "id": 11,
            "content": "GARAY,"
          },
          {
            "id": 12,
            "content": "TULU_TIGALARI,"
          },
          {
            "id": 13,
            "content": "SUNUWAR,"
          },
          {
            "id": 14,
            "content": "GURUNG_KHEMA,"
          },
          {
            "id": 15,
            "content": "KIRAT_RAI,"
          },
          {
            "id": 16,
            "content": "OL_ONAL,"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/ClassLoader.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static long findNative(@Nullable ClassLoader loader, Class<?> clazz, String entryName, String javaName);"
          },
          {
            "id": 1,
            "content": "static NativeLibraries nativeLibrariesFor(@Nullable ClassLoader loader);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/Double.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "@Override"
          },
          {
            "id": 4,
            "content": "@Override"
          },
          {
            "id": 5,
            "content": "@Override"
          },
          {
            "id": 6,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/StringCoding.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static int countNonZeroAscii(String s);"
          },
          {
            "id": 1,
            "content": "public static int countNonZeroAsciiLatin1(byte[] ba, int off, int len);"
          },
          {
            "id": 2,
            "content": "public static int countNonZeroAsciiUTF16(byte[] ba, int off, int strlen);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/Math.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@IntrinsicCandidate"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/Runtime.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Restricted"
          },
          {
            "id": 1,
            "content": "@Restricted"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/SecurityManager.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class StackWalkerHolder {"
            },
            "methods": []
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "protected Class<?>[] getClassContext();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/ref/ReferenceQueue.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class Lock {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/ref/Reference.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "void clearImpl();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/ref/PhantomReference.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "void clearImpl();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/invoke/MethodType.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static HashMap<MethodType, MethodType> copyInternTable();"
          },
          {
            "id": 1,
            "content": "static void createArchivedObjects();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/invoke/MethodHandles.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "static int optionsToFlag(ClassOption[] options);"
          },
          {
            "id": 1,
            "content": "static String validateAndFindInternalName(byte[] bytes, String pkgName);"
          },
          {
            "id": 2,
            "content": "ClassDefiner makeClassDefiner(String internalName, byte[] bytes, ClassFileDumper dumper);"
          },
          {
            "id": 3,
            "content": "ClassDefiner makeHiddenClassDefiner(String internalName, byte[] bytes, ClassFileDumper dumper);"
          },
          {
            "id": 4,
            "content": "ClassDefiner makeHiddenClassDefiner(String internalName, byte[] bytes, ClassFileDumper dumper, int flags);"
          },
          {
            "id": 5,
            "content": "record ClassDefiner(Lookup lookup, String internalName, byte[] bytes, int classFlags, ClassFileDumper dumper) {"
          },
          {
            "id": 6,
            "content": "ClassDefiner {"
          },
          {
            "id": 7,
            "content": "assert ((classFlags & HIDDEN_CLASS) != 0 || (classFlags & STRONG_LOADER_LINK) == STRONG_LOADER_LINK);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/invoke/LambdaForm.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "Name withIndex(int i);"
          },
          {
            "id": 1,
            "content": "static Name[] invokeArguments(int extra, MethodType types);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/reflect/Constructor.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "Constructor<T> newWithAccessor(ConstructorAccessor accessor);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/reflect/ReflectAccess.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "final class ReflectAccess implements JavaLangReflectAccess {"
            },
            "methods": [
              {
                "id": 1,
                "content": "public <T> Constructor<T> newConstructorWithAccessor(Constructor<T> original, ConstructorAccessor accessor);"
              }
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/nio/Buffer.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "abstract int scaleShifts();"
          },
          {
            "id": 1,
            "content": "abstract AbstractMemorySegmentImpl heapSegment(Object base, long offset, long length, boolean readOnly, MemorySessionImpl bufferScope);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/text/DecimalFormat.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "final StringBuf format(Object number, StringBuf toAppendTo, FieldPosition pos);"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "StringBuf format(double number, StringBuf result, FieldPosition fieldPosition);"
          },
          {
            "id": 4,
            "content": "StringBuf format(double number, StringBuf result, FieldDelegate delegate);"
          },
          {
            "id": 5,
            "content": "boolean handleNaN(double number, StringBuf result, FieldDelegate delegate);"
          },
          {
            "id": 6,
            "content": "boolean handleInfinity(double number, StringBuf result, FieldDelegate delegate, boolean isNegative);"
          },
          {
            "id": 7,
            "content": "StringBuf doubleSubformat(double number, StringBuf result, FieldDelegate delegate, boolean isNegative);"
          },
          {
            "id": 8,
            "content": "StringBuf format(long number, StringBuf result, FieldPosition fieldPosition);"
          },
          {
            "id": 9,
            "content": "StringBuf format(long number, StringBuf result, FieldDelegate delegate);"
          },
          {
            "id": 10,
            "content": "StringBuf format(BigDecimal number, StringBuf result, FieldDelegate delegate);"
          },
          {
            "id": 11,
            "content": "StringBuf format(BigInteger number, StringBuf result, FieldDelegate delegate, boolean formatLong);"
          },
          {
            "id": 12,
            "content": "DigitList getDigitList();"
          },
          {
            "id": 13,
            "content": "void subformatNumber(StringBuf result, FieldDelegate delegate, boolean isNegative, boolean isInteger, int maxIntDigits, int minIntDigits, int maxFraDigits, int minFraDigits);"
          },
          {
            "id": 14,
            "content": "record NumericPosition(int fullPos, int intPos) {"
          },
          {
            "id": 15,
            "content": "NumericPosition subparseNumber(String text, int position, DigitList digits, boolean checkExponent, boolean isExponent, boolean[] status);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/text/MessageFormat.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "final StringBuf format(Object arguments, StringBuf result, FieldPosition pos);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/text/SimpleDateFormat.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "final StringBuf format(Date date, StringBuf toAppendTo, FieldPosition pos);"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/text/ChoiceFormat.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "StringBuf format(long number, StringBuf toAppendTo, FieldPosition status);"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "@Override"
          },
          {
            "id": 3,
            "content": "StringBuf format(double number, StringBuf toAppendTo, FieldPosition status);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/text/CharacterIteratorFieldDelegate.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void formatted(Format.Field attr, Object value, int start, int end, Format.StringBuf buffer);"
          },
          {
            "id": 1,
            "content": "public void formatted(int fieldID, Format.Field attr, Object value, int start, int end, Format.StringBuf buffer);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/text/DateFormat.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "final StringBuf format(Object obj, StringBuf toAppendTo, FieldPosition fieldPosition);"
          },
          {
            "id": 2,
            "content": "StringBuf format(Date date, StringBuf toAppendTo, FieldPosition fieldPosition);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/text/NumberFormat.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "StringBuf format(Object number, StringBuf toAppendTo, FieldPosition pos);"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "StringBuf format(double number, StringBuf toAppendTo, FieldPosition pos);"
          },
          {
            "id": 3,
            "content": "StringBuf format(long number, StringBuf toAppendTo, FieldPosition pos);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/text/FieldPosition.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void formatted(Format.Field attr, Object value, int start, int end, Format.StringBuf buffer);"
          },
          {
            "id": 1,
            "content": "public void formatted(int fieldID, Format.Field attr, Object value, int start, int end, Format.StringBuf buffer);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/com/sun/crypto/provider/DHPrivateKey.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class DHComponents {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/com/sun/crypto/provider/DHPublicKey.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "private static class DHComponents {"
            },
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.net.http/share/classes/jdk/internal/net/http/ConnectionPool.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "void cleanup(HttpConnection c, long pendingData, Throwable error);"
          },
          {
            "id": 1,
            "content": "@Override"
          },
          {
            "id": 2,
            "content": "public void dropSubscription();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.rmi/share/classes/java/rmi/server/RMIClassLoader.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static ClassLoader getClassLoader(String codebase) throws MalformedURLException;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/code/CodeBlob.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean isUpcallStub();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/ClassWriter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "protected static final int LONG_TYPE_PARAM;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/ModuleWriter.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public void addIndirectPackages(Table<?> table, Map<ModuleElement, SortedSet<PackageElement>> ip, Predicate<ModuleElement> acceptModule);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlConfiguration.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "SEARCH_TAGS,"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/html/TextBuilder.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class TextBuilder extends Content {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public TextBuilder() {"
              },
              {
                "id": 3,
                "content": "public TextBuilder(CharSequence initialContent) {"
              },
              {
                "id": 4,
                "content": "@Override"
              },
              {
                "id": 5,
                "content": "public TextBuilder add(CharSequence strContent);"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "@Pure"
              },
              {
                "id": 8,
                "content": "public boolean isEmpty();"
              },
              {
                "id": 9,
                "content": "@Override"
              },
              {
                "id": 10,
                "content": "public boolean isPhrasingContent();"
              },
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "public int charCount();"
              },
              {
                "id": 13,
                "content": "@Override"
              },
              {
                "id": 14,
                "content": "public String toString();"
              },
              {
                "id": 15,
                "content": "@Override"
              },
              {
                "id": 16,
                "content": "public boolean write(Writer out, String newline, boolean atNewline) throws IOException;"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.javadoc.internal.html;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/html/Text.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class Text extends Content {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public static final Text EMPTY;"
              },
              {
                "id": 3,
                "content": "public static Text of(CharSequence content);"
              },
              {
                "id": 4,
                "content": "@Override"
              },
              {
                "id": 5,
                "content": "@Pure"
              },
              {
                "id": 6,
                "content": "public boolean isEmpty();"
              },
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "public boolean isPhrasingContent();"
              },
              {
                "id": 9,
                "content": "@Override"
              },
              {
                "id": 10,
                "content": "public int charCount();"
              },
              {
                "id": 11,
                "content": "static int charCount(CharSequence cs);"
              },
              {
                "id": 12,
                "content": "@Override"
              },
              {
                "id": 13,
                "content": "public String toString();"
              },
              {
                "id": 14,
                "content": "@Override"
              },
              {
                "id": 15,
                "content": "public boolean write(Writer out, String newline, boolean atNewline) throws IOException;"
              },
              {
                "id": 16,
                "content": "public static final String NL;"
              },
              {
                "id": 17,
                "content": "public static CharSequence normalizeNewlines(CharSequence text);"
              },
              {
                "id": 18,
                "content": "static boolean checkNewlines(CharSequence cs);"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.javadoc.internal.html;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/html/Comment.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class Comment extends Content {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public Comment(String comment) {"
              },
              {
                "id": 3,
                "content": "@Override"
              },
              {
                "id": 4,
                "content": "@Pure"
              },
              {
                "id": 5,
                "content": "public boolean isEmpty();"
              },
              {
                "id": 6,
                "content": "@Override"
              },
              {
                "id": 7,
                "content": "public boolean write(Writer out, String newline, boolean atNewline) throws IOException;"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.javadoc.internal.html;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/html/HtmlTree.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class HtmlTree extends Content {"
            },
            "methods": [
              {
                "id": 2,
                "content": "public final HtmlTag tag;"
              },
              {
                "id": 3,
                "content": "public static HtmlTree of(HtmlTag tag);"
              },
              {
                "id": 4,
                "content": "public HtmlTree put(HtmlAttr attrName, String attrValue);"
              },
              {
                "id": 5,
                "content": "public HtmlTree setId(HtmlId id);"
              },
              {
                "id": 6,
                "content": "public HtmlTree setTitle(Content body);"
              },
              {
                "id": 7,
                "content": "public HtmlTree setRole(HtmlAttr.Role role);"
              },
              {
                "id": 8,
                "content": "public HtmlTree setStyle(HtmlStyle style);"
              },
              {
                "id": 9,
                "content": "public HtmlTree addStyle(HtmlStyle style);"
              },
              {
                "id": 10,
                "content": "public HtmlTree addStyle(String style);"
              },
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "public HtmlTree add(Content content);"
              },
              {
                "id": 13,
                "content": "public HtmlTree addUnchecked(Content content);"
              },
              {
                "id": 14,
                "content": "@Override"
              },
              {
                "id": 15,
                "content": "public HtmlTree add(CharSequence stringContent);"
              },
              {
                "id": 16,
                "content": "public HtmlTree add(List<? extends Content> list);"
              },
              {
                "id": 17,
                "content": "public Map<HtmlAttr, String> getAttrs();"
              },
              {
                "id": 18,
                "content": "public List<Content> getContents();"
              },
              {
                "id": 19,
                "content": "@Override"
              },
              {
                "id": 20,
                "content": "public <T> HtmlTree addAll(Collection<T> items, Function<T, Content> mapper);"
              },
              {
                "id": 21,
                "content": "@Override"
              },
              {
                "id": 22,
                "content": "public int charCount();"
              },
              {
                "id": 23,
                "content": "public static final BitSet MAIN_CHARS;"
              },
              {
                "id": 24,
                "content": "public static final BitSet QUERY_FRAGMENT_CHARS;"
              },
              {
                "id": 25,
                "content": "public static String encodeURL(String url);"
              },
              {
                "id": 26,
                "content": "public static HtmlTree A(String ref, Content body);"
              },
              {
                "id": 27,
                "content": "public static HtmlTree A(URI ref, Content body);"
              },
              {
                "id": 28,
                "content": "public static HtmlTree BODY(HtmlStyle style);"
              },
              {
                "id": 29,
                "content": "public static HtmlTree BR();"
              },
              {
                "id": 30,
                "content": "public static HtmlTree BUTTON(HtmlId id);"
              },
              {
                "id": 31,
                "content": "public static HtmlTree BUTTON(HtmlStyle style);"
              },
              {
                "id": 32,
                "content": "public static HtmlTree CAPTION(Content body);"
              },
              {
                "id": 33,
                "content": "public static HtmlTree CODE();"
              },
              {
                "id": 34,
                "content": "public static HtmlTree CODE(Content body);"
              },
              {
                "id": 35,
                "content": "public static HtmlTree DD();"
              },
              {
                "id": 36,
                "content": "public static HtmlTree DD(Content body);"
              },
              {
                "id": 37,
                "content": "public static HtmlTree DETAILS();"
              },
              {
                "id": 38,
                "content": "public static HtmlTree DETAILS(HtmlStyle style);"
              },
              {
                "id": 39,
                "content": "public static HtmlTree DIV(HtmlId id);"
              },
              {
                "id": 40,
                "content": "public static HtmlTree DIV(HtmlStyle style);"
              },
              {
                "id": 41,
                "content": "public static HtmlTree DIV(HtmlStyle style, Content body);"
              },
              {
                "id": 42,
                "content": "public static HtmlTree DIV(Content body);"
              },
              {
                "id": 43,
                "content": "public static HtmlTree DL(HtmlStyle style);"
              },
              {
                "id": 44,
                "content": "public static HtmlTree DL(HtmlStyle style, Content body);"
              },
              {
                "id": 45,
                "content": "public static HtmlTree DT(Content body);"
              },
              {
                "id": 46,
                "content": "public static HtmlTree EM(String body);"
              },
              {
                "id": 47,
                "content": "public static HtmlTree FOOTER();"
              },
              {
                "id": 48,
                "content": "public static HtmlTree HEADER();"
              },
              {
                "id": 49,
                "content": "public static HtmlTree HEADING(HtmlTag headingTag, Content body);"
              },
              {
                "id": 50,
                "content": "public static HtmlTree HEADING(HtmlTag headingTag, HtmlStyle style, Content body);"
              },
              {
                "id": 51,
                "content": "public static HtmlTree HEADING_TITLE(HtmlTag headingTag, HtmlStyle style, Content body);"
              },
              {
                "id": 52,
                "content": "public static HtmlTree HEADING_TITLE(HtmlTag headingTag, Content body);"
              },
              {
                "id": 53,
                "content": "public static HtmlTree HR();"
              },
              {
                "id": 54,
                "content": "public static HtmlTree HTML(String lang, Content head, Content body);"
              },
              {
                "id": 55,
                "content": "public static HtmlTree INPUT(HtmlAttr.InputType type, HtmlId id);"
              },
              {
                "id": 56,
                "content": "public static HtmlTree INPUT(HtmlAttr.InputType type, HtmlStyle style);"
              },
              {
                "id": 57,
                "content": "public static HtmlTree LABEL(String forLabel, Content body);"
              },
              {
                "id": 58,
                "content": "public static HtmlTree LI();"
              },
              {
                "id": 59,
                "content": "public static HtmlTree LI(HtmlStyle style);"
              },
              {
                "id": 60,
                "content": "public static HtmlTree LI(Content body);"
              },
              {
                "id": 61,
                "content": "public static HtmlTree LI(HtmlStyle style, Content body);"
              },
              {
                "id": 62,
                "content": "public static HtmlTree LINK(String rel, String type, String href, String title);"
              },
              {
                "id": 63,
                "content": "public static HtmlTree MAIN();"
              },
              {
                "id": 64,
                "content": "public static HtmlTree MAIN(Content body);"
              },
              {
                "id": 65,
                "content": "public static HtmlTree META(String httpEquiv, String content, String charset);"
              },
              {
                "id": 66,
                "content": "public static HtmlTree META(String name, String content);"
              },
              {
                "id": 67,
                "content": "public static HtmlTree NAV();"
              },
              {
                "id": 68,
                "content": "public static HtmlTree NOSCRIPT(Content body);"
              },
              {
                "id": 69,
                "content": "public static HtmlTree OL(HtmlStyle style);"
              },
              {
                "id": 70,
                "content": "public static HtmlTree P(Content body);"
              },
              {
                "id": 71,
                "content": "public static HtmlTree P(HtmlStyle style, Content body);"
              },
              {
                "id": 72,
                "content": "public static HtmlTree PRE();"
              },
              {
                "id": 73,
                "content": "public static HtmlTree PRE(HtmlStyle style);"
              },
              {
                "id": 74,
                "content": "public static HtmlTree PRE(Content body);"
              },
              {
                "id": 75,
                "content": "public static HtmlTree SCRIPT(String src);"
              },
              {
                "id": 76,
                "content": "public static HtmlTree SECTION(HtmlStyle style);"
              },
              {
                "id": 77,
                "content": "public static HtmlTree SECTION(HtmlStyle style, Content body);"
              },
              {
                "id": 78,
                "content": "public static HtmlTree SMALL(Content body);"
              },
              {
                "id": 79,
                "content": "public static HtmlTree SPAN(Content body);"
              },
              {
                "id": 80,
                "content": "public static HtmlTree SPAN(HtmlStyle styleClass);"
              },
              {
                "id": 81,
                "content": "public static HtmlTree SPAN(HtmlStyle styleClass, Content body);"
              },
              {
                "id": 82,
                "content": "public static HtmlTree SPAN_ID(HtmlId id, Content body);"
              },
              {
                "id": 83,
                "content": "public static HtmlTree SPAN(HtmlId id, HtmlStyle style, Content body);"
              },
              {
                "id": 84,
                "content": "public static HtmlTree SUMMARY(Content body);"
              },
              {
                "id": 85,
                "content": "public static HtmlTree SUP(HtmlStyle style, Content body);"
              },
              {
                "id": 86,
                "content": "public static HtmlTree TITLE(String body);"
              },
              {
                "id": 87,
                "content": "public static HtmlTree UL();"
              },
              {
                "id": 88,
                "content": "public static HtmlTree UL(HtmlStyle style);"
              },
              {
                "id": 89,
                "content": "public static HtmlTree UL(HtmlId id, HtmlStyle style);"
              },
              {
                "id": 90,
                "content": "public static HtmlTree UL(HtmlStyle style, Content first, Content... more);"
              },
              {
                "id": 91,
                "content": "public static <T> HtmlTree UL(HtmlStyle style, Collection<T> items, Function<T, Content> mapper);"
              },
              {
                "id": 92,
                "content": "public static HtmlTree WBR();"
              },
              {
                "id": 93,
                "content": "@Override"
              },
              {
                "id": 94,
                "content": "@Pure"
              },
              {
                "id": 95,
                "content": "public boolean isEmpty();"
              },
              {
                "id": 96,
                "content": "@Override"
              },
              {
                "id": 97,
                "content": "public boolean isPhrasingContent();"
              },
              {
                "id": 98,
                "content": "@Pure"
              },
              {
                "id": 99,
                "content": "public boolean hasContent();"
              },
              {
                "id": 100,
                "content": "@Pure"
              },
              {
                "id": 101,
                "content": "public boolean hasAttrs();"
              },
              {
                "id": 102,
                "content": "@Pure"
              },
              {
                "id": 103,
                "content": "public boolean hasAttr(HtmlAttr attrName);"
              },
              {
                "id": 104,
                "content": "@Override"
              },
              {
                "id": 105,
                "content": "@Pure"
              },
              {
                "id": 106,
                "content": "public boolean isDiscardable();"
              },
              {
                "id": 107,
                "content": "@Pure"
              },
              {
                "id": 108,
                "content": "public boolean isInline();"
              },
              {
                "id": 109,
                "content": "@Pure"
              },
              {
                "id": 110,
                "content": "public boolean isVoid();"
              },
              {
                "id": 111,
                "content": "@Override"
              },
              {
                "id": 112,
                "content": "public boolean write(Writer out, String newline, boolean atNewline) throws IOException;"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.javadoc.internal.html;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/html/RawHtml.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class RawHtml extends Content {"
            },
            "methods": [
              {
                "id": 2,
                "content": "protected final String rawHtmlContent;"
              },
              {
                "id": 3,
                "content": "public static RawHtml of(CharSequence rawHtml);"
              },
              {
                "id": 4,
                "content": "public static RawHtml markdown(CharSequence markdownOutput);"
              },
              {
                "id": 5,
                "content": "public static RawHtml startElement(CharSequence name, Content attrs, boolean selfClosing);"
              },
              {
                "id": 6,
                "content": "public static RawHtml endElement(CharSequence name);"
              },
              {
                "id": 7,
                "content": "public static RawHtml comment(String body);"
              },
              {
                "id": 8,
                "content": "public static RawHtml cdata(String body);"
              },
              {
                "id": 9,
                "content": "@Pure"
              },
              {
                "id": 10,
                "content": "@Override"
              },
              {
                "id": 11,
                "content": "public boolean isEmpty();"
              },
              {
                "id": 12,
                "content": "@Override"
              },
              {
                "id": 13,
                "content": "public boolean isPhrasingContent();"
              },
              {
                "id": 14,
                "content": "@Override"
              },
              {
                "id": 15,
                "content": "public String toString();"
              },
              {
                "id": 16,
                "content": "protected static int charCount(CharSequence htmlText);"
              },
              {
                "id": 17,
                "content": "@Override"
              },
              {
                "id": 18,
                "content": "public boolean write(Writer out, String newline, boolean atNewline) throws IOException;"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.javadoc.internal.html;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/html/ContentBuilder.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class ContentBuilder extends Content {"
            },
            "methods": [
              {
                "id": 2,
                "content": "protected List<Content> contents;"
              },
              {
                "id": 3,
                "content": "public ContentBuilder() {"
              },
              {
                "id": 4,
                "content": "public ContentBuilder(Content... contents) {"
              },
              {
                "id": 5,
                "content": "@Override"
              },
              {
                "id": 6,
                "content": "public ContentBuilder add(Content content);"
              },
              {
                "id": 7,
                "content": "@Override"
              },
              {
                "id": 8,
                "content": "public ContentBuilder add(CharSequence text);"
              },
              {
                "id": 9,
                "content": "public List<Content> getContents();"
              },
              {
                "id": 10,
                "content": "@Override"
              },
              {
                "id": 11,
                "content": "public boolean write(Writer writer, String newline, boolean atNewline) throws IOException;"
              },
              {
                "id": 12,
                "content": "@Override"
              },
              {
                "id": 13,
                "content": "@Pure"
              },
              {
                "id": 14,
                "content": "public boolean isEmpty();"
              },
              {
                "id": 15,
                "content": "@Override"
              },
              {
                "id": 16,
                "content": "public int charCount();"
              },
              {
                "id": 17,
                "content": "@Override"
              },
              {
                "id": 18,
                "content": "public boolean isPhrasingContent();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.javadoc.internal.html;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/html/Script.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public class Script {"
            },
            "methods": [
              {
                "id": 3,
                "content": "public Script() {"
              },
              {
                "id": 4,
                "content": "public Script(String code) {"
              },
              {
                "id": 5,
                "content": "public Script append(CharSequence code);"
              },
              {
                "id": 6,
                "content": "public Script appendStringLiteral(CharSequence text);"
              },
              {
                "id": 7,
                "content": "public Script appendStringLiteral(CharSequence text, char quoteChar);"
              },
              {
                "id": 8,
                "content": "public Content asContent();"
              },
              {
                "id": 9,
                "content": "public static String stringLiteral(CharSequence s);"
              },
              {
                "id": 10,
                "content": "public static String stringLiteral(CharSequence s, char quoteChar);"
              }
            ]
          },
          {
            "declaration": {
              "id": 1,
              "content": "private static class ScriptContent extends Content {"
            },
            "methods": [
              {
                "id": 11,
                "content": "@Override"
              },
              {
                "id": 12,
                "content": "public ScriptContent add(CharSequence code);"
              },
              {
                "id": 13,
                "content": "@Override"
              },
              {
                "id": 14,
                "content": "public boolean write(Writer writer, String newline, boolean atNewline) throws IOException;"
              },
              {
                "id": 15,
                "content": "@Override"
              },
              {
                "id": 16,
                "content": "@Pure"
              },
              {
                "id": 17,
                "content": "public boolean isEmpty();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 2,
            "content": "package jdk.javadoc.internal.html;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/html/Content.java": {
      "is_new_file": true,
      "new_changes": {
        "new_classes": [
          {
            "declaration": {
              "id": 0,
              "content": "public abstract class Content {"
            },
            "methods": [
              {
                "id": 2,
                "content": "@Override"
              },
              {
                "id": 3,
                "content": "public String toString();"
              },
              {
                "id": 4,
                "content": "public Content add(Content content);"
              },
              {
                "id": 5,
                "content": "public Content add(CharSequence stringContent);"
              },
              {
                "id": 6,
                "content": "public <T> Content addAll(Collection<T> items, Function<T, Content> mapper);"
              },
              {
                "id": 7,
                "content": "public abstract boolean write(Writer writer, String newline, boolean atNewline) throws IOException;"
              },
              {
                "id": 8,
                "content": "public abstract boolean isEmpty();"
              },
              {
                "id": 9,
                "content": "@Pure"
              },
              {
                "id": 10,
                "content": "public boolean isDiscardable();"
              },
              {
                "id": 11,
                "content": "public int charCount();"
              },
              {
                "id": 12,
                "content": "public boolean isPhrasingContent();"
              }
            ]
          }
        ],
        "new_methods": [
          {
            "id": 1,
            "content": "package jdk.javadoc.internal.html;"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.desktop/share/classes/sun/awt/NativeLibLoader.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"restricted\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.desktop/share/classes/java/beans/Beans.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"removal\")"
          },
          {
            "id": 1,
            "content": "public static void setDesignTime(boolean isDesignTime);"
          },
          {
            "id": 2,
            "content": "public static void setGuiAvailable(boolean isGuiAvailable);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.desktop/share/classes/java/beans/EventHandler.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"unchecked\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.desktop/share/classes/java/awt/Window.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Deprecated()"
          },
          {
            "id": 1,
            "content": "public final void setAlwaysOnTop(boolean alwaysOnTop);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.desktop/share/classes/java/awt/KeyboardFocusManager.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static void setCurrentKeyboardFocusManager(KeyboardFocusManager newManager);"
          },
          {
            "id": 1,
            "content": "protected Component getGlobalFocusOwner();"
          },
          {
            "id": 2,
            "content": "protected void setGlobalFocusOwner(Component focusOwner);"
          },
          {
            "id": 3,
            "content": "public void clearGlobalFocusOwner();"
          },
          {
            "id": 4,
            "content": "protected Component getGlobalPermanentFocusOwner();"
          },
          {
            "id": 5,
            "content": "protected void setGlobalPermanentFocusOwner(Component permanentFocusOwner);"
          },
          {
            "id": 6,
            "content": "protected Window getGlobalFocusedWindow();"
          },
          {
            "id": 7,
            "content": "protected void setGlobalFocusedWindow(Window focusedWindow);"
          },
          {
            "id": 8,
            "content": "protected Window getGlobalActiveWindow();"
          },
          {
            "id": 9,
            "content": "protected void setGlobalActiveWindow(Window activeWindow);"
          },
          {
            "id": 10,
            "content": "protected Container getGlobalCurrentFocusCycleRoot();"
          },
          {
            "id": 11,
            "content": "public void setGlobalCurrentFocusCycleRoot(Container newFocusCycleRoot);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.desktop/share/classes/java/awt/EventQueue.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"removal\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.desktop/share/classes/java/awt/Toolkit.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"restricted\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.desktop/share/classes/java/awt/SplashScreen.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"restricted\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.desktop/share/classes/java/awt/image/ColorModel.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"restricted\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.desktop/share/classes/java/awt/font/TextLine.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public Shape getOutline();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.desktop/share/classes/javax/swing/UIManager.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public static void setInstalledLookAndFeels(LookAndFeelInfo[] infos);"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.desktop/share/classes/javax/swing/JComponent.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@SuppressWarnings(\"deprecation\")"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotObjectConstantImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "@Override"
          },
          {
            "id": 1,
            "content": "public boolean isCompressible();"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotCompressedNullConstant.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean isCompressible();"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean isScoped();"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotMetaspaceConstantImpl.java": {
      "is_new_file": false,
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          {
            "id": 0,
            "content": "public boolean isCompressible();"
          },
          {
            "id": 1,
            "content": "@Override"
          }
        ]
      }
    }
  }
}