{
  "jdk-18": {
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.security.jgss/share/classes/sun/security/jgss/TokenTracker.java": [
      "public final synchronized void getProps(int number, MessageProp prop);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.jfr/share/classes/jdk/jfr/internal/Type.java": [
      "public void setVisible(boolean visible);",
      "public boolean isVisible();",
      "public void setInternal(boolean internal);",
      "public boolean isInternal();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.compiler/share/classes/javax/tools/JavaFileManager.java": [
      "default JavaFileObject getJavaFileForOutputForOriginatingFiles(Location location, String className, Kind kind, FileObject... originatingFiles) throws IOException;",
      "default FileObject getFileForOutputForOriginatingFiles(Location location, String packageName, String relativeName, FileObject... originatingFiles) throws IOException;",
      "private static FileObject siblingFrom(FileObject[] originatingFiles);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.compiler/share/classes/javax/tools/ForwardingJavaFileManager.java": [
      "public JavaFileObject getJavaFileForOutputForOriginatingFiles(Location location, String className, Kind kind, FileObject... originatingFiles) throws IOException;",
      "public FileObject getFileForOutputForOriginatingFiles(Location location, String packageName, String relativeName, FileObject... originatingFiles) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.compiler/share/classes/javax/lang/model/util/Elements.java": [
      "default TypeElement getOutermostTypeElement(Element e);",
      "default javax.tools.JavaFileObject getFileObjectOf(Element e);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.compiler/share/classes/com/sun/tools/javac/file/Locations.java": [
      "protected abstract static class LocationHandler {",
      "private abstract static class BasicLocationHandler extends LocationHandler {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Type.java": [
      "public abstract static class StructuralTypeMapping<S> extends Types.TypeMapping<S> {",
      "public abstract static class DelegatedType extends Type {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Symbol.java": [
      "public abstract static class TypeSymbol extends Symbol {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Types.java": [
      "public abstract static class DefaultTypeVisitor<R, S> implements Type.Visitor<R, S> {",
      "public abstract static class DefaultSymbolVisitor<R, S> implements Symbol.Visitor<R, S> {",
      "public abstract static class SimpleVisitor<R, S> extends DefaultTypeVisitor<R, S> {",
      "public abstract static class TypeRelation extends SimpleVisitor<Boolean, Type> {",
      "public abstract static class UnaryVisitor<R> extends SimpleVisitor<R, Void> {",
      "public abstract static class SignatureGenerator {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Resolve.java": [
      "boolean isSerializable(Type t);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.compiler/share/classes/com/sun/tools/javac/api/ClientCodeWrapper.java": [
      "public JavaFileObject getJavaFileForOutputForOriginatingFiles(Location location, String className, Kind kind, FileObject... originatingFiles) throws IOException;",
      "public FileObject getFileForOutputForOriginatingFiles(Location location, String packageName, String relativeName, FileObject... originatingFiles) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.compiler/share/classes/com/sun/tools/javac/main/DelegatingJavaFileManager.java": [
      "public JavaFileObject getJavaFileForOutputForOriginatingFiles(Location location, String className, Kind kind, FileObject... originatingFiles) throws IOException;",
      "public FileObject getFileForOutputForOriginatingFiles(Location location, String packageName, String relativeName, FileObject... originatingFiles) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.prefs/share/classes/java/util/prefs/AbstractPreferences.java": [
      "private static class NodeAddedEvent extends NodeChangeEvent {",
      "private static class NodeRemovedEvent extends NodeChangeEvent {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/P11Key.java": [
      "CK_ATTRIBUTE[] fetchAttributes(CK_ATTRIBUTE[] attrs);",
      "BigInteger[] fetchAttributesAsInts(CK_ATTRIBUTE[] attrs);",
      "static SecretKey secretKey(Session session, long keyID, String algorithm, int keyLength, CK_ATTRIBUTE[] attrs);",
      "static SecretKey masterSecretKey(Session session, long keyID, String algorithm, int keyLength, CK_ATTRIBUTE[] attrs, int major, int minor);",
      "static PublicKey publicKey(Session session, long keyID, String algorithm, int keyLength, CK_ATTRIBUTE[] attrs);",
      "static PrivateKey privateKey(Session session, long keyID, String algorithm, int keyLength, CK_ATTRIBUTE[] attrs);",
      "private static abstract class P11PrivateKey extends P11Key implements PrivateKey {",
      "protected byte[] encoded;",
      "private static abstract class P11PublicKey extends P11Key implements PublicKey {",
      "protected byte[] encoded;",
      "static class P11RSAPrivateKeyInternal extends P11PrivateKey {",
      "static P11RSAPrivateKeyInternal of(Session session, long keyID, String algorithm, int keyLength, CK_ATTRIBUTE[] attrs, boolean keySensitive);",
      "protected transient BigInteger n;",
      "private static final class P11RSAPrivateKey extends P11RSAPrivateKeyInternal implements RSAPrivateCrtKey {",
      "public String getFormat();",
      "synchronized byte[] getEncodedInternal();",
      "public BigInteger getModulus();",
      "private static final class P11RSAPrivateNonCRTKey extends P11RSAPrivateKeyInternal implements RSAPrivateKey {",
      "private static final class P11RSAPublicKey extends P11PublicKey implements RSAPublicKey {",
      "private static final class P11DSAPublicKey extends P11PublicKey implements DSAPublicKey {",
      "static class P11DSAPrivateKeyInternal extends P11PrivateKey {",
      "protected transient DSAParams params;",
      "static P11DSAPrivateKeyInternal of(Session session, long keyID, String algorithm, int keyLength, CK_ATTRIBUTE[] attrs, boolean keySensitive);",
      "protected DSAParams getParams();",
      "private static final class P11DSAPrivateKey extends P11DSAPrivateKeyInternal implements DSAPrivateKey {",
      "static class P11DHPrivateKeyInternal extends P11PrivateKey {",
      "protected transient DHParameterSpec params;",
      "static P11DHPrivateKeyInternal of(Session session, long keyID, String algorithm, int keyLength, CK_ATTRIBUTE[] attrs, boolean keySensitive);",
      "public DHParameterSpec getParams();",
      "private static final class P11DHPrivateKey extends P11DHPrivateKeyInternal implements DHPrivateKey {",
      "private static final class P11DHPublicKey extends P11PublicKey implements DHPublicKey {",
      "static class P11ECPrivateKeyInternal extends P11PrivateKey {",
      "protected transient ECParameterSpec params;",
      "static P11ECPrivateKeyInternal of(Session session, long keyID, String algorithm, int keyLength, CK_ATTRIBUTE[] attrs, boolean keySensitive);",
      "protected ECParameterSpec getParams();",
      "private static final class P11ECPrivateKey extends P11ECPrivateKeyInternal implements ECPrivateKey {",
      "private static final class P11ECPublicKey extends P11PublicKey implements ECPublicKey {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/windows/classes/sun/nio/fs/WindowsPath.java": [
      "String getPathWithPrefixForWin32Calls() throws WindowsException;",
      "static String addPrefix(String path);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/sun/util/resources/LocaleData.java": [
      "private abstract static class LocaleDataResourceBundleProvider implements ResourceBundleProvider {",
      "public abstract static class CommonResourceBundleProvider extends LocaleDataResourceBundleProvider {",
      "public abstract static class SupplementaryResourceBundleProvider extends LocaleDataResourceBundleProvider {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/sun/security/util/DerInputStream.java": [
      "public void atEnd() throws IOException;",
      "public Optional<DerValue> getOptional(byte tag) throws IOException;",
      "public boolean seeOptionalContextSpecific(int n) throws IOException;",
      "public Optional<DerValue> getOptionalExplicitContextSpecific(int n) throws IOException;",
      "public Optional<DerValue> getOptionalImplicitContextSpecific(int n, byte tag) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/sun/security/util/DerValue.java": [
      "public static DerValue wrap(byte[] buf) throws IOException;",
      "public static DerValue wrap(byte[] buf, int offset, int len) throws IOException;",
      "public DerValue[] subs(byte expectedTag, int startLen) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/sun/security/x509/AlgorithmId.java": [
      "public byte[] getEncodedParams();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/sun/nio/ch/FileChannelImpl.java": [
      "private abstract static class Unmapper implements Runnable, UnmapperProxy {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/sun/nio/ch/FileDispatcher.java": [
      "abstract boolean canTransferToFromOverlappedMap();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/net/Inet6AddressImpl.java": [
      "final class Inet6AddressImpl implements InetAddressImpl {",
      "public InetAddress[] lookupAllHostAddr(String hostname, LookupPolicy lookupPolicy) throws UnknownHostException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/net/Inet4AddressImpl.java": [
      "final class Inet4AddressImpl implements InetAddressImpl {",
      "public InetAddress[] lookupAllHostAddr(String hostname, LookupPolicy lookupPolicy) throws UnknownHostException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/net/ServerSocket.java": [
      "public void setSoTimeout(int timeout) throws SocketException;",
      "public int getSoTimeout() throws IOException;",
      "public void setReceiveBufferSize(int size) throws SocketException;",
      "public int getReceiveBufferSize() throws SocketException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/net/InetAddress.java": [
      "static boolean systemAddressesOrder(int lookupCharacteristics);",
      "static boolean ipv4AddressesFirst(int lookupCharacteristics);",
      "static boolean ipv6AddressesFirst(int lookupCharacteristics);",
      "private static final class PlatformResolver implements InetAddressResolver {",
      "public Stream<InetAddress> lookupByName(String host, LookupPolicy policy) throws UnknownHostException;",
      "public String lookupByAddress(byte[] addr) throws UnknownHostException;",
      "private static final class HostsFileResolver implements InetAddressResolver {",
      "public HostsFileResolver(String hostsFileName) {",
      "public String lookupByAddress(byte[] addr) throws UnknownHostException;",
      "public Stream<InetAddress> lookupByName(String host, LookupPolicy lookupPolicy) throws UnknownHostException;",
      "static InetAddress[] getAddressesFromNameService(String host) throws UnknownHostException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/util/HashMap.java": [
      "private static final class UnsafeHolder {",
      "static void putLoadFactor(HashMap<?, ?> map, float lf);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/util/ImmutableCollections.java": [
      "abstract static class AbstractImmutableCollection<E> extends AbstractCollection<E> {",
      "abstract static class AbstractImmutableList<E> extends AbstractImmutableCollection<E> implements List<E>, RandomAccess {",
      "abstract static class AbstractImmutableSet<E> extends AbstractImmutableCollection<E> implements Set<E> {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/util/Hashtable.java": [
      "void readHashtable(ObjectInputStream s) throws IOException, ClassNotFoundException;",
      "private static final class UnsafeHolder {",
      "static void putLoadFactor(Hashtable<?, ?> table, float lf);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/util/Collections.java": [
      "public void forEach(Consumer<? super E> action);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/util/regex/Pattern.java": [
      "default CharPredicate union(CharPredicate p1, CharPredicate p2);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/security/Provider.java": [
      "public String toString();",
      "public Set<Service> getServices();",
      "Service getDefaultSecureRandomService();",
      "void removeAttribute(String type, String value);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/security/KeyStoreSpi.java": [
      "public Set<Entry.Attribute> engineGetAttributes(String alias);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/security/KeyStore.java": [
      "public final Set<Entry.Attribute> getAttributes(String alias) throws KeyStoreException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/io/PrintStream.java": [
      "public Charset charset();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/io/ObjectInputStream.java": [
      "public abstract Object get(String name, @Nullable Object val) throws IOException, ClassNotFoundException;",
      "public Object get(String name, Object val) throws ClassNotFoundException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/io/FileInputStream.java": [
      "public long transferTo(OutputStream out) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/io/ObjectStreamClass.java": [
      "abstract static class Key {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/time/Duration.java": [
      "public boolean isPositive();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/System.java": [
      "public abstract static class LoggerFinder {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/StackStreamFactory.java": [
      "abstract static class AbstractStackWalker<R, T> {",
      "abstract static class FrameBuffer<F> {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/StringBuffer.java": [
      "public final class StringBuffer extends AbstractStringBuilder implements Serializable, Comparable<StringBuffer>, CharSequence {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/StringCoding.java": [
      "public static int implEncodeAsciiArray(char[] sa, int sp, byte[] da, int dp, int len);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/Math.java": [
      "public static int divideExact(int x, int y);",
      "public static long divideExact(long x, long y);",
      "public static int floorDivExact(int x, int y);",
      "public static long floorDivExact(long x, long y);",
      "public static int ceilDivExact(int x, int y);",
      "public static long ceilDivExact(long x, long y);",
      "public static long unsignedMultiplyHigh(long x, long y);",
      "public static int ceilDiv(int x, int y);",
      "public static long ceilDiv(long x, int y);",
      "public static long ceilDiv(long x, long y);",
      "public static int ceilMod(int x, int y);",
      "public static int ceilMod(long x, int y);",
      "public static long ceilMod(long x, long y);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/WeakPairMap.java": [
      "private abstract static class WeakRefPeer<K> extends WeakReference<K> {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/StrictMath.java": [
      "public static int divideExact(int x, int y);",
      "public static long divideExact(long x, long y);",
      "public static int floorDivExact(int x, int y);",
      "public static long floorDivExact(long x, long y);",
      "public static int ceilDivExact(int x, int y);",
      "public static long ceilDivExact(long x, long y);",
      "public static long unsignedMultiplyHigh(long x, long y);",
      "public static int ceilDiv(int x, int y);",
      "public static long ceilDiv(long x, int y);",
      "public static long ceilDiv(long x, long y);",
      "public static int ceilMod(int x, int y);",
      "public static int ceilMod(long x, int y);",
      "public static long ceilMod(long x, long y);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/ref/Reference.java": [
      "boolean refersToImpl(T obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/ref/PhantomReference.java": [
      "boolean refersToImpl(T obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/invoke/CallSite.java": [
      "public abstract class CallSite {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/invoke/MethodHandles.java": [
      "static Object classData(Class<?> c);",
      "ClassDefiner makeHiddenClassDefiner(String name, byte[] bytes, Set<ClassOption> options);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/invoke/AbstractConstantGroup.java": [
      "abstract static class WithCache extends AbstractConstantGroup {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/invoke/MethodHandleImpl.java": [
      "static MethodHandle reflectiveInvoker(Class<?> caller);",
      "private static final class InjectedInvokerHolder {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/lang/reflect/Method.java": [
      "public Object invoke(Object obj, Object... args) throws IllegalAccessException, InvocationTargetException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/java/nio/charset/Charset.java": [
      "public static Charset forName(String charsetName, Charset fallback);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.base/share/classes/javax/security/auth/Subject.java": [
      "public static Subject current();",
      "public static <T> T callAs(final Subject subject, final Callable<T> action) throws CompletionException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.httpserver/share/classes/com/sun/net/httpserver/Headers.java": [
      "public Headers(Map<String, List<String>> headers) {",
      "public void replaceAll(BiFunction<? super String, ? super List<String>, ? extends List<String>> function);",
      "public String toString();",
      "public static Headers of(String... headers);",
      "public static Headers of(Map<String, List<String>> headers);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.internal.le/share/classes/jdk/internal/org/jline/utils/AttributedCharSequence.java": [
      "public static final int TRUE_COLORS;",
      "public enum ForceMode {",
      "None, Force256Colors, ForceTrueColors",
      "public String toAnsi(int colors, ForceMode force);",
      "public String toAnsi(int colors, ForceMode force, ColorPalette palette);",
      "public String toAnsi(int colors, ForceMode force, ColorPalette palette, String altIn, String altOut);",
      "long styleCodeAt(int index);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.rmi/share/classes/java/rmi/server/RemoteObject.java": [
      "protected transient RemoteRef ref;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.rmi/share/classes/java/rmi/server/RMISocketFactory.java": [
      "public static synchronized void setSocketFactory(RMISocketFactory fac) throws IOException;",
      "public static synchronized RMISocketFactory getSocketFactory();",
      "public static synchronized RMISocketFactory getDefaultSocketFactory();",
      "public static synchronized void setFailureHandler(RMIFailureHandler fh);",
      "public static synchronized RMIFailureHandler getFailureHandler();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.jdi/share/classes/com/sun/tools/jdi/ReferenceTypeImpl.java": [
      "public abstract List<Method> allMethods();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.jdi/share/classes/com/sun/tools/jdi/VirtualMachineImpl.java": [
      "private static class SoftObjectReference extends SoftReference<ObjectReferenceImpl> {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlDocletWriter.java": [
      "public Content linkToContent(Element referrer, Element target, String targetSignature, String text);",
      "protected Content invalidTagOutput(String summary, Optional<Content> detail);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlConfiguration.java": [
      "public List<DocPath> getAdditionalScripts();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlTree.java": [
      "public static HtmlTree INPUT(String type, HtmlId id);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/WorkArounds.java": [
      "public boolean isMandated(AnnotationMirror aDesc);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/CommentHelper.java": [
      "public TypeElement getReferencedClass(Element e);",
      "public String getReferencedModuleName(String signature);",
      "public Element getReferencedMember(Element e);",
      "public String getReferencedMemberName(String signature);",
      "public PackageElement getReferencedPackage(Element e);",
      "public ModuleElement getReferencedModule(Element e);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/VisibleMemberTable.java": [
      "ANNOTATION_TYPE_MEMBER,",
      "ANNOTATION_TYPE_MEMBER_REQUIRED,",
      "public List<Element> getAllVisibleMembers(Kind kind);",
      "public List<Element> getVisibleMembers(Kind kind, Predicate<Element> p);",
      "public List<Element> getVisibleMembers(Kind kind);",
      "public List<Element> getMembers(Kind kind);",
      "public VariableElement getPropertyField(ExecutableElement ee);",
      "public ExecutableElement getPropertyGetter(ExecutableElement ee);",
      "public ExecutableElement getPropertySetter(ExecutableElement ee);",
      "public ExecutableElement getPropertyMethod(ExecutableElement ee);",
      "<T extends Element> List<T> getMembers(String key, Kind kind, Class<T> clazz);",
      "List<ExecutableElement> getPropertyMethods(String methodName, int argcount);",
      "record PropertyMembers(ExecutableElement propertyMethod, VariableElement field, ExecutableElement getter, ExecutableElement setter) {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/Utils.java": [
      "public TypeMirror getThrowableType();",
      "public boolean isThrowable(TypeElement te);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.jlink/share/classes/jdk/tools/jlink/internal/ResourcePoolManager.java": [
      "static class ResourcePoolModuleImpl implements ResourcePoolModule {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.jlink/share/classes/jdk/tools/jlink/internal/ImagePluginStack.java": [
      "private static final class CheckOrderResourcePoolManager extends ResourcePoolManager {",
      "private static class LastPoolManager extends ResourcePoolManager {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.accessibility/windows/classes/com/sun/java/accessibility/internal/AccessBridge.java": [
      "public final class AccessBridge {",
      "private static abstract class AccessibilityGraphicsEnvironment extends GraphicsEnvironment {",
      "public static GraphicsConfiguration getGraphicsConfigurationAtPoint(double x, double y);",
      "public static GraphicsConfiguration getGraphicsConfigurationAtPoint(GraphicsConfiguration current, double x, double y);",
      "public static GraphicsConfiguration getGraphicsConfigurationAtDevicePoint(double x, double y);",
      "public static GraphicsConfiguration getGraphicsConfigurationAtDevicePoint(GraphicsConfiguration current, double x, double y);",
      "public static Point toUserSpace(int x, int y);",
      "public static Point toUserSpace(GraphicsConfiguration gc, int x, int y);",
      "public static Rectangle toDeviceSpaceAbs(Rectangle rect);",
      "public static Rectangle toDeviceSpaceAbs(GraphicsConfiguration gc, int x, int y, int w, int h);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.jshell/share/classes/jdk/jshell/MemoryFileManager.java": [
      "abstract static class MemoryJavaFileObject extends SimpleJavaFileObject {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/unix/classes/sun/print/IPPPrintService.java": [
      "private static class ExtFinishing extends Finishings {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/java/awt/Polygon.java": [
      "static class PolygonPathIterator implements PathIterator {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/java/awt/CardLayout.java": [
      "static class Card implements Serializable {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/java/awt/Component.java": [
      "private static class ProxyCapabilities extends ExtendedBufferCapabilities {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/java/awt/Toolkit.java": [
      "private static class SelectiveAWTEventListener implements AWTEventListener {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/java/awt/print/Book.java": [
      "private static class BookPage {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/javax/swing/JComponent.java": [
      "static final class ActionStandin implements Action {",
      "private static class ReadObjectCallback implements ObjectInputValidation {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/javax/swing/plaf/nimbus/NimbusStyle.java": [
      "private static final class RuntimeState implements Cloneable {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/javax/swing/text/StyleContext.java": [
      "static class KeyEnumeration implements Enumeration<Object> {",
      "static class KeyBuilder {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/java.desktop/share/classes/javax/swing/text/JTextComponent.java": [
      "private static class DoSetCaretPosition implements Runnable {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.management.agent/share/classes/sun/management/jdp/JdpJmxPacket.java": [
      "public static final String UUID_KEY;",
      "public static final String MAIN_CLASS_KEY;",
      "public static final String JMX_SERVICE_URL_KEY;",
      "public static final String INSTANCE_NAME_KEY;",
      "public static final String PROCESS_ID_KEY;",
      "public static final String RMI_HOSTNAME_KEY;",
      "public static final String BROADCAST_INTERVAL_KEY;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-18/src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.hotspot/src/jdk/vm/ci/hotspot/HotSpotObjectConstantImpl.java": [
      "public JavaConstant readFieldValue(HotSpotResolvedJavaField field);"
    ]
  },
  "jdk-19": {
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.security.jgss/share/classes/sun/security/jgss/GSSNameImpl.java": [
      "public final class GSSNameImpl implements GSSName {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.security.jgss/share/classes/sun/security/jgss/TokenTracker.java": [
      "static class Entry {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.security.jgss/share/classes/sun/security/jgss/spi/GSSNameSpi.java": [
      "Provider getProvider();",
      "boolean equals(GSSNameSpi name) throws GSSException;",
      "boolean equals(@Nullable Object another);",
      "int hashCode();",
      "byte[] export() throws GSSException;",
      "Oid getMechanism();",
      "String toString();",
      "Oid getStringNameType();",
      "boolean isAnonymousName();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.security.jgss/share/classes/org/ietf/jgss/GSSCredential.java": [
      "int INITIATE_AND_ACCEPT;",
      "int INITIATE_ONLY;",
      "int ACCEPT_ONLY;",
      "int DEFAULT_LIFETIME;",
      "int INDEFINITE_LIFETIME;",
      "void dispose() throws GSSException;",
      "GSSName getName() throws GSSException;",
      "GSSName getName(Oid mech) throws GSSException;",
      "int getRemainingLifetime() throws GSSException;",
      "int getRemainingInitLifetime(Oid mech) throws GSSException;",
      "int getRemainingAcceptLifetime(Oid mech) throws GSSException;",
      "int getUsage() throws GSSException;",
      "int getUsage(Oid mech) throws GSSException;",
      "Oid[] getMechs() throws GSSException;",
      "void add(GSSName name, int initLifetime, int acceptLifetime, Oid mech, int usage) throws GSSException;",
      "boolean equals(@Nullable Object another);",
      "int hashCode();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.security.jgss/share/classes/org/ietf/jgss/GSSName.java": [
      "Oid NT_HOSTBASED_SERVICE;",
      "Oid NT_USER_NAME;",
      "Oid NT_MACHINE_UID_NAME;",
      "Oid NT_STRING_UID_NAME;",
      "Oid NT_ANONYMOUS;",
      "Oid NT_EXPORT_NAME;",
      "boolean equals(GSSName another) throws GSSException;",
      "boolean equals(@Nullable Object another);",
      "int hashCode();",
      "GSSName canonicalize(Oid mech) throws GSSException;",
      "byte[] export() throws GSSException;",
      "String toString();",
      "Oid getStringNameType() throws GSSException;",
      "boolean isAnonymous();",
      "boolean isMN();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.jfr/share/classes/jdk/jfr/internal/consumer/RecordingInput.java": [
      "public void require(int minimumBytes, String errorMessage) throws IOException;",
      "public void setStreamed();",
      "public void pollWait() throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.xml/share/classes/com/sun/org/apache/xalan/internal/xsltc/compiler/util/ErrorMsg.java": [
      "public static final String XPATH_LIMIT;",
      "public static final String XPATH_GROUP_LIMIT;",
      "public static final String XPATH_OPERATOR_LIMIT;",
      "public static final String XPATH_TOTAL_OPERATOR_LIMIT;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.compiler/share/classes/com/sun/tools/javac/tree/TreeInfo.java": [
      "public static Type primaryPatternType(JCTree pat);",
      "public static JCTree primaryPatternTypeTree(JCTree pat);",
      "public static boolean expectedExhaustive(JCSwitch tree);",
      "public static boolean unguardedCaseLabel(JCCaseLabel cse);",
      "public static boolean isBooleanWithValue(JCExpression guard, int value);",
      "public static boolean isNullCaseLabel(JCCaseLabel label);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Symbol.java": [
      "public Name name();",
      "public Name name();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Types.java": [
      "public Throwable fillInStackTrace();",
      "public Throwable fillInStackTrace();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Resolve.java": [
      "public Throwable fillInStackTrace();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.compiler/share/classes/com/sun/source/tree/Tree.java": [
      "CONSTANT_CASE_LABEL(ConstantCaseLabelTree.class),",
      "PATTERN_CASE_LABEL(PatternCaseLabelTree.class),",
      "DECONSTRUCTION_PATTERN(DeconstructionPatternTree.class),"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/unix/classes/sun/nio/fs/UnixDirectoryStream.java": [
      "final UnixPath directory();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/sun/net/www/http/KeepAliveCache.java": [
      "static int getUserKeepAliveSeconds(String type);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/sun/security/ssl/Utilities.java": [
      "static <T> boolean contains(T[] array, T item);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/sun/security/tools/keytool/Main.java": [
      "private static class SecretKeyConstraintsParameters implements ConstraintsParameters {",
      "public boolean anchorIsJdkCA();",
      "public Set<Key> getKeys();",
      "public Date getDate();",
      "public String getVariant();",
      "public String extendedExceptionMsg();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/sun/security/util/BitArray.java": [
      "public BitArray(int length, byte[] a, int ofs) throws IllegalArgumentException {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/sun/security/x509/AlgorithmId.java": [
      "public static final ObjectIdentifier SHA1withECDSA_oid;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/sun/nio/ch/FileChannelImpl.java": [
      "public long capacity();",
      "public MemorySegment map(MapMode mode, long offset, long size, MemorySession session) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/jdk/internal/org/objectweb/asm/commons/AdviceAdapter.java": [
      "public void visitVarInsn(final int opcode, final int varIndex);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/net/URL.java": [
      "private static class ThreadTrackHolder {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/net/SocketException.java": [
      "public SocketException(String msg, Throwable cause) {",
      "public SocketException(Throwable cause) {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/net/InetAddress.java": [
      "public sealed class InetAddress implements Serializable permits Inet4Address, Inet6Address {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/RegularEnumSet.java": [
      "final class RegularEnumSet<E extends Enum<E>> extends EnumSet<E> {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/Objects.java": [
      "public static String toIdentityString(Object o);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/LinkedHashMap.java": [
      "public static <K, V> LinkedHashMap<K, V> newLinkedHashMap(int numMappings);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/HashMap.java": [
      "static int calculateHashMapCapacity(int numMappings);",
      "public static <K, V> HashMap<K, V> newHashMap(int numMappings);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/WeakHashMap.java": [
      "public static <K, V> WeakHashMap<K, V> newWeakHashMap(int numMappings);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/Random.java": [
      "private static final class RandomWrapper extends Random implements RandomGenerator {",
      "public void setSeed(long seed);",
      "public boolean isDeprecated();",
      "public void nextBytes(byte[] bytes);",
      "public int nextInt();",
      "public int nextInt(int bound);",
      "public int nextInt(int origin, int bound);",
      "public long nextLong();",
      "public long nextLong(long bound);",
      "public long nextLong(long origin, long bound);",
      "public boolean nextBoolean();",
      "public float nextFloat();",
      "public float nextFloat(float bound);",
      "public float nextFloat(float origin, float bound);",
      "public double nextDouble();",
      "public double nextDouble(double bound);",
      "public double nextDouble(double origin, double bound);",
      "public double nextExponential();",
      "public double nextGaussian();",
      "public double nextGaussian(double mean, double stddev);",
      "public IntStream ints(long streamSize);",
      "public IntStream ints();",
      "public IntStream ints(long streamSize, int randomNumberOrigin, int randomNumberBound);",
      "public IntStream ints(int randomNumberOrigin, int randomNumberBound);",
      "public LongStream longs(long streamSize);",
      "public LongStream longs();",
      "public LongStream longs(long streamSize, long randomNumberOrigin, long randomNumberBound);",
      "public LongStream longs(long randomNumberOrigin, long randomNumberBound);",
      "public DoubleStream doubles(long streamSize);",
      "public DoubleStream doubles();",
      "public DoubleStream doubles(long streamSize, double randomNumberOrigin, double randomNumberBound);",
      "public DoubleStream doubles(double randomNumberOrigin, double randomNumberBound);",
      "protected int next(int bits);",
      "public String toString();",
      "public static Random from(RandomGenerator generator);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/Locale.java": [
      "public static Locale of(String language, String country, String variant);",
      "public static Locale of(String language, String country);",
      "public static Locale of(String language);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/JumboEnumSet.java": [
      "final class JumboEnumSet<E extends Enum<E>> extends EnumSet<E> {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/Formatter.java": [
      "void print(Formatter fmt, Object arg, Locale l) throws IOException;",
      "private static class FixedString implements FormatString {",
      "public void print(Formatter fmt, Object arg, Locale l) throws IOException;",
      "private static class FormatSpecifier implements FormatString {",
      "public void print(Formatter fmt, Object arg, Locale l) throws IOException;",
      "public static boolean contains(int flags, int f);",
      "public static boolean containsAny(int flags, int f);",
      "public static int remove(int flags, int f);",
      "public static int parse(String s, int start, int end);",
      "public static String toString(int f);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/HashSet.java": [
      "public static <T> HashSet<T> newHashSet(int numElements);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/LinkedHashSet.java": [
      "public static <T> LinkedHashSet<T> newLinkedHashSet(int numElements);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/EnumSet.java": [
      "public abstract sealed class EnumSet<E extends Enum<E>> extends AbstractSet<E> implements Cloneable, java.io.Serializable permits JumboEnumSet, RegularEnumSet {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/jar/JarFile.java": [
      "private static class ThreadTrackHolder {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/zip/InflaterInputStream.java": [
      "public void mark(int readlimit);",
      "public void reset() throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/zip/Deflater.java": [
      "boolean shouldFinish();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/concurrent/Future.java": [
      "default V resultNow();",
      "default Throwable exceptionNow();",
      "enum State {",
      "RUNNING, SUCCESS, FAILED, CANCELLED",
      "default State state();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/concurrent/ForkJoinPool.java": [
      "public final ForkJoinWorkerThread newThread(ForkJoinPool pool);",
      "static ForkJoinWorkerThread newRegularWithACC(ForkJoinPool pool);",
      "static ForkJoinWorkerThread newCommonWithACC(ForkJoinPool pool);",
      "static ForkJoinTask<?> getAndClearSlot(ForkJoinTask<?>[] a, int i);",
      "static boolean casSlotToNull(ForkJoinTask<?>[] a, int i, ForkJoinTask<?> c);",
      "final void forcePhaseActive();",
      "final int getAndSetAccess(int v);",
      "final void releaseAccess();",
      "final void push(ForkJoinTask<?> task, ForkJoinPool pool, boolean signalIfEmpty);",
      "final ForkJoinTask<?> nextLocalTask(int fifo);",
      "final boolean tryUnpush(ForkJoinTask<?> task, boolean owned);",
      "final ForkJoinTask<?> poll(ForkJoinPool pool);",
      "final ForkJoinTask<?> tryPoll();",
      "final void topLevelExec(ForkJoinTask<?> task, WorkQueue src);",
      "final int tryRemoveAndExec(ForkJoinTask<?> task, boolean owned);",
      "final void setClearThreadLocals();",
      "final int helpJoin(ForkJoinTask<?> task, WorkQueue w, boolean timed);",
      "final int helpComplete(ForkJoinTask<?> task, WorkQueue w, boolean owned, boolean timed);",
      "static final int helpQuiescePool(ForkJoinPool pool, long nanos, boolean interruptible);",
      "final WorkQueue submissionQueue(boolean isSubmit);",
      "public <T> ForkJoinTask<T> lazySubmit(ForkJoinTask<T> task);",
      "public int setParallelism(int size);",
      "public void close();",
      "void endCompensatedBlock(long post);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/concurrent/ExecutorService.java": [
      "public interface ExecutorService extends Executor, AutoCloseable {",
      "default void close();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/concurrent/ConcurrentHashMap.java": [
      "abstract static sealed class CollectionView<K, V, E> implements Collection<E>, java.io.Serializable permits EntrySetView, KeySetView, ValuesView {",
      "public static final class KeySetView<K, V> extends CollectionView<K, V, K> implements Set<K>, java.io.Serializable {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/concurrent/ForkJoinTask.java": [
      "final void markPoolSubmission();",
      "public State state();",
      "public V resultNow();",
      "public Throwable exceptionNow();",
      "public final boolean quietlyJoin(long timeout, TimeUnit unit) throws InterruptedException;",
      "public final boolean quietlyJoinUninterruptibly(long timeout, TimeUnit unit);",
      "public static <T> ForkJoinTask<T> adaptInterruptible(Callable<? extends T> callable);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/concurrent/Executors.java": [
      "public static ExecutorService newThreadPerTaskExecutor(ThreadFactory threadFactory);",
      "public static ExecutorService newVirtualThreadPerTaskExecutor();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/util/concurrent/FutureTask.java": [
      "public V resultNow();",
      "public Throwable exceptionNow();",
      "public State state();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/FileSystem.java": [
      "public abstract boolean isInvalid(File f);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/ObjectStreamException.java": [
      "protected ObjectStreamException(String message, Throwable cause) {",
      "protected ObjectStreamException(Throwable cause) {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/PushbackInputStream.java": [
      "public void mark(@NonNegative int readlimit);",
      "public void reset() throws IOException;",
      "public void close() throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/ObjectStreamClass.java": [
      "public final class ObjectStreamClass implements Serializable {",
      "private static class FieldReflectorKey {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/InputStream.java": [
      "public void mark(@NonNegative int readlimit);",
      "public void reset() throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/BufferedInputStream.java": [
      "public int read() throws IOException;",
      "public int read(byte[] b, @IndexOrHigh({ \"#1\" }) int off, @LTLengthOf(value = { \"#1\" }, offset = { \"#2 - 1\" }) @NonNegative int len) throws IOException;",
      "public long skip(long n) throws IOException;",
      "public int available() throws IOException;",
      "public void mark(int readlimit);",
      "public void reset() throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/RandomAccessFile.java": [
      "public long length() throws IOException;",
      "public void setLength(@NonNegative long newLength) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/BufferedOutputStream.java": [
      "public void write(@PolySigned int b) throws IOException;",
      "public void flush() throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/InvalidObjectException.java": [
      "public InvalidObjectException(String reason, Throwable cause) {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/io/FilterInputStream.java": [
      "public void mark(@NonNegative int readlimit);",
      "public void reset() throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/math/BigInteger.java": [
      "public BigInteger parallelMultiply(BigInteger val);",
      "private abstract static sealed class RecursiveOp extends RecursiveTask<BigInteger> {",
      "protected RecursiveTask<BigInteger> forkOrInvoke();",
      "private static final class RecursiveMultiply extends RecursiveOp {",
      "public RecursiveMultiply(BigInteger a, BigInteger b, boolean parallel, int depth) {",
      "public BigInteger compute();",
      "private static final class RecursiveSquare extends RecursiveOp {",
      "public RecursiveSquare(BigInteger a, boolean parallel, int depth) {",
      "public BigInteger compute();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/math/BigDecimal.java": [
      "public static final BigDecimal TWO;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/time/ZoneId.java": [
      "public abstract sealed class ZoneId implements Serializable permits ZoneOffset, ZoneRegion {",
      "abstract ZoneOffset getOffset(long epochSecond);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/Integer.java": [
      "public static int compress(int i, int mask);",
      "public static int expand(int i, int mask);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/StackStreamFactory.java": [
      "protected final ContinuationScope contScope;",
      "protected Continuation continuation;",
      "final boolean filter(int index);",
      "final boolean filter(int index);",
      "final boolean filter(int index);",
      "abstract boolean filter(int index);",
      "final boolean isAtBottom();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/StackTraceElement.java": [
      "static StackTraceElement[] of(Object x, int depth);",
      "static StackTraceElement[] of(StackTraceElement[] stackTrace);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/Float.java": [
      "public static final int SIZE;",
      "public static final int PRECISION;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/Long.java": [
      "public static long compress(long i, long mask);",
      "public static long expand(long i, long mask);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/Object.java": [
      "public final void wait(@UnknownInitialization Object this, @NonNegative long timeoutMillis) throws InterruptedException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/Throwable.java": [
      "boolean isLockedByCurrentThread();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/Character.java": [
      "public static final UnicodeBlock ARABIC_EXTENDED_B;",
      "public static final UnicodeBlock VITHKUQI;",
      "public static final UnicodeBlock LATIN_EXTENDED_F;",
      "public static final UnicodeBlock OLD_UYGHUR;",
      "public static final UnicodeBlock UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED_A;",
      "public static final UnicodeBlock CYPRO_MINOAN;",
      "public static final UnicodeBlock TANGSA;",
      "public static final UnicodeBlock KANA_EXTENDED_B;",
      "public static final UnicodeBlock ZNAMENNY_MUSICAL_NOTATION;",
      "public static final UnicodeBlock LATIN_EXTENDED_G;",
      "public static final UnicodeBlock TOTO;",
      "public static final UnicodeBlock ETHIOPIC_EXTENDED_B;",
      "VITHKUQI,",
      "OLD_UYGHUR,",
      "CYPRO_MINOAN,",
      "TANGSA,",
      "TOTO,"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/ThreadLocal.java": [
      "T getCarrierThreadLocal();",
      "void setCarrierThreadLocal(T value);",
      "int size();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/StackWalker.java": [
      "static StackWalker getInstance(ContinuationScope contScope);",
      "static StackWalker getInstance(Option option, ContinuationScope contScope);",
      "static StackWalker getInstance(Set<Option> options, ContinuationScope contScope);",
      "static StackWalker newInstance(Set<Option> options, ExtendedOption extendedOption, ContinuationScope contScope);",
      "static StackWalker newInstance(Set<Option> options, ExtendedOption extendedOption, ContinuationScope contScope, Continuation continuation);",
      "ContinuationScope getContScope();",
      "Continuation getContinuation();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/Double.java": [
      "public static final int SIZE;",
      "public static final int PRECISION;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/AbstractStringBuilder.java": [
      "abstract sealed class AbstractStringBuilder implements Appendable, CharSequence permits StringBuilder, StringBuffer {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/Runnable.java": [
      "void run(@PolyUI Runnable this);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/StringCoding.java": [
      "public static boolean hasNegatives(byte[] ba, int off, int len);",
      "public static int countPositives(byte[] ba, int off, int len);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/Math.java": [
      "public static final double TAU;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/Thread.java": [
      "private static class FieldHolder {",
      "static Object extentLocalBindings();",
      "static void setExtentLocalBindings(Object bindings);",
      "void inheritExtentLocalBindings(ThreadContainer container);",
      "Continuation getContinuation();",
      "void setContinuation(Continuation cont);",
      "static native Thread currentCarrierThread();",
      "native void setCurrentThread(Thread thread);",
      "static native Object[] extentLocalCache();",
      "static native void setExtentLocalCache(Object[] cache);",
      "public static void yield();",
      "public static void sleep(long millis) throws InterruptedException;",
      "public static void sleep(Duration duration) throws InterruptedException;",
      "private static class ThreadIdentifiers {",
      "static long next();",
      "public static Builder.OfPlatform ofPlatform();",
      "public static Builder.OfVirtual ofVirtual();",
      "public sealed interface Builder permits Builder.OfPlatform, Builder.OfVirtual, ThreadBuilders.BaseThreadBuilder {",
      "Builder name(String name);",
      "Builder name(String prefix, long start);",
      "Builder allowSetThreadLocals(boolean allow);",
      "Builder inheritInheritableThreadLocals(boolean inherit);",
      "Builder uncaughtExceptionHandler(UncaughtExceptionHandler ueh);",
      "Thread unstarted(Runnable task);",
      "Thread start(Runnable task);",
      "ThreadFactory factory();",
      "sealed interface OfPlatform extends Builder permits ThreadBuilders.PlatformThreadBuilder {",
      "OfPlatform name(String name);",
      "OfPlatform name(String prefix, long start);",
      "OfPlatform allowSetThreadLocals(boolean allow);",
      "OfPlatform inheritInheritableThreadLocals(boolean inherit);",
      "OfPlatform uncaughtExceptionHandler(UncaughtExceptionHandler ueh);",
      "OfPlatform group(ThreadGroup group);",
      "OfPlatform daemon(boolean on);",
      "default OfPlatform daemon();",
      "OfPlatform priority(int priority);",
      "OfPlatform stackSize(long stackSize);",
      "sealed interface OfVirtual extends Builder permits ThreadBuilders.VirtualThreadBuilder {",
      "OfVirtual name(String name);",
      "OfVirtual name(String prefix, long start);",
      "OfVirtual allowSetThreadLocals(boolean allow);",
      "OfVirtual inheritInheritableThreadLocals(boolean inherit);",
      "OfVirtual uncaughtExceptionHandler(UncaughtExceptionHandler ueh);",
      "private static class ThreadNumbering {",
      "static int next();",
      "static String genThreadName();",
      "public Thread(@Nullable Runnable task) {",
      "public Thread(@Nullable ThreadGroup group, @Nullable Runnable task) {",
      "public Thread(@Nullable Runnable task, String name) {",
      "public Thread(@Nullable ThreadGroup group, @Nullable Runnable task, String name) {",
      "public Thread(@Nullable ThreadGroup group, @Nullable Runnable task, String name, long stackSize) {",
      "public Thread(ThreadGroup group, Runnable task, String name, long stackSize, boolean inheritInheritableThreadLocals) {",
      "public static Thread startVirtualThread(Runnable task);",
      "public final boolean isVirtual();",
      "public void start();",
      "void start(ThreadContainer container);",
      "void clearReferences();",
      "final void setInterrupt();",
      "final void clearInterrupt();",
      "boolean getAndClearInterrupt();",
      "public final boolean isAlive(@GuardSatisfied Thread this);",
      "boolean alive();",
      "void priority(int newPriority);",
      "public final void join(long millis) throws InterruptedException;",
      "public final void join(long millis, int nanos) throws InterruptedException;",
      "public final boolean join(Duration duration) throws InterruptedException;",
      "void daemon(boolean on);",
      "StackTraceElement[] asyncGetStackTrace();",
      "static Thread[] getAllThreads();",
      "public final long threadId();",
      "State threadState();",
      "boolean isTerminated();",
      "public static void setDefaultUncaughtExceptionHandler(@Nullable UncaughtExceptionHandler ueh);",
      "public void setUncaughtExceptionHandler(@Nullable UncaughtExceptionHandler ueh);",
      "void uncaughtExceptionHandler(UncaughtExceptionHandler ueh);",
      "void dispatchUncaughtException(Throwable e);",
      "private static class Constants {",
      "static ThreadGroup virtualThreadGroup();",
      "ThreadContainer threadContainer();",
      "void setThreadContainer(ThreadContainer container);",
      "StackableScope headStackableScopes();",
      "static void setHeadStackableScope(StackableScope scope);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/StrictMath.java": [
      "public static final double TAU;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/ref/SoftReference.java": [
      "public non-sealed class SoftReference<T> extends Reference<T> {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/ref/ReferenceQueue.java": [
      "private static class Null extends ReferenceQueue<Object> {",
      "public Null() {",
      "boolean enqueue(Reference<?> r);",
      "void signal();",
      "void await() throws InterruptedException;",
      "void await(long timeoutMillis) throws InterruptedException;",
      "final boolean enqueue0(Reference<? extends T> r);",
      "final boolean headIsNull();",
      "final Reference<? extends T> poll0();",
      "final Reference<? extends T> remove0(long timeout) throws IllegalArgumentException, InterruptedException;",
      "final Reference<? extends T> remove0() throws InterruptedException;",
      "public Reference<? extends T> remove(long timeout) throws InterruptedException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/ref/Reference.java": [
      "public abstract sealed class Reference<T> permits PhantomReference, SoftReference, WeakReference, FinalReference {",
      "static void startReferenceHandlerThread(ThreadGroup tg);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/ref/Finalizer.java": [
      "static void startFinalizerThread(ThreadGroup tg);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/ref/PhantomReference.java": [
      "public non-sealed class PhantomReference<T> extends Reference<T> {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/ref/WeakReference.java": [
      "public non-sealed class WeakReference<T> extends Reference<T> {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/ref/FinalReference.java": [
      "sealed class FinalReference<T> extends Reference<T> permits Finalizer {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/invoke/CallSite.java": [
      "public abstract sealed class CallSite permits ConstantCallSite, MutableCallSite, VolatileCallSite {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/invoke/MethodType.java": [
      "static MethodType methodType(Class<?> rtype, Class<?>[] ptypes, boolean trusted);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/invoke/MethodHandles.java": [
      "static MethodHandle dropArgumentsTrusted(MethodHandle target, int pos, Class<?>[] valueTypes);",
      "static MethodHandle dropArguments(MethodHandle target, int pos, Class<?> valueType1);",
      "static MethodHandle dropArguments(MethodHandle target, int pos, Class<?> valueType1, Class<?> valueType2);",
      "public static VarHandle memorySegmentViewVarHandle(ValueLayout layout);",
      "public static VarHandle filterValue(VarHandle target, MethodHandle filterToTarget, MethodHandle filterFromTarget);",
      "public static VarHandle filterCoordinates(VarHandle target, int pos, MethodHandle... filters);",
      "public static VarHandle insertCoordinates(VarHandle target, int pos, Object... values);",
      "public static VarHandle permuteCoordinates(VarHandle target, List<Class<?>> newCoordinates, int... reorder);",
      "public static VarHandle collectCoordinates(VarHandle target, int pos, MethodHandle filter);",
      "public static VarHandle dropCoordinates(VarHandle target, int pos, Class<?>... valueTypes);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/invoke/MethodHandleImpl.java": [
      "static final class AsVarargsCollector extends DelegatingMethodHandle {",
      "static final class CountingWrapper extends DelegatingMethodHandle {",
      "static final class WrappedMember extends DelegatingMethodHandle {",
      "static MethodHandle makeTryFinally(MethodHandle target, MethodHandle cleanup, Class<?> rtype, Class<?>[] argTypes);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/reflect/Proxy.java": [
      "static Object invokeDefault(Object proxy, Method method, Object[] args, Class<?> caller) throws Throwable;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/lang/reflect/ReflectAccess.java": [
      "public Object invokeDefault(Object proxy, Method method, Object[] args, Class<?> caller) throws Throwable;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/nio/StringCharBuffer.java": [
      "final class StringCharBuffer extends CharBuffer {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/nio/Buffer.java": [
      "public abstract sealed class Buffer permits ByteBuffer, CharBuffer, DoubleBuffer, FloatBuffer, IntBuffer, LongBuffer, ShortBuffer {",
      "final MemorySessionImpl session();",
      "final void checkSession();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/nio/charset/Charset.java": [
      "private static class ThreadTrackHolder {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/nio/channels/FileChannel.java": [
      "public MemorySegment map(MapMode mode, long offset, long size, MemorySession session) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/java/text/DecimalFormatSymbols.java": [
      "public Locale getLocale();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/javax/net/ssl/X509KeyManager.java": [
      "String @Nullable [] getClientAliases(String keyType, Principal @Nullable [] issuers);",
      "String chooseClientAlias(String[] keyType, Principal @Nullable [] issuers, @Nullable Socket socket);",
      "String @Nullable [] getServerAliases(String keyType, Principal @Nullable [] issuers);",
      "String chooseServerAlias(String keyType, Principal @Nullable [] issuers, @Nullable Socket socket);",
      "X509Certificate @Nullable [] getCertificateChain(String alias);",
      "PrivateKey getPrivateKey(String alias);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.base/share/classes/javax/net/ssl/TrustManagerFactory.java": [
      "public static String getDefaultAlgorithm();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.jdi/share/classes/com/sun/tools/jdi/EventRequestManagerImpl.java": [
      "abstract class ThreadLifecycleEventRequestImpl extends ThreadVisibleEventRequestImpl {",
      "public synchronized void addPlatformThreadsOnlyFilter();",
      "class ThreadDeathRequestImpl extends ThreadLifecycleEventRequestImpl implements ThreadDeathRequest {",
      "class ThreadStartRequestImpl extends ThreadLifecycleEventRequestImpl implements ThreadStartRequest {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.jdi/share/classes/com/sun/tools/jdi/VirtualMachineImpl.java": [
      "boolean mayCreateVirtualThreads();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/ClassWriterImpl.java": [
      "protected final ClassTree classTree;",
      "public void printDocument(Content content) throws DocFileIOException;",
      "public Content getClassInfo(Content classInfo);",
      "public void addClassSignature(Content classInfo);",
      "public void addClassDescription(Content classInfo);",
      "public void addClassTagInfo(Content classInfo);",
      "public void addClassTree(Content target);",
      "public void addParamInfo(Content target);",
      "public void addSubClassInfo(Content target);",
      "public void addSubInterfacesInfo(Content target);",
      "public void addInterfaceUsageInfo(Content target);",
      "public void addImplementedInterfacesInfo(Content target);",
      "public void addSuperInterfacesInfo(Content target);",
      "public void addNestedClassInfo(final Content target);",
      "public void addFunctionalInterfaceInfo(Content target);",
      "public void addClassDeprecationInfo(Content classInfo);",
      "public Content getMemberDetails(Content content);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/SerializedFormWriterImpl.java": [
      "public void addSerialUIDInfo(String header, String serialUID, Content target);",
      "public void addSerializedContent(Content source);",
      "public void addPackageSerialized(Content serializedSummaries, Content packageSerialized);",
      "public void printDocument(Content source) throws DocFileIOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlDocletWriter.java": [
      "protected void addTagsInfo(Element e, Content content);",
      "protected Content getNavLinkToOverviewTree(String label);",
      "public void addSrcLink(Element element, Content label, Content target);",
      "public void addPreQualifiedClassLink(HtmlLinkInfo.Kind context, TypeElement typeElement, Content target);",
      "public void addPreQualifiedClassLink(HtmlLinkInfo.Kind context, TypeElement typeElement, HtmlStyle style, Content target);",
      "public void addPreQualifiedStrongClassLink(HtmlLinkInfo.Kind context, TypeElement typeElement, Content content);",
      "public void addInlineComment(Element element, DocTree tag, Content target);",
      "public void addInlineDeprecatedComment(Element e, DeprecatedTree tag, Content target);",
      "public void addSummaryComment(Element element, Content target);",
      "public void addPreviewComment(Element element, List<? extends DocTree> firstSentenceTags, Content target);",
      "public void addSummaryComment(Element element, List<? extends DocTree> firstSentenceTags, Content target);",
      "public void addSummaryDeprecatedComment(Element element, DeprecatedTree tag, Content target);",
      "public void addInlineComment(Element element, Content target);",
      "public Content commentTagsToContent(Element element, List<? extends DocTree> tags, boolean isFirstSentence);",
      "public Content commentTagsToContent(Element element, List<? extends DocTree> trees, boolean isFirstSentence, boolean inSummary);",
      "public Content commentTagsToContent(Element element, List<? extends DocTree> trees, TagletWriterImpl.Context context);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/TreeWriter.java": [
      "public TreeWriter(HtmlConfiguration configuration, DocPath filename, ClassTree classTree) {",
      "public static void generate(HtmlConfiguration configuration, ClassTree classTree) throws DocFileIOException;",
      "protected void addPackageTreeLinks(Content content);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/ModuleWriterImpl.java": [
      "public Content getSummary(Content source);",
      "public void addSummaryHeader(Content startMarker, Content heading, Content target);",
      "public void addModuleDescription(Content moduleContent);",
      "public void addModuleSignature(Content moduleContent);",
      "public void addModuleContent(Content source);",
      "public void printDocument(Content content) throws DocFileIOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlConfiguration.java": [
      "public ZonedDateTime getBuildDate();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlTree.java": [
      "public HtmlTree addUnchecked(Content content);",
      "public <T> HtmlTree addAll(Collection<T> items, Function<T, Content> mapper);",
      "public static HtmlTree A(URI ref, Content body);",
      "public static HtmlTree DETAILS(HtmlStyle style);",
      "public static HtmlTree PRE(Content body);",
      "public static HtmlTree SPAN(HtmlStyle styleClass);",
      "public static HtmlTree SUMMARY(Content body);",
      "public static HtmlTree UL(HtmlStyle style);",
      "public static <T> HtmlTree UL(HtmlStyle style, Collection<T> items, Function<T, Content> mapper);",
      "public boolean isDiscardable();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/WorkArounds.java": [
      "public DeclaredType overriddenType(ExecutableElement method);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/BaseConfiguration.java": [
      "public VisibleMemberTable getVisibleMemberTable(TypeElement te);",
      "public boolean isDocLintReferenceGroupEnabled();",
      "public boolean isDocLintSyntaxGroupEnabled();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/Content.java": [
      "public <T> Content addAll(Collection<T> items, Function<T, Content> mapper);",
      "public boolean isDiscardable();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/CommentHelper.java": [
      "public String getParameterName(ParamTree p);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/VisibleMemberTable.java": [
      "public boolean isNotSimpleOverride(ExecutableElement e);",
      "Collection<ExecutableElement> getImplementedMethods();",
      "private record OverriddenMethodInfo(ExecutableElement overriddenMethod, boolean simpleOverride) {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/Utils.java": [
      "public boolean isAnnotationInterface(Element e);",
      "public boolean isInterface(Element e);",
      "public boolean isPlainInterface(Element e);",
      "public boolean isNonThrowableClass(TypeElement te);",
      "public DeclaredType overriddenType(ExecutableElement method);",
      "public <T extends DocTree> List<T> getBlockTags(Element element, Predicate<DocTree> filter, Class<T> tClass);",
      "public List<ThrowsTree> getThrowsTrees(Element element);",
      "public List<ParamTree> getTypeParamTrees(Element element);",
      "public List<ParamTree> getParamTrees(Element element);",
      "public CommentHelper get(Element key);",
      "public PreviewFlagProvider setPreviewFlagProvider(PreviewFlagProvider provider);",
      "public interface PreviewFlagProvider {",
      "boolean isPreview(Element el);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/UncheckedDocletException.java": [
      "public Throwable initCause(Throwable cause);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/taglets/TagletManager.java": [
      "public void checkTags(Element element, Iterable<? extends DocTree> trees);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/Main.java": [
      "public Main() {",
      "public Main setStreams(PrintWriter outWriter, PrintWriter errWriter);",
      "public Main setFileManager(StandardJavaFileManager fileManager);",
      "public Result run(String... args);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/ToolEnvironment.java": [
      "public void printInfo(String key, Object... args);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/jdk.jlink/share/classes/jdk/tools/jmod/JmodOutputStream.java": [
      "static JmodOutputStream newOutputStream(Path file, LocalDateTime date) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.desktop/share/classes/java/awt/ScrollPaneAdjustable.java": [
      "public final class ScrollPaneAdjustable implements Adjustable, Serializable {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.desktop/share/classes/java/awt/MultipleGradientPaint.java": [
      "public abstract sealed class MultipleGradientPaint implements Paint permits LinearGradientPaint, RadialGradientPaint {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.desktop/share/classes/java/awt/PointerInfo.java": [
      "public final class PointerInfo {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.desktop/share/classes/java/awt/dnd/DropTargetContext.java": [
      "public final class DropTargetContext implements Serializable {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.desktop/share/classes/java/awt/color/ICC_Profile.java": [
      "public sealed class ICC_Profile implements Serializable permits ICC_ProfileGray, ICC_ProfileRGB {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.desktop/share/classes/java/awt/geom/Path2D.java": [
      "public abstract sealed class Path2D implements Shape, Cloneable permits Path2D.Double, Path2D.Float {",
      "public static non-sealed class Float extends Path2D implements Serializable {",
      "public static non-sealed class Double extends Path2D implements Serializable {",
      "static Rectangle2D getBounds2D(final PathIterator pi);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.desktop/share/classes/java/awt/geom/CubicCurve2D.java": [
      "public Rectangle2D getBounds2D();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.desktop/share/classes/java/awt/geom/QuadCurve2D.java": [
      "public Rectangle2D getBounds2D();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-19/src/java.desktop/share/classes/javax/swing/text/StyleConstants.java": [
      "public sealed class StyleConstants permits StyleConstants.CharacterConstants, StyleConstants.ColorConstants, StyleConstants.FontConstants, StyleConstants.ParagraphConstants {",
      "public static final class ParagraphConstants extends StyleConstants implements AttributeSet.ParagraphAttribute {",
      "public static final class CharacterConstants extends StyleConstants implements AttributeSet.CharacterAttribute {",
      "public static final class ColorConstants extends StyleConstants implements AttributeSet.ColorAttribute, AttributeSet.CharacterAttribute {",
      "public static final class FontConstants extends StyleConstants implements AttributeSet.FontAttribute, AttributeSet.CharacterAttribute {"
    ]
  },
  "jdk-20": {
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.zipfs/share/classes/jdk/nio/zipfs/ZipPath.java": [
      "public Path resolveSibling(String other);",
      "public boolean startsWith(String other);",
      "public boolean endsWith(String other);",
      "public File toFile();",
      "ZipFileAttributes readAttributesIfExists() throws IOException;",
      "boolean exists();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.compiler/share/classes/javax/lang/model/util/Elements.java": [
      "default boolean isCanonicalConstructor(ExecutableElement e);",
      "default boolean isCompactConstructor(ExecutableElement e);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.compiler/share/classes/com/sun/tools/javac/tree/TreeInfo.java": [
      "public static DiagnosticPosition diagnosticPositionFor(final Symbol sym, final JCTree tree, boolean returnNullIfNotFound, Predicate<? super JCTree> filter);",
      "protected boolean checkMatch(JCTree that, Symbol thatSym);",
      "public static JCPattern skipParens(JCPattern tree);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Type.java": [
      "public void setNormal();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Symbol.java": [
      "public RecordComponent findRecordComponentToRemove(JCVariableDecl var);",
      "public RecordComponent createRecordComponent(RecordComponent existing, JCVariableDecl rcDecl, VarSymbol varSym);",
      "public RecordComponent(VarSymbol field, JCVariableDecl ast) {",
      "public RecordComponent(VarSymbol field, JCVariableDecl ast, boolean isVarargs) {",
      "public JCVariableDecl declarationFor();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/unix/classes/sun/nio/fs/UnixFileSystem.java": [
      "boolean isCaseInsensitiveAndPreserving();",
      "protected static class Flags {",
      "static Flags fromCopyOptions(CopyOption... options);",
      "static Flags fromMoveOptions(CopyOption... options);",
      "int directCopy(int dst, int src, long addressToPollForCancel) throws UnixException;",
      "void bufferedCopy(int dst, int src, long address, int size, long addressToPollForCancel) throws UnixException;",
      "void copyFile(UnixPath source, UnixFileAttributes attrs, UnixPath target, Flags flags, long addressToPollForCancel) throws IOException;",
      "static void ensureEmptyDir(UnixPath dir) throws IOException;",
      "void move(UnixPath source, UnixPath target, CopyOption... options) throws IOException;",
      "void copy(final UnixPath source, final UnixPath target, CopyOption... options) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/net/www/HeaderParser.java": [
      "public OptionalInt findInt(String k);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/net/www/protocol/https/HttpsClient.java": [
      "public void closeServer();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/net/www/http/KeepAliveCache.java": [
      "HttpClient put(HttpClient h);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/util/ObjectIdentifier.java": [
      "void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/util/DerValue.java": [
      "public void encode(DerOutputStream out);",
      "public byte[] getDataBytes();",
      "public byte[] toByteArray();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/util/SignatureFileVerifier.java": [
      "public void process(Hashtable<String, CodeSigner[]> signers, List<Object> manifestDigests, String manifestName) throws IOException, SignatureException, NoSuchAlgorithmException, CertificateException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/provider/certpath/ResponderId.java": [
      "public enum Type {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/X500Name.java": [
      "public void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/GeneralSubtrees.java": [
      "public class GeneralSubtrees implements Cloneable, DerEncoder {",
      "public void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/CRLExtensions.java": [
      "public void encode(DerOutputStream out, boolean isExplicit);",
      "public Extension getExtension(String alias);",
      "public void setExtension(String alias, Extension ext);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/Extension.java": [
      "public class Extension implements java.security.cert.Extension, DerEncoder {",
      "public final void encode(OutputStream out) throws IOException;",
      "public void encode(DerOutputStream out);",
      "public String getName();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/GeneralNames.java": [
      "public void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/URIName.java": [
      "public void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/DNSName.java": [
      "public void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/X509Key.java": [
      "public class X509Key implements PublicKey, DerEncoder {",
      "protected void parseKeyBits() throws InvalidKeyException;",
      "public final void encode(DerOutputStream out);",
      "public byte[] getEncodedInternal();",
      "public byte[] encode();",
      "static void encode(DerOutputStream out, AlgorithmId algid, BitArray key);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/GeneralName.java": [
      "public class GeneralName implements DerEncoder {",
      "public void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/X509CertInfo.java": [
      "public class X509CertInfo {",
      "public void encode(DerOutputStream out) throws CertificateException;",
      "public CertificateExtensions getExtensions();",
      "public UniqueIdentity getIssuerUniqueId();",
      "public UniqueIdentity getSubjectUniqueId();",
      "public X500Name getIssuer();",
      "public X500Name getSubject();",
      "public void setVersion(CertificateVersion val);",
      "public CertificateVersion getVersion();",
      "public void setSerialNumber(CertificateSerialNumber val);",
      "public CertificateSerialNumber getSerialNumber();",
      "public void setAlgorithmId(CertificateAlgorithmId val);",
      "public CertificateAlgorithmId getAlgorithmId();",
      "public void setIssuer(X500Name val);",
      "public void setValidity(CertificateValidity val);",
      "public CertificateValidity getValidity();",
      "public void setSubject(X500Name val) throws CertificateException;",
      "public void setKey(CertificateX509Key val);",
      "public CertificateX509Key getKey();",
      "public void setIssuerUniqueId(UniqueIdentity val) throws CertificateException;",
      "public void setSubjectUniqueId(UniqueIdentity val) throws CertificateException;",
      "public void setExtensions(CertificateExtensions val) throws CertificateException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/IPAddressName.java": [
      "public void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/OIDName.java": [
      "public void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/AVA.java": [
      "public void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/KeyIdentifier.java": [
      "void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/EDIPartyName.java": [
      "public void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/PolicyInformation.java": [
      "public class PolicyInformation implements DerEncoder {",
      "public void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/OtherName.java": [
      "public void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/RDN.java": [
      "void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/CertificatePolicyId.java": [
      "public class CertificatePolicyId implements DerEncoder {",
      "public void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/DistributionPointName.java": [
      "public class DistributionPointName implements DerEncoder {",
      "public void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/CertificateExtensions.java": [
      "public class CertificateExtensions implements DerEncoder {",
      "public void encode(DerOutputStream out);",
      "public void encode(DerOutputStream out, boolean isCertReq);",
      "public void setExtension(String name, Extension ext);",
      "public Extension getExtension(String alias);",
      "public String getNameByOid(ObjectIdentifier oid);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/RFC822Name.java": [
      "public void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/DistributionPoint.java": [
      "public class DistributionPoint implements DerEncoder {",
      "public void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/GeneralSubtree.java": [
      "public class GeneralSubtree implements DerEncoder {",
      "public void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/AccessDescription.java": [
      "public void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/x509/AlgorithmId.java": [
      "public void encode(DerOutputStream out);",
      "public final byte[] encode();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/pkcs10/PKCS10.java": [
      "public void encodeAndSign(X500Name subject, PrivateKey key, String algorithm) throws SignatureException, NoSuchAlgorithmException, InvalidKeyException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/pkcs10/PKCS10Attributes.java": [
      "public void encode(DerOutputStream out);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/security/pkcs/EncryptedPrivateKeyInfo.java": [
      "public byte[] getEncoded();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/nio/ch/FileChannelImpl.java": [
      "public MemorySegment map(MapMode mode, long offset, long size, SegmentScope session) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/sun/nio/ch/FileDispatcher.java": [
      "abstract long allocationGranularity();",
      "abstract long map(FileDescriptor fd, int prot, long position, long length, boolean isSync) throws IOException;",
      "abstract int unmap(long address, long length);",
      "abstract int maxDirectTransferSize();",
      "abstract long transferTo(FileDescriptor src, long position, long count, FileDescriptor dst, boolean append);",
      "abstract long transferFrom(FileDescriptor src, FileDescriptor dst, long position, long count, boolean append);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/jdk/internal/module/ModuleReferenceImpl.java": [
      "private record CachedHash(byte[] hash, String algorithm) {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/net/URL.java": [
      "public static URL of(URI uri, URLStreamHandler handler) throws MalformedURLException;",
      "static String lowerCaseProtocol(String protocol);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/util/IdentityHashMap.java": [
      "public boolean remove(Object key, Object value);",
      "public boolean replace(K key, V oldValue, V newValue);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/util/stream/Collectors.java": [
      "record CollectorImpl<T, A, R>(Supplier<A> supplier, BiConsumer<A, T> accumulator, BinaryOperator<A> combiner, Function<A, R> finisher, Set<Characteristics> characteristics) implements Collector<T, A, R> {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/util/jar/JarVerifier.java": [
      "public Certificate[] getCerts(JarEntry entry);",
      "public CodeSigner[] getCodeSigners(JarEntry entry);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/util/regex/Matcher.java": [
      "public Map<String, Integer> namedGroups();",
      "public boolean hasMatch();",
      "public Map<String, Integer> namedGroups();",
      "public boolean hasMatch();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/util/regex/Pattern.java": [
      "public Map<String, Integer> namedGroups();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/util/regex/MatchResult.java": [
      "int start();",
      "int start(int group);",
      "default int start(String name);",
      "int end();",
      "int end(int group);",
      "default int end(String name);",
      "String group();",
      "String group(int group);",
      "default String group(String name);",
      "int groupCount();",
      "default Map<String, Integer> namedGroups();",
      "private int groupNumber(String name);",
      "default boolean hasMatch();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/util/zip/Inflater.java": [
      "boolean hasPendingOutput();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/util/zip/ZipInputStream.java": [
      "public int read() throws IOException;",
      "public byte[] readAllBytes() throws IOException;",
      "public byte[] readNBytes(int len) throws IOException;",
      "public int readNBytes(byte[] b, int off, int len) throws IOException;",
      "public void skipNBytes(long n) throws IOException;",
      "public long transferTo(OutputStream out) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/util/concurrent/ForkJoinPool.java": [
      "public <T> ForkJoinTask<T> externalSubmit(ForkJoinTask<T> task);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/security/KeyRep.java": [
      "public enum Type {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/security/Security.java": [
      "private static class Criteria {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/security/Principal.java": [
      "boolean equals(@Nullable Object another);",
      "String toString();",
      "int hashCode();",
      "String getName();",
      "default boolean implies(Subject subject);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/security/SecureClassLoader.java": [
      "private record CodeSourceKey(CodeSource cs) {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/security/Key.java": [
      "long serialVersionUID;",
      "String getAlgorithm();",
      "String getFormat();",
      "byte @Nullable [] getEncoded();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/security/KeyStore.java": [
      "public interface LoadStoreParameter {",
      "ProtectionParameter getProtectionParameter();",
      "public interface ProtectionParameter {",
      "public interface Entry {",
      "default Set<Attribute> getAttributes();",
      "interface Attribute {",
      "String getName();",
      "String getValue();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/security/cert/CertStore.java": [
      "public static String getDefaultType();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/security/interfaces/ECPrivateKey.java": [
      "long serialVersionUID;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/io/SequenceInputStream.java": [
      "public long transferTo(OutputStream out) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/io/PushbackInputStream.java": [
      "public long transferTo(OutputStream out) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/io/BufferedInputStream.java": [
      "public long transferTo(OutputStream out) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/io/Console.java": [
      "public class Console implements Flushable {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/math/BigInteger.java": [
      "static void putSignAndMag(BigInteger bi, int sign, int[] magnitude);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/math/BigDecimal.java": [
      "static void setIntValAndScale(BigDecimal bd, BigInteger intVal, int scale);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/Float.java": [
      "public static float float16ToFloat(short floatBinary16);",
      "public static short floatToFloat16(float f);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/Class.java": [
      "public Set<AccessFlag> accessFlags();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/String.java": [
      "static int checkBoundsOffCount(int offset, int count, int length);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/Character.java": [
      "public static final UnicodeBlock ARABIC_EXTENDED_C;",
      "public static final UnicodeBlock DEVANAGARI_EXTENDED_A;",
      "public static final UnicodeBlock KAWI;",
      "public static final UnicodeBlock KAKTOVIK_NUMERALS;",
      "public static final UnicodeBlock CYRILLIC_EXTENDED_D;",
      "public static final UnicodeBlock NAG_MUNDARI;",
      "public static final UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_H;",
      "KAWI,",
      "NAG_MUNDARI,"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/ThreadLocal.java": [
      "boolean isCarrierThreadLocalPresent();",
      "void removeCarrierThreadLocal();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/Thread.java": [
      "static Object scopedValueBindings();",
      "static void setScopedValueBindings(Object bindings);",
      "static native Object findScopedValueBindings();",
      "void inheritScopedValueBindings(ThreadContainer container);",
      "static native Object[] scopedValueCache();",
      "static native void setScopedValueCache(Object[] cache);",
      "static native void ensureMaterializedForStackWalk(Object o);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/invoke/LambdaForm.java": [
      "String debugString(int indentLevel);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/module/ModuleDescriptor.java": [
      "OPEN(AccessFlag.OPEN.mask()), AUTOMATIC(0), SYNTHETIC(AccessFlag.SYNTHETIC.mask()), MANDATED(AccessFlag.MANDATED.mask())",
      "TRANSITIVE(AccessFlag.TRANSITIVE.mask()), STATIC(AccessFlag.STATIC_PHASE.mask()), SYNTHETIC(AccessFlag.SYNTHETIC.mask()), MANDATED(AccessFlag.MANDATED.mask())",
      "public Set<AccessFlag> accessFlags();",
      "SYNTHETIC(AccessFlag.SYNTHETIC.mask()), MANDATED(AccessFlag.MANDATED.mask())",
      "public Set<AccessFlag> accessFlags();",
      "SYNTHETIC(AccessFlag.SYNTHETIC.mask()), MANDATED(AccessFlag.MANDATED.mask())",
      "public Set<AccessFlag> accessFlags();",
      "public Set<AccessFlag> accessFlags();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/reflect/Parameter.java": [
      "public Set<AccessFlag> accessFlags();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/reflect/Executable.java": [
      "public Set<AccessFlag> accessFlags();",
      "public abstract int getParameterCount();",
      "record ParameterData(@Stable Parameter[] parameters, boolean isReal) {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/reflect/Proxy.java": [
      "private record ProxyClassContext(Module module, String packageName, int accessFlags) {",
      "private ProxyClassContext {",
      "if (module.isNamed()) {",
      "if (packageName.isEmpty()) {",
      "throw new InternalError(\"Unnamed package cannot be added to \" + module);",
      "if (!module.getDescriptor().packages().contains(packageName)) {",
      "throw new InternalError(packageName + \" not exist in \" + module.getName());",
      "if (!module.isOpen(packageName, Proxy.class.getModule())) {",
      "throw new InternalError(packageName + \" not open to \" + Proxy.class.getModule());",
      "if (Modifier.isPublic(accessFlags)) {",
      "throw new InternalError(\"public proxy in unnamed module: \" + module);",
      "if ((accessFlags & ~Modifier.PUBLIC) != 0) {",
      "throw new InternalError(\"proxy access flags must be Modifier.PUBLIC or 0\");"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/lang/reflect/Field.java": [
      "public Set<AccessFlag> accessFlags();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/nio/file/spi/FileSystemProvider.java": [
      "public boolean exists(Path path, LinkOption... options);",
      "public <A extends BasicFileAttributes> A readAttributesIfExists(Path path, Class<A> type, LinkOption... options) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/nio/channels/FileChannel.java": [
      "public MemorySegment map(MapMode mode, long offset, long size, SegmentScope session) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/text/RBCollationTables.java": [
      "static void reverse(StringBuilder result, int from, int to);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.base/share/classes/java/text/PatternEntry.java": [
      "void addToBuilder(StringBuilder toAddTo, boolean showExtension, boolean showWhiteSpace, PatternEntry lastEntry);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.net.http/share/classes/jdk/internal/net/http/ConnectionPool.java": [
      "static CacheKey cacheKey(boolean secure, InetSocketAddress destination, InetSocketAddress proxy);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.naming/share/classes/javax/naming/spi/NamingManager.java": [
      "public static void setObjectFactoryBuilder(ObjectFactoryBuilder builder) throws NamingException;",
      "static ObjectFactoryBuilder getObjectFactoryBuilder();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlDocletWriter.java": [
      "public TagletWriterImpl getTagletWriterInstance(TagletWriterImpl.Context context);",
      "public Content getPackageLink(PackageElement packageElement, Content label, String fragment);",
      "public Content getModuleLink(ModuleElement mdle, Content label, String fragment);",
      "public URI resolveExternalSpecURI(URI specURI);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/ModuleWriterImpl.java": [
      "public void addIndirectPackages(Table<?> table, Map<ModuleElement, SortedSet<PackageElement>> ip);",
      "public void addUsesList(Table<?> table);",
      "public void addProvidesList(Table<?> table);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlConfiguration.java": [
      "EXTERNAL_SPECS,"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/TextBuilder.java": [
      "public boolean write(Writer out, String newline, boolean atNewline) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/Text.java": [
      "static int charCount(CharSequence cs);",
      "public boolean write(Writer out, String newline, boolean atNewline) throws IOException;",
      "public static final String NL;",
      "public static CharSequence normalizeNewlines(CharSequence text);",
      "static boolean checkNewlines(CharSequence cs);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/Comment.java": [
      "public boolean write(Writer out, String newline, boolean atNewline) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlTree.java": [
      "public static HtmlTree DETAILS();",
      "public boolean write(Writer out, String newline, boolean atNewline) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/RawHtml.java": [
      "protected final String rawHtmlContent;",
      "public static RawHtml of(CharSequence rawHtml);",
      "public static RawHtml startElement(CharSequence name, Content attrs, boolean selfClosing);",
      "public static RawHtml endElement(CharSequence name);",
      "public static RawHtml comment(String body);",
      "public static RawHtml cdata(String body);",
      "protected static int charCount(CharSequence htmlText);",
      "public boolean write(Writer out, String newline, boolean atNewline) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/ContentBuilder.java": [
      "public boolean write(Writer writer, String newline, boolean atNewline) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/Script.java": [
      "public boolean write(Writer writer, String newline, boolean atNewline) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/WorkArounds.java": [
      "public Map<? extends ExecutableElement, ? extends AnnotationValue> getJepInfo(String feature);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/Content.java": [
      "public abstract boolean write(Writer writer, String newline, boolean atNewline) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/CommentHelper.java": [
      "public String getReferencedFragment(String signature);",
      "public Element getReferencedElement(DocTree dtree);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/Utils.java": [
      "public Object getPreviewFeature(Element e);",
      "public List<? extends SpecTree> getSpecTrees(Element element);",
      "public DocFinder docFinder();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/taglets/SimpleTaglet.java": [
      "public Output inherit(Element owner, DocTree tag, boolean isFirstSentence, BaseConfiguration configuration);",
      "record Documentation(DocTree tag, List<? extends DocTree> description, ExecutableElement method) {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.jlink/share/classes/jdk/tools/jmod/JmodOutputStream.java": [
      "static JmodOutputStream newOutputStream(Path file, LocalDateTime date, int compressLevel) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.desktop/share/classes/sun/font/AttributeValues.java": [
      "public static float getTracking(Map<?, ?> map);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.desktop/share/classes/javax/swing/AbstractButton.java": [
      "public void setMultiClickThreshhold(long threshold);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/java.desktop/share/classes/javax/swing/text/DefaultEditorKit.java": [
      "public static final String beginLineUpAction;",
      "public static final String endLineDownAction;",
      "static class EndLineDownAction extends TextAction {",
      "public void actionPerformed(ActionEvent e);",
      "static class BeginLineUpAction extends TextAction {",
      "public void actionPerformed(ActionEvent e);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.hotspot/src/jdk/vm/ci/hotspot/HotSpotResolvedJavaFieldImpl.java": [
      "public JavaConstant getConstantValue();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.hotspot/src/jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.java": [
      "long getMethodPointer();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.meta/src/jdk/vm/ci/meta/PrimitiveConstant.java": [
      "public long getRawValue();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.meta/src/jdk/vm/ci/meta/Assumptions.java": [
      "public String toString();",
      "public final ResolvedJavaType receiverType;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.code/src/jdk/vm/ci/code/RegisterSaveLayout.java": [
      "public int size();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.code/src/jdk/vm/ci/code/BytecodeFrame.java": [
      "public void verifyInvariants();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-20/src/jdk.internal.vm.ci/share/classes/jdk.vm.ci.code/src/jdk/vm/ci/code/StackLockValue.java": [
      "public AllocatableValue getSlot();"
    ]
  },
  "jdk-21": {
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.compiler/share/classes/javax/lang/model/element/TypeElement.java": [
      "default boolean isUnnamed();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/classfile/Utility.java": [
      "public void write(final char[] cbuf, final int off, final int len) throws IOException;",
      "public void write(final int b) throws IOException;",
      "public static String accessToString(final int accessFlags);",
      "public static String accessToString(final int accessFlags, final boolean forClass);",
      "public static String classOrInterface(final int accessFlags);",
      "public static int clearBit(final int flag, final int i);",
      "public static String codeToString(final byte[] code, final ConstantPool constantPool, final int index, final int length);",
      "public static String codeToString(final byte[] code, final ConstantPool constantPool, final int index, final int length, final boolean verbose);",
      "public static String codeToString(final ByteSequence bytes, final ConstantPool constantPool) throws IOException;",
      "public static String codeToString(final ByteSequence bytes, final ConstantPool constantPool, final boolean verbose) throws IOException;",
      "public static String compactClassName(final String str);",
      "public static String compactClassName(final String str, final boolean chopit);",
      "public static String compactClassName(String str, final String prefix, final boolean chopit);",
      "public static byte[] decode(final String s, final boolean uncompress) throws IOException;",
      "public static String encode(byte[] bytes, final boolean compress) throws IOException;",
      "public static String fillup(final String str, final int length, final boolean leftJustify, final char fill);",
      "public static String format(final int i, final int length, final boolean leftJustify, final char fill);",
      "public static String getSignature(String type);",
      "public static boolean isJavaIdentifierPart(final char ch);",
      "public static boolean isSet(final int flag, final int i);",
      "public static String[] methodSignatureArgumentTypes(final String signature) throws ClassFormatException;",
      "public static String[] methodSignatureArgumentTypes(final String signature, final boolean chopit) throws ClassFormatException;",
      "public static String methodSignatureReturnType(final String signature) throws ClassFormatException;",
      "public static String methodSignatureReturnType(final String signature, final boolean chopit) throws ClassFormatException;",
      "public static String methodSignatureToString(final String signature, final String name, final String access);",
      "public static String methodSignatureToString(final String signature, final String name, final String access, final boolean chopit);",
      "public static String methodSignatureToString(final String signature, final String name, final String access, final boolean chopit, final LocalVariableTable vars) throws ClassFormatException;",
      "public static String methodTypeToSignature(final String ret, final String[] argv) throws ClassFormatException;",
      "public static String packageToPath(final String name);",
      "public static String pathToPackage(final String str);",
      "public static String printArray(final Object[] obj);",
      "public static String printArray(final Object[] obj, final boolean braces);",
      "public static String printArray(final Object[] obj, final boolean braces, final boolean quote);",
      "public static void printArray(final PrintStream out, final Object[] obj);",
      "public static void printArray(final PrintWriter out, final Object[] obj);",
      "public static String replace(String str, final String old, final String new_);",
      "public static short searchOpcode(String name);",
      "public static int setBit(final int flag, final int i);",
      "public static String signatureToString(final String signature);",
      "public static String signatureToString(final String signature, final boolean chopit);",
      "public static String toHexString(final byte[] bytes);",
      "public static byte typeOfMethodSignature(final String signature) throws ClassFormatException;",
      "public static byte typeOfSignature(final String signature) throws ClassFormatException;",
      "public static String typeSignatureToString(final String signature, final boolean chopit) throws ClassFormatException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/Select.java": [
      "protected int[] match;",
      "protected int[] indices;",
      "protected InstructionHandle[] targets;",
      "protected int fixed_length;",
      "protected int match_length;",
      "protected int padding;",
      "protected Object clone() throws CloneNotSupportedException;",
      "void dispose();",
      "public void dump(final DataOutputStream out) throws IOException;",
      "final int getFixedLength();",
      "public int[] getIndices();",
      "final int getIndices(final int index);",
      "final int getMatch(final int index);",
      "final int getMatchLength();",
      "final int getPadding();",
      "final InstructionHandle getTarget(final int index);",
      "protected void initFromFile(final ByteSequence bytes, final boolean wide) throws IOException;",
      "final void setFixedLength(final int fixedLength);",
      "final int setIndices(final int i, final int value);",
      "final void setIndices(final int[] array);",
      "final void setMatches(final int[] array);",
      "final int setMatchLength(final int matchLength);",
      "public void setTarget(final int i, final InstructionHandle target);",
      "public String toString(final boolean verbose);",
      "protected int updatePosition(final int offset, final int maxOffset);",
      "public void updateTarget(final InstructionHandle oldIh, final InstructionHandle newIh);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/InstructionList.java": [
      "public static InstructionHandle findHandle(final InstructionHandle[] ihs, final int[] pos, final int count, final int target);",
      "public InstructionList(final BranchInstruction i) {",
      "public InstructionList(final byte[] code) {",
      "public InstructionList(final CompoundInstruction c) {",
      "public void addObserver(final InstructionListObserver o);",
      "public BranchHandle append(final BranchInstruction i);",
      "public InstructionHandle append(final CompoundInstruction c);",
      "public InstructionHandle append(final Instruction i);",
      "public InstructionHandle append(final Instruction i, final CompoundInstruction c);",
      "public InstructionHandle append(final Instruction i, final Instruction j);",
      "public BranchHandle append(final InstructionHandle ih, final BranchInstruction i);",
      "public InstructionHandle append(final InstructionHandle ih, final InstructionList il);",
      "public InstructionHandle append(final InstructionList il);",
      "public boolean contains(final Instruction i);",
      "public boolean contains(final InstructionHandle i);",
      "public InstructionList copy();",
      "public void delete(final Instruction i) throws TargetLostException;",
      "public void delete(final Instruction from, final Instruction to) throws TargetLostException;",
      "public void delete(final InstructionHandle ih) throws TargetLostException;",
      "public void delete(final InstructionHandle from, final InstructionHandle to) throws TargetLostException;",
      "public void dispose();",
      "public InstructionHandle findHandle(final int pos);",
      "public byte[] getByteCode();",
      "public InstructionHandle getEnd();",
      "public InstructionHandle[] getInstructionHandles();",
      "public int[] getInstructionPositions();",
      "public Instruction[] getInstructions();",
      "public int getLength();",
      "public InstructionHandle getStart();",
      "public BranchHandle insert(final BranchInstruction i);",
      "public InstructionHandle insert(final CompoundInstruction c);",
      "public InstructionHandle insert(final Instruction i);",
      "public InstructionHandle insert(final Instruction i, final CompoundInstruction c);",
      "public InstructionHandle insert(final Instruction i, final Instruction j);",
      "public InstructionHandle insert(final Instruction i, final InstructionList il);",
      "public BranchHandle insert(final InstructionHandle ih, final BranchInstruction i);",
      "public InstructionHandle insert(final InstructionHandle ih, final CompoundInstruction c);",
      "public InstructionHandle insert(final InstructionHandle ih, final Instruction i);",
      "public boolean isEmpty();",
      "public Iterator<InstructionHandle> iterator();",
      "public void move(final InstructionHandle ih, final InstructionHandle target);",
      "public void redirectBranches(final InstructionHandle oldTarget, final InstructionHandle newTarget);",
      "public void redirectExceptionHandlers(final CodeExceptionGen[] exceptions, final InstructionHandle oldTarget, final InstructionHandle newTarget);",
      "public void redirectLocalVariables(final LocalVariableGen[] lg, final InstructionHandle oldTarget, final InstructionHandle newTarget);",
      "public void removeObserver(final InstructionListObserver o);",
      "public void replaceConstantPool(final ConstantPoolGen oldCp, final ConstantPoolGen newCp);",
      "public int size();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/InstructionTargeter.java": [
      "void updateTarget(InstructionHandle oldIh, InstructionHandle newIh) throws ClassGenException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/LineNumberGen.java": [
      "public LineNumberGen(final InstructionHandle ih, final int srcLine) {",
      "public Object clone();",
      "public InstructionHandle getInstruction();",
      "public int getSourceLine();",
      "public void setSourceLine(final int srcLine);",
      "public void updateTarget(final InstructionHandle oldIh, final InstructionHandle newIh);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/CodeExceptionGen.java": [
      "public Object clone();",
      "public CodeException getCodeException(final ConstantPoolGen cp);",
      "public InstructionHandle getStartPC();",
      "public void setCatchType(final ObjectType catchType);",
      "public void setEndPC(final InstructionHandle endPc);",
      "public void setHandlerPC(final InstructionHandle handlerPc);",
      "public void setStartPC(final InstructionHandle startPc);",
      "public void updateTarget(final InstructionHandle oldIh, final InstructionHandle newIh);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/LocalVariableGen.java": [
      "public Object clone();",
      "public boolean containsTarget(final InstructionHandle ih);",
      "void dispose();",
      "public boolean equals(final Object o);",
      "public InstructionHandle getEnd();",
      "public int getIndex();",
      "public boolean getLiveToEnd();",
      "public String getName();",
      "public int getOrigIndex();",
      "public InstructionHandle getStart();",
      "public Type getType();",
      "public int hashCode();",
      "public void setEnd(final InstructionHandle end);",
      "public void setLiveToEnd(final boolean liveToEnd);",
      "public void setStart(final InstructionHandle start);",
      "public void updateTarget(final InstructionHandle oldIh, final InstructionHandle newIh);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/BranchInstruction.java": [
      "static void notifyTarget(final InstructionHandle oldIh, final InstructionHandle newIh, final InstructionTargeter t);",
      "protected int index;",
      "protected InstructionHandle target;",
      "protected int position;",
      "void dispose();",
      "public void dump(final DataOutputStream out) throws IOException;",
      "public final int getIndex();",
      "public InstructionHandle getTarget();",
      "protected int getTargetOffset();",
      "protected int getTargetOffset(final InstructionHandle target);",
      "protected void initFromFile(final ByteSequence bytes, final boolean wide) throws IOException;",
      "protected void setIndex(final int index);",
      "void setOpcode(final short opcode);",
      "public void setTarget(final InstructionHandle target);",
      "public String toString(final boolean verbose);",
      "protected int updatePosition(final int offset, final int maxOffset);",
      "public void updateTarget(final InstructionHandle oldIh, final InstructionHandle newIh);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.xml/share/classes/com/sun/org/apache/bcel/internal/generic/ClassGen.java": [
      "public static BCELComparator getComparator();",
      "public static void setComparator(final BCELComparator comparator);",
      "public ClassGen(final JavaClass clazz) {",
      "public ClassGen(final String className, final String superClassName, final String fileName, final int accessFlags, final String[] interfaces, final ConstantPoolGen cp) {",
      "public void addAnnotationEntry(final AnnotationEntryGen a);",
      "public void addAttribute(final Attribute a);",
      "public void addEmptyConstructor(final int accessFlags);",
      "public void addField(final Field f);",
      "public void addObserver(final ClassObserver o);",
      "public Object clone();",
      "public boolean equals(final Object obj);",
      "public AnnotationEntryGen[] getAnnotationEntries();",
      "public Attribute[] getAttributes();",
      "public int getClassNameIndex();",
      "public ConstantPoolGen getConstantPool();",
      "public Field[] getFields();",
      "public JavaClass getJavaClass();",
      "public int getMajor();",
      "public Method getMethodAt(final int pos);",
      "public Method[] getMethods();",
      "public int getMinor();",
      "public String getSuperclassName();",
      "public int hashCode();",
      "public void removeAttribute(final Attribute a);",
      "public void removeField(final Field f);",
      "public void removeInterface(final String name);",
      "public void removeMethod(final Method m);",
      "public void replaceField(final Field old, final Field newField);",
      "public void replaceMethod(final Method old, final Method newMethod);",
      "public void setClassName(final String name);",
      "public void setClassNameIndex(final int classNameIndex);",
      "public void setConstantPool(final ConstantPoolGen constantPool);",
      "public void setMajor(final int major);",
      "public void setMethodAt(final Method method, final int pos);",
      "public void setMethods(final Method[] methods);",
      "public void setMinor(final int minor);",
      "public void setSuperclassName(final String name);",
      "public void setSuperclassNameIndex(final int superclassNameIndex);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.compiler/share/classes/com/sun/tools/javac/tree/TreeInfo.java": [
      "public static boolean unguardedCase(JCCase cse);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Type.java": [
      "protected final List<TypeMetadata> metadata;",
      "public Type(TypeSymbol tsym, List<TypeMetadata> metadata) {",
      "protected Type cloneWithMetadata(List<TypeMetadata> metadata);",
      "public List<TypeMetadata> getMetadata();",
      "public <M extends TypeMetadata> M getMetadata(Class<M> metadataClass);",
      "public <M extends TypeMetadata, Z> Z getMetadata(Class<M> metadataClass, Function<M, Z> metadataFunc, Z defaultValue);",
      "public Type addMetadata(TypeMetadata md);",
      "public Type dropMetadata(Class<? extends TypeMetadata> metadataClass);",
      "public Type preannotatedType();",
      "protected JCPrimitiveType cloneWithMetadata(List<TypeMetadata> md);",
      "public WildcardType(Type type, BoundKind kind, TypeSymbol tsym, List<TypeMetadata> metadata) {",
      "public WildcardType(Type type, BoundKind kind, TypeSymbol tsym, TypeVar bound, List<TypeMetadata> metadata) {",
      "protected WildcardType cloneWithMetadata(List<TypeMetadata> md);",
      "public ClassType(Type outer, List<Type> typarams, TypeSymbol tsym, List<TypeMetadata> metadata) {",
      "protected ClassType cloneWithMetadata(List<TypeMetadata> md);",
      "public ErasedClassType(Type outer, TypeSymbol tsym, List<TypeMetadata> metadata) {",
      "public ArrayType(Type elemtype, TypeSymbol arrayClass, List<TypeMetadata> metadata) {",
      "protected ArrayType cloneWithMetadata(List<TypeMetadata> md);",
      "public TypeVar(TypeSymbol tsym, Type bound, Type lower, List<TypeMetadata> metadata) {",
      "protected TypeVar cloneWithMetadata(List<TypeMetadata> md);",
      "public CapturedType(TypeSymbol tsym, Type bound, Type upper, Type lower, WildcardType wildcard, List<TypeMetadata> metadata) {",
      "protected CapturedType cloneWithMetadata(List<TypeMetadata> md);",
      "public DelegatedType(TypeTag tag, Type qtype, List<TypeMetadata> metadata) {",
      "protected ErrorType cloneWithMetadata(List<TypeMetadata> md);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Symbol.java": [
      "public Name getSimpleName();",
      "public boolean isUnnamed();",
      "public boolean isUnnamedVariable();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.compiler/share/classes/com/sun/source/tree/Tree.java": [
      "TEMPLATE(StringTemplateTree.class),",
      "ANY_PATTERN(AnyPatternTree.class),"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/P11Key.java": [
      "static SecretKey pbeKey(Session session, long keyID, String algorithm, int keyLength, CK_ATTRIBUTE[] attrs, char[] password, byte[] salt, int iterationCount);",
      "static final class P11PBEKey extends P11SecretKey implements PBEKey {",
      "public char[] getPassword();",
      "public byte[] getSalt();",
      "public int getIterationCount();",
      "void clearPassword();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/wrapper/Functions.java": [
      "public static int getLength(byte[] value);",
      "public static String getPrfName(long id);",
      "public static long getPrfId(String name);",
      "public static String getParamSourcesName(long id);",
      "public static long getParamSourcesId(String name);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.logging/share/classes/java/util/logging/Handler.java": [
      "boolean tryUseLock();",
      "void unlock();",
      "public void setFormatter(Formatter newFormatter) throws SecurityException;",
      "public void setEncoding(@Nullable String encoding) throws SecurityException, java.io.UnsupportedEncodingException;",
      "public void setFilter(@Nullable Filter newFilter) throws SecurityException;",
      "public void setErrorManager(ErrorManager em);",
      "public void setLevel(Level newLevel) throws SecurityException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.logging/share/classes/java/util/logging/ErrorManager.java": [
      "public void error(String msg, Exception ex, int code);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/utils/IdealGraphVisualizer/Filter/src/main/java/com/sun/hotspot/igv/filter/FilterChain.java": [
      "public FilterChain(String name) {",
      "public void sortBy(List<String> order);",
      "public void applyInOrder(Diagram diagram, FilterChain filterOrder);",
      "public void clearFilters();",
      "public void addFilters(List<Filter> filtersToAdd);",
      "public String getName();",
      "public String toString();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/sun/net/www/protocol/https/HttpsURLConnectionImpl.java": [
      "public long getHeaderFieldDate(String name, long defaultValue);",
      "public int getHeaderFieldInt(String name, int defaultValue);",
      "public long getHeaderFieldLong(String name, long defaultValue);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/sun/net/www/http/KeepAliveCache.java": [
      "public class KeepAliveCache extends HashMap<KeepAliveKey, KeepAliveCache.ClientVector> implements Runnable {",
      "class ClientVector extends ArrayDeque<KeepAliveEntry> {",
      "HttpClient get();",
      "HttpClient put(HttpClient h);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/sun/security/util/SignatureFileVerifier.java": [
      "public static final int MAX_SIG_FILE_SIZE;",
      "public static boolean isInMetaInf(String name);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/sun/security/x509/X509Key.java": [
      "void decode(DerValue val) throws InvalidKeyException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/sun/security/x509/AlgorithmId.java": [
      "public static final ObjectIdentifier SHA1withRSA_oid;",
      "public static final ObjectIdentifier SHA224withRSA_oid;",
      "public static final ObjectIdentifier SHA256withRSA_oid;",
      "public static final ObjectIdentifier SHA384withRSA_oid;",
      "public static final ObjectIdentifier SHA512withRSA_oid;",
      "public static final ObjectIdentifier SHA512$224withRSA_oid;",
      "public static final ObjectIdentifier SHA512$256withRSA_oid;",
      "public static final ObjectIdentifier MD2withRSA_oid;",
      "public static final ObjectIdentifier MD5withRSA_oid;",
      "public static final ObjectIdentifier SHA3_224withRSA_oid;",
      "public static final ObjectIdentifier SHA3_256withRSA_oid;",
      "public static final ObjectIdentifier SHA3_384withRSA_oid;",
      "public static final ObjectIdentifier SHA3_512withRSA_oid;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/sun/security/pkcs/PKCS8Key.java": [
      "public class PKCS8Key implements PrivateKey, InternalPrivateKey {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/sun/nio/ch/FileChannelImpl.java": [
      "public static FileChannel open(FileDescriptor fd, String path, boolean readable, boolean writable, boolean direct, Closeable parent);",
      "public MemorySegment map(MapMode mode, long offset, long size, Arena arena) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/net/InetSocketAddress.java": [
      "private static final class InetSocketAddressHolder {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/net/Socket.java": [
      "SocketImpl impl();",
      "void setConnectedImpl(SocketImpl si) throws SocketException;",
      "void setConnected();",
      "public void setSoTimeout(int timeout) throws SocketException;",
      "public int getSoTimeout() throws SocketException;",
      "public void setSendBufferSize(int size) throws SocketException;",
      "public int getSendBufferSize() throws SocketException;",
      "public void setReceiveBufferSize(int size) throws SocketException;",
      "public int getReceiveBufferSize() throws SocketException;",
      "public void close() throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/net/InetAddress.java": [
      "private static class CachedLookup implements Addresses, Comparable<CachedLookup> {",
      "public int compareTo(CachedLookup other);",
      "public boolean tryRemoveExpiredAddress(long now);",
      "private static final class ValidCachedLookup extends CachedLookup {",
      "public InetAddress[] get();",
      "public boolean tryRemoveExpiredAddress(long now);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/TreeMap.java": [
      "public V putFirst(K k, V v);",
      "public V putLast(K k, V v);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/LinkedList.java": [
      "public LinkedList<E> reversed();",
      "static class ReverseOrderLinkedListView<E> extends LinkedList<E> implements java.io.Externalizable {",
      "public String toString();",
      "public boolean retainAll(Collection<?> c);",
      "public boolean removeAll(Collection<?> c);",
      "public boolean containsAll(Collection<?> c);",
      "public boolean isEmpty();",
      "public Stream<E> parallelStream();",
      "public Stream<E> stream();",
      "public boolean removeIf(Predicate<? super E> filter);",
      "public <T> T[] toArray(IntFunction<T[]> generator);",
      "public void forEach(Consumer<? super E> action);",
      "public Iterator<E> iterator();",
      "public int hashCode();",
      "public boolean equals(Object o);",
      "public List<E> subList(int fromIndex, int toIndex);",
      "public ListIterator<E> listIterator();",
      "public void sort(Comparator<? super E> c);",
      "public void replaceAll(UnaryOperator<E> operator);",
      "public LinkedList<E> reversed();",
      "public Spliterator<E> spliterator();",
      "public <T> T[] toArray(T[] a);",
      "public Object[] toArray();",
      "public Iterator<E> descendingIterator();",
      "public ListIterator<E> listIterator(int index);",
      "public boolean removeLastOccurrence(Object o);",
      "public boolean removeFirstOccurrence(Object o);",
      "public E pop();",
      "public void push(E e);",
      "public E pollLast();",
      "public E pollFirst();",
      "public E peekLast();",
      "public E peekFirst();",
      "public boolean offerLast(E e);",
      "public boolean offerFirst(E e);",
      "public boolean offer(E e);",
      "public E remove();",
      "public E poll();",
      "public E element();",
      "public E peek();",
      "public int lastIndexOf(Object o);",
      "public int indexOf(Object o);",
      "public E remove(int index);",
      "public void add(int index, E element);",
      "public E set(int index, E element);",
      "public E get(int index);",
      "public void clear();",
      "public boolean addAll(int index, Collection<? extends E> c);",
      "public boolean addAll(Collection<? extends E> c);",
      "public boolean remove(Object o);",
      "public boolean add(E e);",
      "public int size();",
      "public boolean contains(Object o);",
      "public void addLast(E e);",
      "public void addFirst(E e);",
      "public E removeLast();",
      "public E removeFirst();",
      "public E getLast();",
      "public E getFirst();",
      "public void readExternal(ObjectInput in) throws IOException, ClassNotFoundException;",
      "public void writeExternal(ObjectOutput out) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/SortedSet.java": [
      "public interface SortedSet<E> extends Set<E>, SequencedSet<E> {",
      "default void addFirst(E e);",
      "default void addLast(E e);",
      "default E getFirst();",
      "default E getLast();",
      "default E removeFirst();",
      "default E removeLast();",
      "default SortedSet<E> reversed();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/LinkedHashMap.java": [
      "public class LinkedHashMap<K, V> extends HashMap<K, V> implements SequencedMap<K, V> {",
      "public V putFirst(K k, V v);",
      "public V putLast(K k, V v);",
      "public SequencedSet<K> sequencedKeySet();",
      "static <K1, V1> Node<K1, V1> nsee(Node<K1, V1> node);",
      "final <T> T[] keysToArray(T[] a, boolean reversed);",
      "final <T> T[] valuesToArray(T[] a, boolean reversed);",
      "final class LinkedKeySet extends AbstractSet<K> implements SequencedSet<K> {",
      "public final void addFirst(K k);",
      "public final void addLast(K k);",
      "public final K getFirst();",
      "public final K getLast();",
      "public final K removeFirst();",
      "public final K removeLast();",
      "public SequencedSet<K> reversed();",
      "public SequencedCollection<V> sequencedValues();",
      "final class LinkedValues extends AbstractCollection<V> implements SequencedCollection<V> {",
      "public final void addFirst(V v);",
      "public final void addLast(V v);",
      "public final V getFirst();",
      "public final V getLast();",
      "public final V removeFirst();",
      "public final V removeLast();",
      "public SequencedCollection<V> reversed();",
      "public SequencedSet<Map.Entry<K, V>> sequencedEntrySet();",
      "final class LinkedEntrySet extends AbstractSet<Map.Entry<K, V>> implements SequencedSet<Map.Entry<K, V>> {",
      "final Node<K, V> nsee(Node<K, V> e);",
      "public final void addFirst(Map.Entry<K, V> e);",
      "public final void addLast(Map.Entry<K, V> e);",
      "public final Map.Entry<K, V> getFirst();",
      "public final Map.Entry<K, V> getLast();",
      "public final Map.Entry<K, V> removeFirst();",
      "public final Map.Entry<K, V> removeLast();",
      "public SequencedSet<Map.Entry<K, V>> reversed();",
      "public SequencedMap<K, V> reversed();",
      "static class ReversedLinkedHashMapView<K, V> extends AbstractMap<K, V> implements SequencedMap<K, V> {",
      "public boolean equals(Object o);",
      "public int hashCode();",
      "public int size();",
      "public boolean isEmpty();",
      "public boolean containsKey(Object key);",
      "public boolean containsValue(Object value);",
      "public V get(Object key);",
      "public V put(K key, V value);",
      "public V remove(Object key);",
      "public void putAll(Map<? extends K, ? extends V> m);",
      "public void clear();",
      "public Set<K> keySet();",
      "public Collection<V> values();",
      "public Set<Entry<K, V>> entrySet();",
      "public V getOrDefault(Object key, V defaultValue);",
      "public void forEach(BiConsumer<? super K, ? super V> action);",
      "public void replaceAll(BiFunction<? super K, ? super V, ? extends V> function);",
      "public V putIfAbsent(K key, V value);",
      "public boolean remove(Object key, Object value);",
      "public boolean replace(K key, V oldValue, V newValue);",
      "public V replace(K key, V value);",
      "public V computeIfAbsent(K key, Function<? super K, ? extends V> mappingFunction);",
      "public V computeIfPresent(K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction);",
      "public V compute(K key, BiFunction<? super K, ? super V, ? extends V> remappingFunction);",
      "public V merge(K key, V value, BiFunction<? super V, ? super V, ? extends V> remappingFunction);",
      "public SequencedMap<K, V> reversed();",
      "public Entry<K, V> firstEntry();",
      "public Entry<K, V> lastEntry();",
      "public Entry<K, V> pollFirstEntry();",
      "public Entry<K, V> pollLastEntry();",
      "public V putFirst(K k, V v);",
      "public V putLast(K k, V v);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/NavigableMap.java": [
      "default NavigableMap<K, V> reversed();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/ImmutableCollections.java": [
      "public List<E> reversed();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/List.java": [
      "public interface List<E> extends SequencedCollection<E> {",
      "default void addFirst(E e);",
      "default void addLast(E e);",
      "default E getFirst();",
      "default E getLast();",
      "default E removeFirst();",
      "default E removeLast();",
      "default List<E> reversed();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/ArrayList.java": [
      "public E getFirst();",
      "public E getLast();",
      "public void addFirst(E element);",
      "public void addLast(E element);",
      "public E removeFirst();",
      "public E removeLast();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/Locale.java": [
      "public static Stream<Locale> availableLocales();",
      "public static String caseFoldLanguageTag(String languageTag);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/Formatter.java": [
      "static List<FormatString> parse(String s);",
      "interface FormatString {",
      "static class FormatSpecifier implements FormatString {",
      "static class Flags {",
      "static class Conversion {",
      "static class DateTime {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/Deque.java": [
      "public interface Deque<E> extends Queue<E>, SequencedCollection<E> {",
      "default Deque<E> reversed();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/AbstractMap.java": [
      "abstract static class ViewCollection<E> implements Collection<E> {",
      "UnsupportedOperationException uoe();",
      "abstract Collection<E> view();",
      "public boolean add(E t);",
      "public boolean addAll(Collection<? extends E> c);",
      "public void clear();",
      "public boolean contains(Object o);",
      "public boolean containsAll(Collection<?> c);",
      "public void forEach(Consumer<? super E> c);",
      "public boolean isEmpty();",
      "public Iterator<E> iterator();",
      "public Stream<E> parallelStream();",
      "public boolean remove(Object o);",
      "public boolean removeAll(Collection<?> c);",
      "public boolean removeIf(Predicate<? super E> filter);",
      "public boolean retainAll(Collection<?> c);",
      "public int size();",
      "public Spliterator<E> spliterator();",
      "public Stream<E> stream();",
      "public Object[] toArray();",
      "public <T> T[] toArray(IntFunction<T[]> generator);",
      "public <T> T[] toArray(T[] a);",
      "public String toString();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/LinkedHashSet.java": [
      "public class LinkedHashSet<E> extends HashSet<E> implements SequencedSet<E>, Cloneable, java.io.Serializable {",
      "LinkedHashMap<E, Object> map();",
      "public void addFirst(E e);",
      "public void addLast(E e);",
      "public E getFirst();",
      "public E getLast();",
      "public E removeFirst();",
      "public E removeLast();",
      "public SequencedSet<E> reversed();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/Collections.java": [
      "public static void shuffle(List<?> list, Random rnd);",
      "public static void shuffle(@GuardSatisfied List<?> list, RandomGenerator rnd);",
      "public static <T> SequencedCollection<T> unmodifiableSequencedCollection(SequencedCollection<? extends T> c);",
      "static class UnmodifiableSequencedCollection<E> extends UnmodifiableCollection<E> implements SequencedCollection<E>, Serializable {",
      "public SequencedCollection<E> reversed();",
      "public void addFirst(E e);",
      "public void addLast(E e);",
      "public E getFirst();",
      "public E getLast();",
      "public E removeFirst();",
      "public E removeLast();",
      "public static <T> SequencedSet<T> unmodifiableSequencedSet(SequencedSet<? extends T> s);",
      "static class UnmodifiableSequencedSet<E> extends UnmodifiableSequencedCollection<E> implements SequencedSet<E>, Serializable {",
      "public boolean equals(Object o);",
      "public int hashCode();",
      "public SequencedSet<E> reversed();",
      "public static <K, V> SequencedMap<K, V> unmodifiableSequencedMap(SequencedMap<? extends K, ? extends V> m);",
      "private static class UnmodifiableSequencedMap<K, V> extends UnmodifiableMap<K, V> implements SequencedMap<K, V>, Serializable {",
      "public SequencedMap<K, V> reversed();",
      "public Entry<K, V> pollFirstEntry();",
      "public Entry<K, V> pollLastEntry();",
      "public V putFirst(K k, V v);",
      "public V putLast(K k, V v);",
      "public static <E> SequencedSet<E> newSequencedSetFromMap(SequencedMap<E, Boolean> map);",
      "private static class SequencedSetFromMap<E> extends SetFromMap<E> implements SequencedSet<E> {",
      "public SequencedSet<E> reversed();",
      "public void addFirst(E e);",
      "public void addLast(E e);",
      "public E getFirst();",
      "public E getLast();",
      "public E removeFirst();",
      "public E removeLast();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/Arrays.java": [
      "public final class Arrays {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/NavigableSet.java": [
      "default E removeFirst();",
      "default E removeLast();",
      "default NavigableSet<E> reversed();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/SortedMap.java": [
      "public interface SortedMap<K, V> extends SequencedMap<K, V> {",
      "default V putFirst(K k, V v);",
      "default V putLast(K k, V v);",
      "default SortedMap<K, V> reversed();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/TreeSet.java": [
      "public void addFirst(E e);",
      "public void addLast(E e);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/stream/Collectors.java": [
      "public int size();",
      "public boolean isEmpty();",
      "public T get(Object key);",
      "public boolean containsKey(Object key);",
      "public boolean containsValue(Object value);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/regex/Pattern.java": [
      "public String @MinLen(1) [] splitWithDelimiters(CharSequence input, int limit);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/zip/ZipCoder.java": [
      "Comparison compare(String str, byte[] b, int off, int len, boolean matchDirectory);",
      "Comparison compare(String str, byte[] b, int off, int len, boolean matchDirectory);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/concurrent/CopyOnWriteArrayList.java": [
      "public E getFirst();",
      "public E getLast();",
      "public void addFirst(E e);",
      "public void addLast(E e);",
      "public E removeFirst();",
      "public E removeLast();",
      "public E getFirst();",
      "public E getLast();",
      "public void addFirst(E e);",
      "public void addLast(E e);",
      "public E removeFirst();",
      "public E removeLast();",
      "public List<E> reversed();",
      "public List<E> reversed();",
      "private static class Reversed<E> implements List<E>, RandomAccess {",
      "class DescendingIterator implements Iterator<E> {",
      "public boolean hasNext();",
      "public E next();",
      "public void remove();",
      "class DescendingListIterator implements ListIterator<E> {",
      "public boolean hasNext();",
      "public E next();",
      "public boolean hasPrevious();",
      "public E previous();",
      "public int nextIndex();",
      "public int previousIndex();",
      "public void remove();",
      "public void set(E e);",
      "public void add(E e);",
      "public void forEach(Consumer<? super E> action);",
      "public Iterator<E> iterator();",
      "public Spliterator<E> spliterator();",
      "public boolean add(E e);",
      "public boolean addAll(Collection<? extends E> c);",
      "public void clear();",
      "public boolean contains(Object o);",
      "public boolean containsAll(Collection<?> c);",
      "public boolean equals(Object o);",
      "public int hashCode();",
      "public boolean isEmpty();",
      "public Stream<E> parallelStream();",
      "public boolean remove(Object o);",
      "public boolean removeAll(Collection<?> c);",
      "public boolean retainAll(Collection<?> c);",
      "public int size();",
      "public Stream<E> stream();",
      "public Object[] toArray();",
      "public <T> T[] toArray(T[] a);",
      "public <T> T[] toArray(IntFunction<T[]> generator);",
      "public String toString();",
      "public void add(int index, E element);",
      "public void addFirst(E e);",
      "public void addLast(E e);",
      "public boolean addAll(int index, Collection<? extends E> c);",
      "public E get(int i);",
      "public E getFirst();",
      "public E getLast();",
      "public int indexOf(Object o);",
      "public int lastIndexOf(Object o);",
      "public ListIterator<E> listIterator();",
      "public ListIterator<E> listIterator(int index);",
      "public E remove(int index);",
      "public E removeFirst();",
      "public E removeLast();",
      "public boolean removeIf(Predicate<? super E> filter);",
      "public void replaceAll(UnaryOperator<E> operator);",
      "public void sort(Comparator<? super E> c);",
      "public E set(int index, E element);",
      "public List<E> subList(int fromIndex, int toIndex);",
      "public List<E> reversed();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/concurrent/ConcurrentSkipListSet.java": [
      "public void addFirst(E e);",
      "public void addLast(E e);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/concurrent/DelayQueue.java": [
      "public E remove();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/concurrent/ConcurrentSkipListMap.java": [
      "public V putFirst(K k, V v);",
      "public V putLast(K k, V v);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/util/concurrent/Executors.java": [
      "private static class AutoShutdownDelegatedExecutorService extends DelegatedExecutorService {",
      "public void shutdown();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/security/cert/CertStore.java": [
      "public static final String getDefaultType();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/io/ObjectInputStream.java": [
      "private static final class HandleTable {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/io/ObjectOutputStream.java": [
      "private static final class BlockDataOutputStream extends OutputStream implements DataOutput {",
      "private static final class HandleTable {",
      "private static final class ReplaceTable {",
      "private static final class DebugTraceInfoStack {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/io/ObjectStreamClass.java": [
      "private static final class MemberSignature {",
      "private static final class FieldReflector {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/io/Console.java": [
      "public sealed class Console implements Flushable permits ProxyingConsole {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/io/SerialCallbackContext.java": [
      "Object getObj() throws NotActiveException;",
      "ObjectStreamClass getDesc();",
      "void check() throws NotActiveException;",
      "void checkAndSetUsed() throws NotActiveException;",
      "void setUsed();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/time/chrono/MinguoDate.java": [
      "public MinguoDate minus(long amountToSubtract, TemporalUnit unit);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/time/chrono/JapaneseDate.java": [
      "public JapaneseDate minus(long amountToSubtract, TemporalUnit unit);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/time/chrono/ThaiBuddhistDate.java": [
      "public ThaiBuddhistDate minus(long amountToSubtract, TemporalUnit unit);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/StringBuilder.java": [
      "public final class StringBuilder extends AbstractStringBuilder implements Appendable, java.io.Serializable, Comparable<StringBuilder>, CharSequence {",
      "public StringBuilder repeat(int codePoint, int count);",
      "public StringBuilder repeat(CharSequence cs, int count);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/StringBuffer.java": [
      "public final class StringBuffer extends AbstractStringBuilder implements Appendable, Serializable, Comparable<StringBuffer>, CharSequence {",
      "public synchronized StringBuffer repeat(int codePoint, int count);",
      "public synchronized StringBuffer repeat(CharSequence cs, int count);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/Class.java": [
      "public boolean isUnnamedClass();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/String.java": [
      "static String newStringUTF8NoRepl(byte[] bytes, int offset, int length, boolean noShare);",
      "public int indexOf(int ch, int beginIndex, int endIndex);",
      "public int indexOf(String str, int beginIndex, int endIndex);",
      "public String @MinLen(1) [] splitWithDelimiters(@Regex String regex, int limit);",
      "static void repeatCopyRest(byte[] buffer, int offset, int limit, int copied);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/Character.java": [
      "public static boolean isEmoji(int codePoint);",
      "public static boolean isEmojiPresentation(int codePoint);",
      "public static boolean isEmojiModifier(int codePoint);",
      "public static boolean isEmojiModifierBase(int codePoint);",
      "public static boolean isEmojiComponent(int codePoint);",
      "public static boolean isExtendedPictographic(int codePoint);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/CharacterData.java": [
      "abstract boolean isEmoji(int ch);",
      "abstract boolean isEmojiPresentation(int ch);",
      "abstract boolean isEmojiModifier(int ch);",
      "abstract boolean isEmojiModifierBase(int ch);",
      "abstract boolean isEmojiComponent(int ch);",
      "abstract boolean isExtendedPictographic(int ch);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/ThreadLocal.java": [
      "static void dumpStackIfVirtualThread();",
      "private static class StackWalkerHolder {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/ClassLoader.java": [
      "String nameAndId();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/AbstractStringBuilder.java": [
      "long mix(long lengthCoder);",
      "long prepend(long lengthCoder, byte[] buffer);",
      "public AbstractStringBuilder repeat(int codePoint, int count);",
      "public AbstractStringBuilder repeat(CharSequence cs, int count);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/Math.java": [
      "public static int clamp(long value, int min, int max);",
      "public static long clamp(long value, long min, long max);",
      "public static double clamp(double value, double min, double max);",
      "public static float clamp(float value, float min, float max);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/Thread.java": [
      "public sealed interface Builder permits Builder.OfPlatform, Builder.OfVirtual {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/StrictMath.java": [
      "public static double sin(double a);",
      "public static double cos(double a);",
      "public static double tan(double a);",
      "public static double asin(double a);",
      "public static double acos(double a);",
      "public static double atan(double a);",
      "public static double log(double a);",
      "public static double log10(double a);",
      "public static double sqrt(double a);",
      "public static double IEEEremainder(double f1, double f2);",
      "public static double atan2(double y, double x);",
      "public static int clamp(long value, int min, int max);",
      "public static long clamp(long value, long min, long max);",
      "public static double clamp(double value, double min, double max);",
      "public static float clamp(float value, float min, float max);",
      "public static double sinh(double x);",
      "public static double cosh(double x);",
      "public static double tanh(double x);",
      "public static double expm1(double x);",
      "public static double log1p(double x);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/invoke/MethodHandles.java": [
      "ClassDefiner makeClassDefiner(String name, byte[] bytes, ClassFileDumper dumper);",
      "ClassDefiner makeHiddenClassDefiner(byte[] bytes, ClassFileDumper dumper);",
      "ClassDefiner makeHiddenClassDefiner(String name, byte[] bytes, Set<ClassOption> options, ClassFileDumper dumper);",
      "String internalName();",
      "public <T> Class<T> ensureInitialized(Class<T> targetClass) throws IllegalAccessException;",
      "public <T> Class<T> accessClass(Class<T> targetClass) throws IllegalAccessException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/lang/invoke/LambdaForm.java": [
      "static LambdaForm create(int arity, Name[] names, int result);",
      "static LambdaForm create(int arity, Name[] names, int result, Kind kind);",
      "static LambdaForm create(int arity, Name[] names);",
      "static LambdaForm create(int arity, Name[] names, Kind kind);",
      "static LambdaForm create(int arity, Name[] names, boolean forceInline, Kind kind);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/java/nio/channels/FileChannel.java": [
      "public MemorySegment map(MapMode mode, long offset, long size, Arena arena) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/javax/net/ssl/TrustManagerFactory.java": [
      "public static final String getDefaultAlgorithm();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.base/share/classes/com/sun/crypto/provider/PBKDF2KeyImpl.java": [
      "public void clear();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.net.http/share/classes/jdk/internal/net/http/RequestPublishers.java": [
      "public boolean hasNext();",
      "public ByteBuffer next();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/java.net.http/share/classes/jdk/internal/net/http/ConnectionPool.java": [
      "void start();",
      "HttpConnection getConnection(boolean secure, InetSocketAddress addr, InetSocketAddress proxy);",
      "boolean contains(HttpConnection c);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/gc/shared/ContiguousSpace.java": [
      "public class ContiguousSpace extends Space implements LiveRegionsProvider {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlLinkInfo.java": [
      "public class HtmlLinkInfo {",
      "PLAIN,",
      "SHOW_PREVIEW,",
      "SHOW_TYPE_PARAMS,",
      "SHOW_TYPE_PARAMS_IN_LABEL,",
      "SHOW_TYPE_PARAMS_AND_BOUNDS,",
      "LINK_TYPE_PARAMS,",
      "LINK_TYPE_PARAMS_AND_BOUNDS",
      "public HtmlLinkInfo forType(TypeMirror type);",
      "public void setTypeElement(TypeElement typeElement);",
      "public TypeElement getTypeElement();",
      "public ExecutableElement getExecutableElement();",
      "public TypeMirror getType();",
      "public Content getLabel();",
      "public HtmlStyle getStyle();",
      "public boolean isVarArg();",
      "public HtmlLinkInfo fragment(String fragment);",
      "public String getFragment();",
      "public HtmlLinkInfo addLineBreaksInTypeParameters(boolean addLineBreaksInTypeParameters);",
      "public boolean addLineBreaksInTypeParameters();",
      "public HtmlLinkInfo addLineBreakOpportunitiesInTypeParameters(boolean addLineBreakOpportunities);",
      "public boolean addLineBreakOpportunitiesInTypeParameters();",
      "public HtmlLinkInfo linkToSelf(boolean linkToSelf);",
      "public boolean linkToSelf();",
      "public boolean linkTypeParameters();",
      "public void showTypeBounds(boolean showTypeBounds);",
      "public boolean showTypeBounds();",
      "public HtmlLinkInfo showTypeParameterAnnotations(boolean showTypeParameterAnnotations);",
      "public boolean showTypeParameterAnnotations();",
      "public Element getTargetMember();",
      "public boolean isSkipPreview();",
      "public boolean showTypeParameters();",
      "public Content getClassLinkLabel(BaseConfiguration configuration);",
      "protected Content newContent();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/VisibleMemberTable.java": [
      "private class LocalMemberTable {",
      "List<Element> getMembers(Name simpleName, Kind kind);",
      "<T extends Element> List<T> getMembers(Name simpleName, Kind kind, Class<T> clazz);",
      "List<ExecutableElement> getPropertyMethods(Name simpleName);",
      "private record PropertyMembers(ExecutableElement propertyMethod, VariableElement field, ExecutableElement getter, ExecutableElement setter) {",
      "public ImplementedMethods(ExecutableElement implementer) {",
      "private record OverrideInfo(ExecutableElement overriddenMethod, boolean simpleOverride) {",
      "public String toString();",
      "public int hashCode();",
      "public boolean equals(Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/Utils.java": [
      "public record OverrideInfo(ExecutableElement overriddenMethod, DeclaredType overriddenMethodOwner) {",
      "public OverrideInfo overriddenMethod(ExecutableElement method);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/ToolEnvironment.java": [
      "boolean isUnnamed(Symbol sym);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/RegisterValue.java": [
      "package jdk.vm.ci.code;",
      "public final class RegisterValue extends AllocatableValue {",
      "protected RegisterValue(ValueKind<?> kind, Register register) {",
      "public String toString();",
      "public Register getRegister();",
      "public int hashCode();",
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/BytecodePosition.java": [
      "package jdk.vm.ci.code;",
      "public class BytecodePosition {",
      "public BytecodePosition(BytecodePosition caller, ResolvedJavaMethod method, int bci) {",
      "public String toString();",
      "public boolean equals(@Nullable Object obj);",
      "public int hashCode();",
      "public int getBCI();",
      "public ResolvedJavaMethod getMethod();",
      "public BytecodePosition getCaller();",
      "public BytecodePosition addCaller(BytecodePosition link);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/DebugInfo.java": [
      "package jdk.vm.ci.code;",
      "public final class DebugInfo {",
      "public DebugInfo(BytecodePosition codePos, VirtualObject[] virtualObjectMapping) {",
      "public DebugInfo(BytecodePosition codePos) {",
      "public void setReferenceMap(ReferenceMap referenceMap);",
      "public boolean hasFrame();",
      "public BytecodeFrame frame();",
      "public String toString();",
      "public BytecodePosition getBytecodePosition();",
      "public ReferenceMap getReferenceMap();",
      "public VirtualObject[] getVirtualObjectMapping();",
      "public void setCalleeSaveInfo(RegisterSaveLayout calleeSaveInfo);",
      "public RegisterSaveLayout getCalleeSaveInfo();",
      "public int hashCode();",
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/VirtualObject.java": [
      "package jdk.vm.ci.code;",
      "public final class VirtualObject implements JavaValue {",
      "public static VirtualObject get(ResolvedJavaType type, int id);",
      "public static VirtualObject get(ResolvedJavaType type, int id, boolean isAutoBox);",
      "public interface LayoutVerifier {",
      "int getOffset(ResolvedJavaField field);",
      "default JavaKind getStorageKind(ResolvedJavaField field);",
      "public void verifyLayout(LayoutVerifier verifier);",
      "public String toString();",
      "public ResolvedJavaType getType();",
      "public JavaValue[] getValues();",
      "public JavaKind getSlotKind(int index);",
      "public int getId();",
      "public boolean isAutoBox();",
      "public void setValues(JavaValue[] values, JavaKind[] slotKinds);",
      "public int hashCode();",
      "public boolean equals(@Nullable Object o);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/RegisterSaveLayout.java": [
      "package jdk.vm.ci.code;",
      "public final class RegisterSaveLayout {",
      "public RegisterSaveLayout(Register[] registers, int[] slots) {",
      "public int size();",
      "public int registerToSlot(Register register);",
      "public Map<Register, Integer> registersToSlots(boolean sorted);",
      "public Map<Integer, Register> slotsToRegisters(boolean sorted);",
      "public int hashCode();",
      "public boolean equals(@Nullable Object obj);",
      "public String toString();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/Register.java": [
      "package jdk.vm.ci.code;",
      "public final class Register implements Comparable<Register> {",
      "public static final RegisterCategory SPECIAL;",
      "public static final Register None;",
      "public final int number;",
      "public final String name;",
      "public final int encoding;",
      "public int encoding();",
      "public static class RegisterCategory {",
      "public RegisterCategory(String name) {",
      "public RegisterCategory(String name, boolean mayContainReference) {",
      "public String toString();",
      "public int hashCode();",
      "public boolean equals(Object obj);",
      "public Register(int number, int encoding, String name, RegisterCategory registerCategory) {",
      "public RegisterCategory getRegisterCategory();",
      "public boolean mayContainReference();",
      "public RegisterValue asValue(ValueKind<?> kind);",
      "public RegisterValue asValue();",
      "public boolean isValid();",
      "public String toString();",
      "public int compareTo(Register o);",
      "public int hashCode();",
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/RegisterArray.java": [
      "package jdk.vm.ci.code;",
      "public final class RegisterArray implements Iterable<Register> {",
      "public RegisterArray(Register... registers) {",
      "public RegisterArray(Collection<Register> registers) {",
      "public int size();",
      "public Register get(int index);",
      "public void addTo(Collection<Register> collection);",
      "public List<Register> asList();",
      "public Register[] toArray();",
      "public Iterator<Register> iterator();",
      "public int hashCode();",
      "public boolean equals(@Nullable Object obj);",
      "public String toString();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/BytecodeFrame.java": [
      "package jdk.vm.ci.code;",
      "public final class BytecodeFrame extends BytecodePosition {",
      "public final JavaValue[] values;",
      "public final int numLocals;",
      "public final int numStack;",
      "public final int numLocks;",
      "public final boolean rethrowException;",
      "public final boolean duringCall;",
      "public static final int UNKNOWN_BCI;",
      "public static final int UNWIND_BCI;",
      "public static final int BEFORE_BCI;",
      "public static final int AFTER_BCI;",
      "public static final int AFTER_EXCEPTION_BCI;",
      "public static final int INVALID_FRAMESTATE_BCI;",
      "public static boolean isPlaceholderBci(int bci);",
      "public static String getPlaceholderBciName(int bci);",
      "public BytecodeFrame(BytecodeFrame caller, ResolvedJavaMethod method, int bci, boolean rethrowException, boolean duringCall, JavaValue[] values, JavaKind[] slotKinds, int numLocals, int numStack, int numLocks) {",
      "public void verifyInvariants();",
      "public boolean validateFormat();",
      "public JavaKind getLocalValueKind(int i);",
      "public JavaKind getStackValueKind(int i);",
      "public JavaValue getLocalValue(int i);",
      "public JavaValue getStackValue(int i);",
      "public JavaValue getLockValue(int i);",
      "public BytecodeFrame caller();",
      "public int hashCode();",
      "public boolean equals(@Nullable Object obj);",
      "public String toString();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/StackLockValue.java": [
      "package jdk.vm.ci.code;",
      "public final class StackLockValue implements JavaValue {",
      "public StackLockValue(JavaValue object, AllocatableValue slot, boolean eliminated) {",
      "public JavaValue getOwner();",
      "public void setOwner(JavaValue newOwner);",
      "public AllocatableValue getSlot();",
      "public boolean isEliminated();",
      "public String toString();",
      "public int hashCode();",
      "public boolean equals(@Nullable Object obj);",
      "public void setSlot(AllocatableValue stackSlot);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/StackSlot.java": [
      "package jdk.vm.ci.code;",
      "public final class StackSlot extends AllocatableValue {",
      "public static StackSlot get(ValueKind<?> kind, int offset, boolean addFrameSize);",
      "public int getOffset(int totalFrameSize);",
      "public boolean isInCallerFrame();",
      "public int getRawOffset();",
      "public boolean getRawAddFrameSize();",
      "public String toString();",
      "public StackSlot asOutArg();",
      "public StackSlot asInArg();",
      "public int hashCode();",
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/site/Infopoint.java": [
      "package jdk.vm.ci.code.site;",
      "public class Infopoint extends Site implements Comparable<Infopoint> {",
      "public final DebugInfo debugInfo;",
      "public final InfopointReason reason;",
      "public Infopoint(int pcOffset, DebugInfo debugInfo, InfopointReason reason) {",
      "public String toString();",
      "public int compareTo(Infopoint o);",
      "public boolean equals(@Nullable Object obj);",
      "protected static void appendDebugInfo(StringBuilder sb, DebugInfo info);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/site/Mark.java": [
      "package jdk.vm.ci.code.site;",
      "public final class Mark extends Site {",
      "public final Object id;",
      "public Mark(int pcOffset, Object id) {",
      "public String toString();",
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/site/DataPatch.java": [
      "package jdk.vm.ci.code.site;",
      "public final class DataPatch extends Site {",
      "public Reference reference;",
      "public Object note;",
      "public DataPatch(int pcOffset, Reference reference) {",
      "public DataPatch(int pcOffset, Reference reference, Object note) {",
      "public String toString();",
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/site/ConstantReference.java": [
      "package jdk.vm.ci.code.site;",
      "public final class ConstantReference extends Reference {",
      "public ConstantReference(VMConstant constant) {",
      "public VMConstant getConstant();",
      "public String toString();",
      "public int hashCode();",
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/site/ExceptionHandler.java": [
      "package jdk.vm.ci.code.site;",
      "public final class ExceptionHandler extends Site {",
      "public final int handlerPos;",
      "public ExceptionHandler(int pcOffset, int handlerPos) {",
      "public String toString();",
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/site/DataSectionReference.java": [
      "package jdk.vm.ci.code.site;",
      "public final class DataSectionReference extends Reference {",
      "public DataSectionReference() {",
      "public int getOffset();",
      "public void setOffset(int offset);",
      "public int hashCode();",
      "public boolean equals(@Nullable Object obj);",
      "public String toString();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/code/site/Call.java": [
      "package jdk.vm.ci.code.site;",
      "public final class Call extends Infopoint {",
      "public final InvokeTarget target;",
      "public final int size;",
      "public final boolean direct;",
      "public Call(InvokeTarget target, int pcOffset, int size, boolean direct, DebugInfo debugInfo) {",
      "public boolean equals(@Nullable Object obj);",
      "public String toString();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/Local.java": [
      "package jdk.vm.ci.meta;",
      "public class Local {",
      "public Local(String name, JavaType type, int startBci, int endBci, int slot) {",
      "public int getStartBCI();",
      "public int getEndBCI();",
      "public String getName();",
      "public JavaType getType();",
      "public int getSlot();",
      "public boolean equals(@Nullable Object obj);",
      "public int hashCode();",
      "public String toString();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/UnresolvedJavaMethod.java": [
      "package jdk.vm.ci.meta;",
      "public final class UnresolvedJavaMethod implements JavaMethod {",
      "protected JavaType holder;",
      "public UnresolvedJavaMethod(String name, Signature signature, JavaType holder) {",
      "public String getName();",
      "public Signature getSignature();",
      "public JavaType getDeclaringClass();",
      "public int hashCode();",
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/ExceptionHandler.java": [
      "package jdk.vm.ci.meta;",
      "public final class ExceptionHandler {",
      "public ExceptionHandler(int startBCI, int endBCI, int catchBCI, int catchTypeCPI, JavaType catchType) {",
      "public int getStartBCI();",
      "public int getEndBCI();",
      "public int getHandlerBCI();",
      "public int catchTypeCPI();",
      "public boolean isCatchAll();",
      "public JavaType getCatchType();",
      "public boolean equals(@Nullable Object obj);",
      "public String toString();",
      "public int hashCode();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/PrimitiveConstant.java": [
      "package jdk.vm.ci.meta;",
      "public class PrimitiveConstant implements JavaConstant, SerializableConstant {",
      "protected PrimitiveConstant(JavaKind kind, long primitive) {",
      "static PrimitiveConstant forTypeChar(char kind, long i);",
      "public long getRawValue();",
      "public JavaKind getJavaKind();",
      "public boolean isNull();",
      "public boolean isDefaultForKind();",
      "public boolean asBoolean();",
      "public int asInt();",
      "public long asLong();",
      "public float asFloat();",
      "public double asDouble();",
      "public Object asBoxedPrimitive();",
      "public int getSerializedSize();",
      "public void serialize(ByteBuffer buffer);",
      "public int hashCode();",
      "public boolean equals(@Nullable Object o);",
      "public String toString();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/UnresolvedJavaField.java": [
      "package jdk.vm.ci.meta;",
      "public final class UnresolvedJavaField implements JavaField {",
      "public UnresolvedJavaField(JavaType holder, String name, JavaType type) {",
      "public String getName();",
      "public JavaType getType();",
      "public JavaType getDeclaringClass();",
      "public int hashCode();",
      "public boolean equals(@Nullable Object obj);",
      "public String toString();",
      "public ResolvedJavaField resolve(ResolvedJavaType accessingClass);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/NullConstant.java": [
      "package jdk.vm.ci.meta;",
      "final class NullConstant implements JavaConstant {",
      "protected NullConstant() {",
      "public JavaKind getJavaKind();",
      "public boolean isNull();",
      "public boolean isDefaultForKind();",
      "public Object asBoxedPrimitive();",
      "public int asInt();",
      "public boolean asBoolean();",
      "public long asLong();",
      "public float asFloat();",
      "public double asDouble();",
      "public String toString();",
      "public String toValueString();",
      "public int hashCode();",
      "public boolean equals(@Nullable Object o);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/JavaTypeProfile.java": [
      "package jdk.vm.ci.meta;",
      "public final class JavaTypeProfile extends AbstractJavaProfile<ProfiledType, ResolvedJavaType> {",
      "public JavaTypeProfile(TriState nullSeen, double notRecordedProbability, ProfiledType[] pitems) {",
      "public TriState getNullSeen();",
      "public ProfiledType[] getTypes();",
      "public JavaTypeProfile restrict(JavaTypeProfile otherProfile);",
      "public JavaTypeProfile restrict(ResolvedJavaType declaredType, boolean nonNull);",
      "public boolean equals(@Nullable Object other);",
      "public int hashCode();",
      "public static class ProfiledType extends AbstractProfiledItem<ResolvedJavaType> {",
      "public ProfiledType(ResolvedJavaType type, double probability) {",
      "public ResolvedJavaType getType();",
      "public String toString();",
      "public String toString();",
      "public boolean allTypesRecorded();",
      "public ResolvedJavaType asSingleType();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/UnresolvedJavaType.java": [
      "package jdk.vm.ci.meta;",
      "public final class UnresolvedJavaType implements JavaType {",
      "public String getName();",
      "public static UnresolvedJavaType create(String name);",
      "public JavaType getComponentType();",
      "public JavaType getArrayClass();",
      "public JavaKind getJavaKind();",
      "public int hashCode();",
      "public boolean equals(@Nullable Object obj);",
      "public String toString();",
      "public ResolvedJavaType resolve(ResolvedJavaType accessingClass);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/Assumptions.java": [
      "package jdk.vm.ci.meta;",
      "public final class Assumptions implements Iterable<Assumptions.Assumption> {",
      "public abstract static class Assumption {",
      "public static class AssumptionResult<T> {",
      "public AssumptionResult(T result, Assumption... assumptions) {",
      "public AssumptionResult(T result) {",
      "public T getResult();",
      "public boolean isAssumptionFree();",
      "public void add(AssumptionResult<T> other);",
      "public boolean canRecordTo(Assumptions target);",
      "public void recordTo(Assumptions target);",
      "public String toString();",
      "public static final class NoFinalizableSubclass extends Assumption {",
      "public final ResolvedJavaType receiverType;",
      "public NoFinalizableSubclass(ResolvedJavaType receiverType) {",
      "public int hashCode();",
      "public boolean equals(Object obj);",
      "public String toString();",
      "public static final class ConcreteSubtype extends Assumption {",
      "public final ResolvedJavaType context;",
      "public final ResolvedJavaType subtype;",
      "public ConcreteSubtype(ResolvedJavaType context, ResolvedJavaType subtype) {",
      "public int hashCode();",
      "public boolean equals(Object obj);",
      "public String toString();",
      "public static final class LeafType extends Assumption {",
      "public final ResolvedJavaType context;",
      "public LeafType(ResolvedJavaType context) {",
      "public int hashCode();",
      "public boolean equals(Object obj);",
      "public String toString();",
      "public static final class ConcreteMethod extends Assumption {",
      "public final ResolvedJavaMethod method;",
      "public final ResolvedJavaType context;",
      "public final ResolvedJavaMethod impl;",
      "public ConcreteMethod(ResolvedJavaMethod method, ResolvedJavaType context, ResolvedJavaMethod impl) {",
      "public int hashCode();",
      "public boolean equals(Object obj);",
      "public String toString();",
      "public static final class CallSiteTargetValue extends Assumption {",
      "public final JavaConstant callSite;",
      "public final JavaConstant methodHandle;",
      "public CallSiteTargetValue(JavaConstant callSite, JavaConstant methodHandle) {",
      "public int hashCode();",
      "public boolean equals(Object obj);",
      "public String toString();",
      "public boolean isEmpty();",
      "public int hashCode();",
      "public boolean equals(@Nullable Object obj);",
      "public Iterator<Assumption> iterator();",
      "public void recordNoFinalizableSubclassAssumption(ResolvedJavaType receiverType);",
      "public void recordConcreteSubtype(ResolvedJavaType context, ResolvedJavaType subtype);",
      "public void recordConcreteMethod(ResolvedJavaMethod method, ResolvedJavaType context, ResolvedJavaMethod impl);",
      "public void record(Assumption assumption);",
      "public Assumption[] toArray();",
      "public void record(Assumptions other);",
      "public String toString();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/AbstractJavaProfile.java": [
      "package jdk.vm.ci.meta;",
      "public abstract class AbstractJavaProfile<T extends AbstractProfiledItem<U>, U> {",
      "public AbstractJavaProfile(double notRecordedProbability, T[] pitems) {",
      "public double getNotRecordedProbability();",
      "protected T[] getItems();",
      "public T findEntry(ResolvedJavaType type);",
      "public String toString();",
      "public boolean isIncluded(U item);",
      "public boolean equals(@Nullable Object obj);",
      "public int hashCode();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/Value.java": [
      "package jdk.vm.ci.meta;",
      "public abstract class Value {",
      "public static final Value[] NO_VALUES;",
      "public static final AllocatableValue ILLEGAL;",
      "private static final class IllegalValue extends AllocatableValue {",
      "public String toString();",
      "public boolean equals(Object other);",
      "protected Value(ValueKind<?> valueKind) {",
      "protected final String getKindSuffix();",
      "public final ValueKind<?> getValueKind();",
      "public final <K extends ValueKind<K>> K getValueKind(Class<K> cls);",
      "public final PlatformKind getPlatformKind();",
      "public int hashCode();",
      "public boolean equals(@Nullable Object obj);",
      "public final boolean identityEquals(Value other);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/meta/AbstractProfiledItem.java": [
      "package jdk.vm.ci.meta;",
      "public abstract class AbstractProfiledItem<T> implements Comparable<AbstractProfiledItem<?>> {",
      "protected final T item;",
      "protected final double probability;",
      "public AbstractProfiledItem(T item, double probability) {",
      "protected T getItem();",
      "public double getProbability();",
      "public int compareTo(AbstractProfiledItem<?> o);",
      "public int hashCode();",
      "public boolean equals(@Nullable Object obj);",
      "public abstract String toString();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotObjectConstantImpl.java": [
      "package jdk.vm.ci.hotspot;",
      "abstract class HotSpotObjectConstantImpl implements HotSpotObjectConstant {",
      "protected final boolean compressed;",
      "public JavaKind getJavaKind();",
      "public boolean isCompressed();",
      "public abstract JavaConstant compress();",
      "public abstract JavaConstant uncompress();",
      "public HotSpotResolvedObjectType getType();",
      "public abstract int getIdentityHashCode();",
      "public JavaConstant getCallSiteTarget(Assumptions assumptions);",
      "public boolean isInternedString();",
      "public <T> T asObject(Class<T> type);",
      "public Object asObject(ResolvedJavaType type);",
      "public boolean isNull();",
      "public boolean isDefaultForKind();",
      "public Object asBoxedPrimitive();",
      "public int asInt();",
      "public boolean asBoolean();",
      "public long asLong();",
      "public float asFloat();",
      "public double asDouble();",
      "public boolean equals(@Nullable Object o);",
      "public int hashCode();",
      "public String toValueString();",
      "public String toString();",
      "public JavaConstant readFieldValue(HotSpotResolvedJavaField field);",
      "public ResolvedJavaType asJavaType();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotSignature.java": [
      "package jdk.vm.ci.hotspot;",
      "public class HotSpotSignature implements Signature {",
      "public HotSpotSignature(HotSpotJVMCIRuntime runtime, String signature) {",
      "public HotSpotSignature(HotSpotJVMCIRuntime runtime, ResolvedJavaType returnType, ResolvedJavaType... parameterTypes) {",
      "public int getParameterCount(boolean withReceiver);",
      "public JavaKind getParameterKind(int index);",
      "public JavaType getParameterType(int index, ResolvedJavaType accessingClass);",
      "public String toMethodDescriptor();",
      "public JavaKind getReturnKind();",
      "public JavaType getReturnType(ResolvedJavaType accessingClass);",
      "public String toString();",
      "public boolean equals(@Nullable Object obj);",
      "public int hashCode();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotResolvedJavaFieldImpl.java": [
      "package jdk.vm.ci.hotspot;",
      "class HotSpotResolvedJavaFieldImpl implements HotSpotResolvedJavaField {",
      "public boolean equals(@Nullable Object obj);",
      "public int hashCode();",
      "public int getModifiers();",
      "public boolean isInternal();",
      "public boolean isInObject(JavaConstant object);",
      "public HotSpotResolvedObjectTypeImpl getDeclaringClass();",
      "public String getName();",
      "public JavaType getType();",
      "public int getOffset();",
      "int getIndex();",
      "public String toString();",
      "public boolean isSynthetic();",
      "public boolean isStable();",
      "public Annotation[] getAnnotations();",
      "public Annotation[] getDeclaredAnnotations();",
      "public <T extends Annotation> T getAnnotation(Class<T> annotationClass);",
      "public JavaConstant getConstantValue();",
      "public AnnotationData getAnnotationData(ResolvedJavaType annotationType);",
      "public List<AnnotationData> getAnnotationData(ResolvedJavaType type1, ResolvedJavaType type2, ResolvedJavaType... types);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotCompressedNullConstant.java": [
      "package jdk.vm.ci.hotspot;",
      "public final class HotSpotCompressedNullConstant implements JavaConstant, HotSpotConstant {",
      "public static final JavaConstant COMPRESSED_NULL;",
      "public JavaKind getJavaKind();",
      "public boolean isNull();",
      "public boolean isCompressed();",
      "public Constant compress();",
      "public Constant uncompress();",
      "public boolean isDefaultForKind();",
      "public Object asBoxedPrimitive();",
      "public int asInt();",
      "public boolean asBoolean();",
      "public long asLong();",
      "public float asFloat();",
      "public double asDouble();",
      "public String toString();",
      "public String toValueString();",
      "public int hashCode();",
      "public boolean equals(@Nullable Object o);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/VMIntrinsicMethod.java": [
      "package jdk.vm.ci.hotspot;",
      "public final class VMIntrinsicMethod {",
      "public final String declaringClass;",
      "public final String name;",
      "public final String descriptor;",
      "public final int id;",
      "public boolean equals(@Nullable Object obj);",
      "public int hashCode();",
      "public String toString();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotReferenceMap.java": [
      "package jdk.vm.ci.hotspot;",
      "public final class HotSpotReferenceMap extends ReferenceMap {",
      "public HotSpotReferenceMap(Location[] objects, Location[] derivedBase, int[] sizeInBytes, int maxRegisterSize) {",
      "public int hashCode();",
      "public boolean equals(@Nullable Object obj);",
      "public String toString();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.java": [
      "package jdk.vm.ci.hotspot;",
      "final class HotSpotResolvedJavaMethodImpl extends HotSpotMethod implements HotSpotResolvedJavaMethod, MetaspaceHandleObject {",
      "public String getName();",
      "public boolean equals(@Nullable Object obj);",
      "public int hashCode();",
      "public HotSpotResolvedObjectTypeImpl getDeclaringClass();",
      "long getMethodPointer();",
      "public long getMetadataHandle();",
      "public Constant getEncoding();",
      "public int getAllModifiers();",
      "public int getModifiers();",
      "public boolean canBeStaticallyBound();",
      "public byte[] getCode();",
      "public int getCodeSize();",
      "public ExceptionHandler[] getExceptionHandlers();",
      "public boolean isCallerSensitive();",
      "public boolean isForceInline();",
      "public boolean hasReservedStackAccess();",
      "public void setNotInlinableOrCompilable();",
      "public boolean ignoredBySecurityStackWalk();",
      "public boolean isClassInitializer();",
      "public boolean isConstructor();",
      "public int getMaxLocals();",
      "public int getMaxStackSize();",
      "public StackTraceElement asStackTraceElement(int bci);",
      "public ResolvedJavaMethod uniqueConcreteMethod(HotSpotResolvedObjectType receiver);",
      "public HotSpotSignature getSignature();",
      "public boolean hasCompiledCode();",
      "public boolean hasCompiledCodeAtLevel(int level);",
      "public ProfilingInfo getProfilingInfo(boolean includeNormal, boolean includeOSR);",
      "public void reprofile();",
      "public ConstantPool getConstantPool();",
      "public Parameter[] getParameters();",
      "public Annotation[][] getParameterAnnotations();",
      "public Annotation[] getAnnotations();",
      "public Annotation[] getDeclaredAnnotations();",
      "public <T extends Annotation> T getAnnotation(Class<T> annotationClass);",
      "public boolean isBridge();",
      "public boolean isSynthetic();",
      "public boolean isVarArgs();",
      "public boolean isDefault();",
      "public Type[] getGenericParameterTypes();",
      "public boolean canBeInlined();",
      "public boolean hasNeverInlineDirective();",
      "public boolean shouldBeInlined();",
      "public LineNumberTable getLineNumberTable();",
      "public LocalVariableTable getLocalVariableTable();",
      "public int vtableEntryOffset(ResolvedJavaType resolved);",
      "public boolean isInVirtualMethodTable(ResolvedJavaType resolved);",
      "public SpeculationLog getSpeculationLog();",
      "public int intrinsicId();",
      "public boolean isIntrinsicCandidate();",
      "public int allocateCompileId(int entryBCI);",
      "public boolean hasCodeAtLevel(int entryBCI, int level);",
      "public int methodIdnum();",
      "public AnnotationData getAnnotationData(ResolvedJavaType type);",
      "public List<AnnotationData> getAnnotationData(ResolvedJavaType type1, ResolvedJavaType type2, ResolvedJavaType... types);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-21/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotMetaspaceConstantImpl.java": [
      "package jdk.vm.ci.hotspot;",
      "final class HotSpotMetaspaceConstantImpl implements HotSpotMetaspaceConstant, VMConstant {",
      "static HotSpotMetaspaceConstantImpl forMetaspaceObject(MetaspaceObject metaspaceObject, boolean compressed);",
      "static MetaspaceObject getMetaspaceObject(Constant constant);",
      "public int hashCode();",
      "public boolean equals(@Nullable Object o);",
      "public String toValueString();",
      "public String toString();",
      "public boolean isDefaultForKind();",
      "public boolean isCompressed();",
      "public Constant compress();",
      "public Constant uncompress();",
      "public HotSpotResolvedObjectType asResolvedJavaType();",
      "public HotSpotResolvedJavaMethod asResolvedJavaMethod();"
    ]
  },
  "jdk-22": {
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.security.jgss/share/classes/javax/security/auth/kerberos/KerberosPrincipal.java": [
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.jfr/share/classes/jdk/jfr/internal/Type.java": [
      "public static final Type STACK_TRACE;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.compiler/share/classes/javax/lang/model/util/Elements.java": [
      "default TypeElement getEnumConstantBody(VariableElement enumConstant);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.compiler/share/classes/javax/lang/model/element/RecordComponentElement.java": [
      "TypeMirror asType();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml/share/classes/javax/xml/catalog/CatalogImpl.java": [
      "public final NotFoundAction getResolve();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.compiler/share/classes/com/sun/tools/javac/tree/TreeInfo.java": [
      "public static boolean hasAnyConstructorCall(JCMethodDecl tree);",
      "public static boolean hasConstructorCall(JCMethodDecl tree, Name target);",
      "public static JCMethodInvocation findConstructorCall(JCMethodDecl md);",
      "private static class ConstructorCallFinder extends TreeScanner {",
      "List<JCMethodInvocation> find(JCMethodDecl meth);",
      "public void visitApply(JCMethodInvocation invoke);",
      "public void visitClassDef(JCClassDecl tree);",
      "public void visitLambda(JCLambda tree);",
      "public static void mapSuperCalls(JCBlock block, Function<? super JCExpressionStatement, ? extends JCStatement> mapper);",
      "private static class SuperCallTranslator extends TreeTranslator {",
      "public void visitExec(JCExpressionStatement stat);",
      "public void visitClassDef(JCClassDecl tree);",
      "public void visitLambda(JCLambda tree);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Symbol.java": [
      "public boolean isImplicit();",
      "public Type implicitReceiverType();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Types.java": [
      "class DisjointChecker {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Resolve.java": [
      "Symbol access(Env<AttrContext> env, DiagnosticPosition pos, Symbol location, Symbol sym);",
      "class RefBeforeCtorCalledError extends StaticError {",
      "JCDiagnostic getDiagnostic(JCDiagnostic.DiagnosticType dkind, DiagnosticPosition pos, Symbol location, Type site, Name name, List<Type> argtypes, List<Type> typeargtypes);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/P11Key.java": [
      "public DSAParams getParams();",
      "public ECParameterSpec getParams();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/unix/classes/sun/nio/fs/UnixPath.java": [
      "public UnixPath resolve(Path first, Path... more);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/util/calendar/CalendarDate.java": [
      "public sealed abstract class CalendarDate implements Cloneable permits BaseCalendar.Date {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/util/calendar/ImmutableGregorianDate.java": [
      "final class ImmutableGregorianDate extends BaseCalendar.Date {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/tools/keytool/Main.java": [
      "private static class ExitException extends RuntimeException {",
      "public ExitException(int errorCode) {",
      "public int run(String[] args, PrintStream out) throws Exception;",
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/util/DerInputStream.java": [
      "public Date getTime() throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/util/DerValue.java": [
      "public Date getTime() throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/GeneralName.java": [
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/X509CertInfo.java": [
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/KeyIdentifier.java": [
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/EDIPartyName.java": [
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/PolicyInformation.java": [
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/CertificatePolicyId.java": [
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/x509/GeneralSubtree.java": [
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/pkcs10/PKCS10.java": [
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/security/pkcs/EncryptedPrivateKeyInfo.java": [
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/sun/nio/ch/FileChannelImpl.java": [
      "private sealed abstract static class Unmapper implements Runnable, UnmapperProxy {",
      "private static final class DefaultUnmapper extends Unmapper {",
      "private static final class SyncUnmapper extends Unmapper {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/net/Inet4Address.java": [
      "public static Inet4Address ofLiteral(String ipv4AddressLiteral);",
      "static Inet4Address parseAddressString(String addressLiteral, boolean throwIAE);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/net/ProxySelector.java": [
      "public List<Proxy> select(URI uri);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/net/Inet6Address.java": [
      "public static InetAddress ofLiteral(String ipv6AddressLiteral);",
      "static InetAddress parseAddressString(String addressLiteral, boolean removeSqBrackets) throws UnknownHostException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/net/InetAddress.java": [
      "public static InetAddress ofLiteral(String ipAddressLiteral);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/util/DualPivotQuicksort.java": [
      "private static interface SortOperation<A> {",
      "void sort(A a, int low, int high);",
      "interface PartitionOperation<A> {",
      "int[] partition(A a, int low, int high, int pivotIndex1, int pivotIndex2);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/util/AbstractMap.java": [
      "final class KeyIterator implements Iterator<K> {",
      "public boolean hasNext();",
      "public void remove();",
      "public K next();",
      "final class ValueIterator implements Iterator<V> {",
      "public boolean hasNext();",
      "public void remove();",
      "public V next();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/util/stream/Stream.java": [
      "default <R> Stream<R> gather(Gatherer<? super T, ?, R> gatherer);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/util/zip/ZipFile.java": [
      "static boolean getDisableZip64ExtraFieldValidation();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/util/concurrent/ForkJoinPool.java": [
      "static long slotOffset(int index);",
      "final void updateBase(int v);",
      "final void updateTop(int v);",
      "final void forgetSource();",
      "final void updateArray(ForkJoinTask<?>[] a);",
      "final void unlockPhase();",
      "final boolean tryLockPhase();",
      "final void push(ForkJoinTask<?> task, ForkJoinPool pool, boolean internal);",
      "final boolean tryUnpush(ForkJoinTask<?> task, boolean internal);",
      "final void topLevelExec(ForkJoinTask<?> task, WorkQueue src, int srcId);",
      "final void tryRemoveAndExec(ForkJoinTask<?> task, boolean internal);",
      "final int helpComplete(ForkJoinTask<?> task, boolean internal, int limit);",
      "static boolean poolIsStopping(ForkJoinPool p);",
      "final void signalWork(ForkJoinTask<?>[] a, int k);",
      "final int helpJoin(ForkJoinTask<?> task, WorkQueue w, boolean internal);",
      "final int helpComplete(ForkJoinTask<?> task, WorkQueue w, boolean internal);",
      "final WorkQueue externalSubmissionQueue();",
      "static WorkQueue externalQueue(ForkJoinPool p);",
      "public <T> List<Future<T>> invokeAllUninterruptibly(Collection<? extends Callable<T>> tasks);",
      "public <T> List<Future<T>> invokeAll(Collection<? extends Callable<T>> tasks) throws InterruptedException;",
      "final long beginCompensatedBlock();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/util/concurrent/ForkJoinTask.java": [
      "final int trySetCancelled();",
      "final boolean trySetThrown(Throwable ex);",
      "void onAuxExceptionSet(Throwable ex);",
      "final void trySetException(Throwable ex);",
      "final void doExec();",
      "final int setForkJoinTaskStatusMarkerBit();",
      "final int getForkJoinTaskStatusMarkerBit();",
      "public ForkJoinTask() {",
      "final void quietlyJoinPoolInvokeAllTask(long deadline) throws InterruptedException;",
      "public static ForkJoinTask<?> adapt(Runnable runnable);",
      "public static <T> ForkJoinTask<T> adapt(Runnable runnable, T result);",
      "public static <T> ForkJoinTask<T> adapt(Callable<? extends T> callable);",
      "public static <T> ForkJoinTask<T> adaptInterruptible(Callable<? extends T> callable);",
      "public static <T> ForkJoinTask<T> adaptInterruptible(Runnable runnable, T result);",
      "public static ForkJoinTask<?> adaptInterruptible(Runnable runnable);",
      "static final class AdaptedCallable<T> extends ForkJoinTask<T> implements RunnableFuture<T> {",
      "public final T getRawResult();",
      "public final void setRawResult(T v);",
      "public final boolean exec();",
      "public final void run();",
      "public String toString();",
      "static abstract class InterruptibleTask<T> extends ForkJoinTask<T> implements RunnableFuture<T> {",
      "abstract T compute() throws Exception;",
      "public final boolean exec();",
      "public boolean cancel(boolean mayInterruptIfRunning);",
      "public final void run();",
      "Object adaptee();",
      "public String toString();",
      "static final class AdaptedInterruptibleCallable<T> extends InterruptibleTask<T> {",
      "public final T getRawResult();",
      "public final void setRawResult(T v);",
      "final T compute() throws Exception;",
      "final Object adaptee();",
      "static final class AdaptedInterruptibleRunnable<T> extends InterruptibleTask<T> {",
      "public final T getRawResult();",
      "public final void setRawResult(T v);",
      "final T compute();",
      "final Object adaptee();",
      "static final class RunnableExecuteAction extends InterruptibleTask<Void> {",
      "final Void compute();",
      "final Object adaptee();",
      "void onAuxExceptionSet(Throwable ex);",
      "static final class InvokeAnyRoot<T> extends InterruptibleTask<T> {",
      "final void tryComplete(InvokeAnyTask<T> f, T v, Throwable ex, boolean completed);",
      "public final T compute();",
      "public final T getRawResult();",
      "public final void setRawResult(T v);",
      "final T invokeAny(Collection<? extends Callable<T>> tasks, ForkJoinPool pool, boolean timed, long nanos) throws InterruptedException, ExecutionException, TimeoutException;",
      "static final class InvokeAnyTask<T> extends InterruptibleTask<Void> {",
      "final Void compute() throws Exception;",
      "final void onRootCompletion();",
      "public final Void getRawResult();",
      "public final void setRawResult(Void v);",
      "final Object adaptee();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/util/concurrent/LinkedTransferQueue.java": [
      "static final class DualNode implements ForkJoinPool.ManagedBlocker {",
      "final Object cmpExItem(Object cmp, Object val);",
      "final DualNode cmpExNext(DualNode cmp, DualNode val);",
      "final boolean matched();",
      "final void selfLinkItem();",
      "final Object await(Object e, long ns, Object blocker, boolean spin);",
      "final DualNode cmpExTail(DualNode cmp, DualNode val);",
      "final DualNode cmpExHead(DualNode cmp, DualNode val);",
      "final boolean sweepNow();",
      "final Object xfer(Object e, long ns);",
      "final boolean tryCasSuccessor(DualNode pred, DualNode c, DualNode p);",
      "final DualNode skipDeadNodes(DualNode pred, DualNode c, DualNode p, DualNode q);",
      "final boolean tryMatchData(DualNode p, Object x);",
      "final DualNode firstDataNode();",
      "final int countOfMode(boolean data);",
      "void forEachFrom(Consumer<? super E> action, DualNode p);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/util/concurrent/SynchronousQueue.java": [
      "static final class Transferer<E> extends LinkedTransferQueue<E> {",
      "final Object xferLifo(Object e, long ns);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/security/interfaces/ECPrivateKey.java": [
      "default ECParameterSpec getParams();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/io/FileDescriptor.java": [
      "public void sync() throws SyncFailedException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/io/RandomAccessFile.java": [
      "public RandomAccessFile(String pathname, String mode) throws FileNotFoundException {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/io/Console.java": [
      "public boolean isTerminal();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/Integer.java": [
      "private static final class IntegerCache {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/StackStreamFactory.java": [
      "protected final int mode;",
      "protected abstract int batchSize(int lastBatchSize);",
      "static class StackFrameTraverser<T> extends AbstractStackWalker<T, StackFrame> implements Spliterator<StackFrame> {",
      "protected int batchSize(int lastBatchSize);",
      "static class StackFrameBuffer<T extends ClassFrameInfo> extends FrameBuffer<T> {",
      "T[] frames();",
      "T[] allocateArray(int size);",
      "T[] fill(T[] array, int startIndex, int size);",
      "void resize(int size);",
      "T nextStackFrame();",
      "final Class<?> at(int index);",
      "static class ClassFrameBuffer extends StackFrameBuffer<ClassFrameInfo> {",
      "ClassFrameInfo[] allocateArray(int size);",
      "ClassFrameInfo[] fill(ClassFrameInfo[] array, int startIndex, int size);",
      "static final class CallerClassFinder extends AbstractStackWalker<Integer, ClassFrameInfo> {",
      "protected int batchSize(int lastBatchSize);",
      "abstract void resize(int size);",
      "final int currentBatchSize();",
      "final int numFrames();",
      "final boolean isFull();",
      "final void setBatch(int depth, int startIndex, int numFrames);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/Byte.java": [
      "private static final class ByteCache {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/Short.java": [
      "private static final class ShortCache {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/Long.java": [
      "private static final class LongCache {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/Class.java": [
      "public static Class<?> forPrimitiveName(String primitiveName);",
      "Method findMethod(boolean publicOnly, String name, Class<?>... parameterTypes);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/String.java": [
      "boolean bytesCompatible(Charset charset);",
      "void copyToSegmentRaw(MemorySegment segment, long offset);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/Character.java": [
      "public static final UnicodeBlock CJK_UNIFIED_IDEOGRAPHS_EXTENSION_I;",
      "private static final class CharacterCache {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/StackWalker.java": [
      "RETAIN_CLASS_REFERENCE, DROP_METHOD_INFO, SHOW_REFLECT_FRAMES, SHOW_HIDDEN_FRAMES",
      "static StackWalker newInstance(Set<Option> options, ContinuationScope contScope);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/Thread.java": [
      "final void runWith(Object bindings, Runnable op);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/invoke/MethodHandles.java": [
      "MethodHandle serializableConstructor(Class<?> decl, Constructor<?> c) throws IllegalAccessException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/lang/reflect/ReflectAccess.java": [
      "public Class<?>[] getExecutableSharedExceptionTypes(Executable ex);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/java/nio/file/Path.java": [
      "default Path resolve(Path first, Path... more);",
      "default Path resolve(String first, String... more);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/javax/security/cert/Certificate.java": [
      "public boolean equals(@Nullable Object obj);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.base/share/classes/com/sun/crypto/provider/PBEKey.java": [
      "public boolean isDestroyed();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.net.http/share/classes/jdk/internal/net/http/ConnectionPool.java": [
      "void returnToPool(HttpConnection conn, Deadline now, long keepAlive);",
      "long purgeExpiredConnectionsAndReturnNextDeadline(Deadline now);",
      "Optional<Deadline> nextExpiryDeadline();",
      "void add(HttpConnection conn, Deadline now, long keepAlive);",
      "List<HttpConnection> purgeUntil(Deadline now);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.naming/share/classes/com/sun/jndi/ldap/pool/ConnectionDesc.java": [
      "boolean release();",
      "PooledConnection tryUse();",
      "boolean expire(long threshold);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/ClassWriter.java": [
      "package jdk.javadoc.internal.doclets.formats.html;",
      "public class ClassWriter extends SubWriterHolderWriter {",
      "protected final TypeElement typeElement;",
      "protected final ClassTree classTree;",
      "protected final PropertyUtils.PropertyHelper pHelper;",
      "public ClassWriter(HtmlConfiguration configuration, TypeElement typeElement, ClassTree classTree) {",
      "public PropertyUtils.PropertyHelper getPropertyHelper();",
      "public void buildPage() throws DocletException;",
      "protected void buildClassDoc() throws DocletException;",
      "protected void buildClassTree(Content classContent);",
      "protected void buildClassInfo(Content target);",
      "protected void buildParamInfo(Content target);",
      "protected void buildSuperInterfacesInfo(Content target);",
      "protected void buildImplementedInterfacesInfo(Content target);",
      "protected void buildSubClassInfo(Content target);",
      "protected void buildSubInterfacesInfo(Content target);",
      "protected void buildInterfaceUsageInfo(Content target);",
      "protected void buildFunctionalInterfaceInfo(Content target);",
      "protected void buildDeprecationInfo(Content target);",
      "protected void buildNestedClassInfo(Content target);",
      "protected void buildClassSignature(Content target);",
      "protected void buildClassDescription(Content target);",
      "protected void buildClassTagInfo(Content target);",
      "protected void buildMemberSummary(Content classContent);",
      "protected void buildMemberDetails(Content classContent);",
      "protected Content getHeader(String header);",
      "protected Content getClassContentHeader();",
      "protected Navigation getNavBar(PageMode pageMode, Element element);",
      "protected void addFooter();",
      "protected void printDocument(Content content) throws DocFileIOException;",
      "protected Content getClassInfo(Content classInfo);",
      "public TypeElement getCurrentPageElement();",
      "protected void addClassSignature(Content classInfo);",
      "protected void addClassDescription(Content classInfo);",
      "protected void addClassTagInfo(Content classInfo);",
      "protected void addClassTree(Content target);",
      "protected void addParamInfo(Content target);",
      "protected void addSubClassInfo(Content target);",
      "protected void addSubInterfacesInfo(Content target);",
      "protected void addInterfaceUsageInfo(Content target);",
      "protected void addImplementedInterfacesInfo(Content target);",
      "protected void addSuperInterfacesInfo(Content target);",
      "protected void addNestedClassInfo(final Content target);",
      "protected void addFunctionalInterfaceInfo(Content target);",
      "protected void addClassDeprecationInfo(Content classInfo);",
      "public TypeElement getTypeElement();",
      "protected Content getMemberDetails(Content content);",
      "public boolean isIndexable();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlDocletWriter.java": [
      "public abstract class HtmlDocletWriter {",
      "public final Messages messages;",
      "public final Links links;",
      "public final Map<String, Integer> indexAnchorTable;",
      "protected HtmlDocletWriter(HtmlConfiguration configuration, DocPath path, boolean generating) {",
      "public abstract void buildPage() throws DocletException;",
      "protected final void writeGenerating();",
      "public TagletWriter getTagletWriterInstance(TagletWriter.Context context);",
      "public boolean isIndexable();",
      "protected Content getHeader(Navigation.PageMode pageMode);",
      "protected Content getHeader(Navigation.PageMode pageMode, Element element);",
      "public TypeElement getCurrentPageElement();",
      "public Content commentTagsToContent(Element element, List<? extends DocTree> trees, TagletWriter.Context context);",
      "public Content invalidTagOutput(String summary, Optional<Content> detail);",
      "public void addRestrictedSummary(Element forWhat, Content target);",
      "public void addRestrictedInfo(ExecutableElement forWhat, Content target);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/ModuleWriter.java": [
      "package jdk.javadoc.internal.doclets.formats.html;",
      "public class ModuleWriter extends HtmlDocletWriter {",
      "protected ModuleElement mdle;",
      "static class PackageEntry {",
      "public ModuleWriter(HtmlConfiguration configuration, ModuleElement mdle) {",
      "public void buildPage() throws DocletException;",
      "protected void buildModuleDoc() throws DocletException;",
      "protected void buildContent();",
      "protected void buildSummary(Content target);",
      "protected void buildModulesSummary(Content summariesList);",
      "protected void buildPackagesSummary(Content summariesList);",
      "protected void buildServicesSummary(Content summariesList);",
      "protected void buildModuleDescription(Content moduleContent);",
      "protected Content getModuleHeader(String heading);",
      "protected Navigation getNavBar(PageMode pageMode, Element element);",
      "protected Content getContentHeader();",
      "protected Content getSummariesList();",
      "protected Content getSummary(Content source);",
      "public void computeModulesData();",
      "public boolean shouldDocument(Element element);",
      "public boolean display(Set<? extends Element> section);",
      "public boolean display(Map<? extends Element, ?> section);",
      "public void addSummaryHeader(Content startMarker, Content heading, Content target);",
      "protected void addModulesSummary(Content summariesList);",
      "protected void addPackagesSummary(Content summariesList);",
      "public void addPackageSummary(HtmlTree li);",
      "public void addIndirectPackages(Table<?> table, Map<ModuleElement, SortedSet<PackageElement>> ip);",
      "protected void addServicesSummary(Content summariesList);",
      "public void addUsesList(Table<?> table);",
      "public void addProvidesList(Table<?> table);",
      "public void addDeprecationInfo(Content div);",
      "protected void addModuleDescription(Content moduleContent);",
      "protected void addModuleSignature(Content moduleContent);",
      "protected void addModuleContent(Content source);",
      "protected void addModuleFooter();",
      "protected void printDocument(Content content) throws DocFileIOException;",
      "public void addPackageDeprecationInfo(Content li, PackageElement pkg);",
      "public boolean isIndexable();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/TreeWriter.java": [
      "public TreeWriter(HtmlConfiguration configuration, ClassTree classTree) {",
      "public void buildPage() throws DocFileIOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/Content.java": [
      "package jdk.javadoc.internal.doclets.formats.html;",
      "public abstract class Content {",
      "public String toString();",
      "public Content add(Content content);",
      "public Content add(CharSequence stringContent);",
      "public <T> Content addAll(Collection<T> items, Function<T, Content> mapper);",
      "public abstract boolean write(Writer writer, String newline, boolean atNewline) throws IOException;",
      "public abstract boolean isEmpty();",
      "public boolean isDiscardable();",
      "public int charCount();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlConfiguration.java": [
      "public HtmlIndexBuilder indexBuilder;",
      "protected RestrictedAPIListBuilder restrictedAPIListBuilder;",
      "public final Messages messages;",
      "public TagletManager tagletManager;",
      "RESTRICTED,",
      "public Set<PackageElement> getContainingPackagesSeen();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/taglets/BaseTaglet.java": [
      "package jdk.javadoc.internal.doclets.formats.html.taglets;",
      "public class BaseTaglet implements Taglet {",
      "protected final HtmlConfiguration config;",
      "protected final Messages messages;",
      "protected final Resources resources;",
      "protected final Utils utils;",
      "protected final DocTree.Kind tagKind;",
      "protected final String name;",
      "protected TagletWriter tagletWriter;",
      "public BaseTaglet(HtmlConfiguration config, DocTree.Kind tagKind, boolean inline, Set<Location> sites) {",
      "protected BaseTaglet(HtmlConfiguration config, String name, boolean inline, Set<Location> sites) {",
      "public Set<Location> getAllowedLocations();",
      "public final boolean isInlineTag();",
      "public String getName();",
      "public DocTree.Kind getTagKind();",
      "public Content getInlineTagOutput(Element element, DocTree tag, TagletWriter tagletWriter);",
      "public Content getAllBlockTagOutput(Element holder, TagletWriter tagletWriter);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/taglets/UserTaglet.java": [
      "package jdk.javadoc.internal.doclets.formats.html.taglets;",
      "public final class UserTaglet implements Taglet {",
      "public Set<jdk.javadoc.doclet.Taglet.Location> getAllowedLocations();",
      "public boolean isInlineTag();",
      "public boolean isBlockTag();",
      "public String getName();",
      "public Content getInlineTagOutput(Element element, DocTree tag, TagletWriter tagletWriter);",
      "public Content getAllBlockTagOutput(Element holder, TagletWriter tagletWriter);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/taglets/TagletManager.java": [
      "package jdk.javadoc.internal.doclets.formats.html.taglets;",
      "public class TagletManager {",
      "public TagletManager(HtmlConfiguration config) {",
      "public Set<String> getAllTagletNames();",
      "public void initTagletPath(JavaFileManager fileManager) throws IOException;",
      "public void addCustomTag(String classname, JavaFileManager fileManager);",
      "public void loadTaglets(JavaFileManager fileManager) throws IOException;",
      "public void addNewSimpleCustomTag(String tagName, String header, String locations);",
      "void seenTag(String name);",
      "public void checkTags(Element element, Iterable<? extends DocTree> trees);",
      "Map<String, Taglet> getInlineTaglets();",
      "public List<Taglet> getSerializedFormTaglets();",
      "public List<Taglet> getBlockTaglets(Element e);",
      "public boolean isKnownCustomTag(String tagName);",
      "public void printReport();",
      "Taglet getTaglet(String name);",
      "public Taglet getTaglet(DocTree.Kind kind);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/taglets/SimpleTaglet.java": [
      "package jdk.javadoc.internal.doclets.formats.html.taglets;",
      "public class SimpleTaglet extends BaseTaglet implements InheritableTaglet {",
      "protected SimpleTaglet(HtmlConfiguration config, DocTree.Kind tagKind, String header, Set<Taglet.Location> locations, boolean enabled) {",
      "public Output inherit(Element dst, Element src, DocTree tag, boolean isFirstSentence);",
      "boolean isEnabled();",
      "record Documentation(DocTree tag, List<? extends DocTree> description, ExecutableElement method) {",
      "public Content getAllBlockTagOutput(Element holder, TagletWriter tagletWriter);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/WorkArounds.java": [
      "public boolean isRestrictedAPI(Element el);",
      "public static boolean isImplicitlyDeclaredClass(Element e);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/PropertyUtils.java": [
      "public static class PropertyHelper {",
      "public PropertyHelper(BaseConfiguration configuration, TypeElement typeElement) {",
      "public Element getPropertyElement(Element element);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/CommentHelper.java": [
      "public R visitInheritDoc(InheritDocTree node, Void p);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/util/Utils.java": [
      "public boolean isFunctionalInterface(TypeElement typeElement);",
      "public List<? extends BlockTagTree> getBlockTags(Element element, Predicate<? super BlockTagTree> filter);",
      "public <T extends BlockTagTree> List<T> getBlockTags(Element element, Predicate<? super BlockTagTree> filter, Class<T> tClass);",
      "public List<? extends BlockTagTree> getBlockTags(Element element, DocTree.Kind kind);",
      "public <T extends BlockTagTree> List<? extends T> getBlockTags(Element element, DocTree.Kind kind, Class<T> tClass);",
      "public List<? extends BlockTagTree> getBlockTags(Element element, String tagName);",
      "public boolean isRestrictedAPI(Element el);",
      "DEPRECATED, PREVIEW, RESTRICTED",
      "private class Overrides implements Iterator<ExecutableElement> {",
      "public Overrides(ExecutableElement method) {",
      "public boolean hasNext();",
      "public ExecutableElement next();",
      "public static String diagnosticDescriptionOf(Element e);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/ElementsTable.java": [
      "public AccessLevel getAccessValue(ElementKind kind);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.desktop/share/classes/javax/swing/UIDefaults.java": [
      "String composeKey(String key, int reduce, String suffix);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.desktop/share/classes/javax/swing/JFileChooser.java": [
      "public void setEnabled(boolean enabled);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/java.xml.crypto/share/classes/com/sun/org/apache/xml/internal/security/utils/DigesterOutputStream.java": [
      "public synchronized void write(int arg0);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/VMIntrinsicMethod.java": [
      "public final boolean isAvailable;",
      "public final boolean c1Supported;",
      "public final boolean c2Supported;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-22/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.java": [
      "public BitSet getOopMapAt(int bci);"
    ]
  },
  "jdk-23": {
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.jfr/share/classes/jdk/jfr/internal/Type.java": [
      "public void setFields(List<ValueDescriptor> fields);",
      "public <T> T getAnnotationValue(Class<? extends java.lang.annotation.Annotation> clazz, T defaultValue);",
      "public boolean hasAnnotation(Class<? extends java.lang.annotation.Annotation> clazz);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.compiler/share/classes/javax/lang/model/util/Elements.java": [
      "default DocCommentKind getDocCommentKind(Element e);",
      "enum DocCommentKind {",
      "END_OF_LINE, TRADITIONAL"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.compiler/share/classes/javax/lang/model/util/Types.java": [
      "default <T extends TypeMirror> T stripAnnotations(T t);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.compiler/share/classes/com/sun/tools/javac/tree/TreeInfo.java": [
      "public static boolean isExplicitThisReference(Types types, Type.ClassType currentClass, JCTree tree);",
      "public static boolean isConstructorCall(JCMethodInvocation invoke);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Symbol.java": [
      "private record PermittedClassWithPos(Symbol permittedClass, int pos) {",
      "public void addPermittedSubclass(ClassSymbol csym, int pos);",
      "public boolean isPermittedSubclass(Symbol csym);",
      "public void clearPermittedSubclasses();",
      "public void setPermittedSubclasses(List<Symbol> permittedSubs);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Types.java": [
      "public boolean isUnconditionallyExact(Type source, Type target);",
      "public boolean isUnconditionallyExactPrimitives(Type selectorType, Type targetType);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Resolve.java": [
      "Symbol findVar(DiagnosticPosition pos, Env<AttrContext> env, Name name);",
      "Symbol findIdentInternal(DiagnosticPosition pos, Env<AttrContext> env, Name name, KindSelector kind);",
      "public boolean isEarlyReference(Env<AttrContext> env, JCTree base, VarSymbol v);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.compiler/share/classes/com/sun/tools/javac/model/JavacTypes.java": [
      "public <T extends TypeMirror> T stripAnnotations(T t);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/P11Key.java": [
      "private abstract static class P11PrivateKey extends P11Key implements PrivateKey {",
      "private abstract static class P11PublicKey extends P11Key implements PublicKey {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/net/www/MessageHeader.java": [
      "public final class MessageHeader {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/util/calendar/CalendarDate.java": [
      "public abstract sealed class CalendarDate implements Cloneable permits BaseCalendar.Date {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/util/locale/BaseLocale.java": [
      "public static final byte ROOT, ENGLISH, US, FRENCH, GERMAN, ITALIAN, JAPANESE, KOREAN, CHINESE, SIMPLIFIED_CHINESE, TRADITIONAL_CHINESE, FRANCE, GERMANY, ITALY, JAPAN, KOREA, UK, CANADA, CANADA_FRENCH, NUM_CONSTANTS;",
      "public static final UnaryOperator<BaseLocale> INTERNER;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/security/jca/ProviderList.java": [
      "public Iterator<Service> getServices(String type, String algorithm);",
      "public Iterator<Service> getServices(List<ServiceId> ids);",
      "private final class ServiceIterator implements Iterator<Service> {",
      "public boolean hasNext();",
      "public Service next();",
      "public void remove();",
      "ArrayList<PreferredEntry> getAll(ServiceIterator s);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/nio/ch/FileChannelImpl.java": [
      "public static FileChannel open(FileDescriptor fd, String path, boolean readable, boolean writable, boolean sync, boolean direct, Closeable parent);",
      "private abstract static sealed class Unmapper implements Runnable, UnmapperProxy {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/net/Inet4Address.java": [
      "public static Inet4Address ofPosixLiteral(String posixIPAddressLiteral);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/ImmutableCollections.java": [
      "public E removeFirst();",
      "public E removeLast();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/Formatter.java": [
      "static final class FormatSpecifierParser {",
      "void reset(char first, int start);",
      "int parse();",
      "static boolean isConversion(char c);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/zip/ZipFile.java": [
      "public String toString();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/concurrent/ForkJoinPool.java": [
      "final ForkJoinTask<?> poll();",
      "final void topLevelExec(ForkJoinTask<?> task, int cfg);",
      "final void signalWork();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/concurrent/ForkJoinTask.java": [
      "abstract static class InterruptibleTask<T> extends ForkJoinTask<T> implements RunnableFuture<T> {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/Console.java": [
      "public Console println(Object obj);",
      "public Console print(Object obj);",
      "public String readln(String prompt);",
      "public Console format(String format, @Nullable Object... args);",
      "public Console format(Locale locale, String format, @Nullable Object... args);",
      "public Console printf(Locale locale, String format, Object... args);",
      "public String readLine(String format, @Nullable Object... args);",
      "public String readLine(Locale locale, String format, @Nullable Object... args);",
      "public char @Nullable [] readPassword(String format, @Nullable Object... args);",
      "public char @Nullable [] readPassword(Locale locale, String format, @Nullable Object... args);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/ByteArrayOutputStream.java": [
      "public void writeTo(OutputStream out) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/time/Instant.java": [
      "public Duration until(Instant endExclusive);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/System.java": [
      "private static class In extends FileInputStream {",
      "public int read() throws IOException;",
      "public int read(byte[] b) throws IOException;",
      "public int read(byte[] b, int off, int len) throws IOException;",
      "private static class Out extends FileOutputStream {",
      "public void write(int b) throws IOException;",
      "public void write(byte[] b) throws IOException;",
      "public void write(byte[] b, int off, int len) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/Process.java": [
      "public int read() throws IOException;",
      "public int read(byte[] b) throws IOException;",
      "public int read(byte[] b, int off, int len) throws IOException;",
      "static class PipeOutputStream extends FileOutputStream {",
      "public void write(int b) throws IOException;",
      "public void write(byte[] b) throws IOException;",
      "public void write(byte[] b, int off, int len) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/Thread.java": [
      "Interruptible nioBlocker();",
      "void blockedOn(Interruptible b);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/invoke/MemberName.java": [
      "void ensureTypeVisible(Class<?> refc);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/DecimalFormat.java": [
      "public boolean isStrict();",
      "public void setStrict(boolean strict);",
      "public String toString();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/MessageFormat.java": [
      "public String toString();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/SimpleDateFormat.java": [
      "public String toString();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/ChoiceFormat.java": [
      "public boolean isStrict();",
      "public void setStrict(boolean strict);",
      "public static double nextDouble(double d, boolean positive);",
      "public String toString();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/NumberFormat.java": [
      "public boolean isStrict();",
      "public void setStrict(boolean strict);",
      "static String matchToStyle(NumberFormat fmt, Locale locale);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.httpserver/share/classes/sun/net/httpserver/UnmodifiableHeaders.java": [
      "public String toString();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/code/CodeBlob.java": [
      "public int getContentOffset();",
      "public int getCodeOffset();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/gc/shared/ContiguousSpace.java": [
      "public class ContiguousSpace extends VMObject implements LiveRegionsProvider {",
      "public Address bottom();",
      "public Address end();",
      "public OopHandle bottomAsOopHandle();",
      "public OopHandle nextOopHandle(OopHandle handle, long size);",
      "public void print();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlDocletWriter.java": [
      "protected final TableOfContents tableOfContents;",
      "public String getFileTitle(DocFileElement element);",
      "boolean ignoreNonInlineTag(DocTree dtree, List<Name> openTags);",
      "private class MarkdownHandler {",
      "boolean handle(DocTree tree, InlineVisitor visitor);",
      "void addContent(Content result);",
      "private class HeadingNodeRenderer extends AbstractVisitor implements NodeRenderer {",
      "public Set<Class<? extends Node>> getNodeTypes();",
      "public void render(Node node);",
      "public void visit(Heading heading);",
      "protected void visitChildren(Node parent);",
      "private class InlineVisitor extends SimpleDocTreeVisitor<Boolean, Content> {",
      "public Boolean visitAttribute(AttributeTree node, Content content);",
      "public Boolean visitComment(CommentTree node, Content content);",
      "public Boolean visitDocRoot(DocRootTree node, Content content);",
      "public Boolean visitEndElement(EndElementTree node, Content content);",
      "public Boolean visitEntity(EntityTree node, Content content);",
      "public Boolean visitErroneous(ErroneousTree node, Content content);",
      "public Boolean visitEscape(EscapeTree node, Content content);",
      "public Boolean visitInheritDoc(InheritDocTree node, Content content);",
      "public Boolean visitStartElement(StartElementTree node, Content content);",
      "public Boolean visitText(TextTree node, Content content);",
      "protected Boolean defaultAction(DocTree node, Content content);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/Content.java": [
      "public boolean isPhrasingContent();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlConfiguration.java": [
      "public record JavaScriptFile(DocPath path, boolean isModule) {",
      "public List<JavaScriptFile> getAdditionalScripts();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/taglets/SimpleTaglet.java": [
      "static SimpleTaglet createWithDefaultForNested(HtmlConfiguration config, DocTree.Kind tagKind, String header, Set<Taglet.Location> locations, boolean enabled);",
      "protected List<? extends BlockTagTree> getDefaultBlockTags(Element e, Predicate<? super BlockTagTree> accepts);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/TextBuilder.java": [
      "public boolean isPhrasingContent();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/Text.java": [
      "public boolean isPhrasingContent();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlTree.java": [
      "public Map<HtmlAttr, String> getAttrs();",
      "public List<Content> getContents();",
      "public static HtmlTree INPUT(HtmlAttr.InputType type, HtmlId id);",
      "public static HtmlTree INPUT(HtmlAttr.InputType type, HtmlStyle style);",
      "public static HtmlTree OL(HtmlStyle style);",
      "public boolean isPhrasingContent();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/RawHtml.java": [
      "public static RawHtml markdown(CharSequence markdownOutput);",
      "public boolean isPhrasingContent();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/ContentBuilder.java": [
      "public List<Content> getContents();",
      "public boolean isPhrasingContent();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/WorkArounds.java": [
      "public Map<String, Object> getJepInfo(String feature);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/BaseConfiguration.java": [
      "protected DocLint doclint;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/ElementsTable.java": [
      "ElementsTable compilationUnits(com.sun.tools.javac.util.List<JCCompilationUnit> compilationUnits);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.jlink/share/classes/jdk/tools/jlink/internal/ResourcePoolManager.java": [
      "public static CompressedModuleData newCompressedResource(ResourcePoolEntry original, ByteBuffer compressed, String plugin, StringTable strings, ByteOrder order);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.accessibility/windows/classes/com/sun/java/accessibility/internal/AccessBridge.java": [
      "private abstract static class AccessibilityGraphicsEnvironment extends GraphicsEnvironment {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.jshell/share/classes/jdk/internal/jshell/tool/Startup.java": [
      "static Startup unpack(String storedForm, boolean preview, MessageHandler mh);",
      "static Startup defaultStartup(boolean preview, MessageHandler mh);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.desktop/share/classes/javax/swing/text/StyleContext.java": [
      "static final class KeyEnumeration implements Enumeration<Object> {",
      "static final class FontKey {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.desktop/share/classes/javax/swing/text/html/HTMLDocument.java": [
      "void convertAttributes(HTML.Tag t, MutableAttributeSet attr);",
      "final class ConvertSpanAction extends CharacterAction {",
      "void convertAttributes(HTML.Tag t, MutableAttributeSet attr);",
      "final class ConvertAction extends CharacterAction {",
      "void convertAttributes(HTML.Tag t, MutableAttributeSet attr);"
    ]
  },
  "jdk-24": {
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.xml/share/classes/com/sun/org/apache/xerces/internal/impl/xpath/regex/RegularExpression.java": [
      "boolean claim();",
      "void release();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.xml/share/classes/com/sun/org/apache/xalan/internal/xsltc/compiler/util/ErrorMsg.java": [
      "public static final String UNSUPPORTED_EXT_FUNC_ERR;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.compiler/share/classes/com/sun/tools/javac/file/JavacFileManager.java": [
      "public ArchiveContainer(Path archivePath) throws IOException, ProviderNotFoundException {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Type.java": [
      "public ErrorType(Type originalType, TypeSymbol tsym, List<TypeMetadata> metadata) {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Symbol.java": [
      "public ClassSymbol innermostAccessibleEnclosingClass();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Types.java": [
      "public final boolean dumpStacktraceOnError;",
      "public static class FunctionDescriptorLookupError extends CompilerInternalException {",
      "boolean areDisjoint(ClassSymbol csym, List<Type> permittedSubtypes);",
      "public abstract class SignatureGenerator {",
      "public class InvalidSignatureException extends CompilerInternalException {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Resolve.java": [
      "public static class InapplicableMethodException extends CompilerInternalException {",
      "Symbol access(Env<AttrContext> env, DiagnosticPosition pos, Symbol location, Symbol sym);",
      "void debug(DiagnosticPosition pos, Symbol sym);",
      "abstract class ReferenceLookupHelper extends LookupHelper {",
      "ReferenceLookupHelper unboundLookup(InferenceContext inferenceContext);",
      "abstract JCMemberReference.ReferenceKind referenceKind(Symbol sym);",
      "Symbol access(Env<AttrContext> env, DiagnosticPosition pos, Symbol location, Symbol sym);",
      "class MethodReferenceLookupHelper extends ReferenceLookupHelper {",
      "ReferenceLookupHelper unboundLookup(InferenceContext inferenceContext);",
      "ReferenceKind referenceKind(Symbol sym);",
      "class UnboundMethodReferenceLookupHelper extends MethodReferenceLookupHelper {",
      "class ArrayConstructorReferenceLookupHelper extends ReferenceLookupHelper {",
      "protected Symbol lookup(Env<AttrContext> env, MethodResolutionPhase phase);",
      "class ConstructorReferenceLookupHelper extends ReferenceLookupHelper {",
      "Symbol findSelfContaining(DiagnosticPosition pos, Env<AttrContext> env, TypeSymbol c, boolean isSuper);",
      "Symbol findLocalClassOwner(Env<AttrContext> env, TypeSymbol c);",
      "class BadLocalClassCreation extends StaticError {",
      "JCDiagnostic getDiagnostic(JCDiagnostic.DiagnosticType dkind, DiagnosticPosition pos, Symbol location, Type site, Name name, List<Type> argtypes, List<Type> typeargtypes);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.compiler/share/classes/com/sun/tools/javac/api/JavacScope.java": [
      "public ScopeType getScopeType();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.logging/share/classes/java/util/logging/Handler.java": [
      "public abstract void close();",
      "public synchronized void setFormatter(Formatter newFormatter);",
      "public synchronized void setEncoding(@Nullable String encoding) throws java.io.UnsupportedEncodingException;",
      "public synchronized void setFilter(@Nullable Filter newFilter);",
      "public synchronized void setErrorManager(ErrorManager em);",
      "public synchronized void setLevel(Level newLevel);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.logging/share/classes/java/util/logging/Logger.java": [
      "public void setFilter(@GuardSatisfied Logger this, @Nullable Filter newFilter);",
      "public void setLevel(@GuardSatisfied Logger this, @Nullable Level newLevel);",
      "public void addHandler(@GuardSatisfied Logger this, Handler handler);",
      "public void removeHandler(@GuardSatisfied Logger this, @Nullable Handler handler);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.logging/share/classes/java/util/logging/LogManager.java": [
      "public void readConfiguration() throws IOException;",
      "String getConfigurationFileName();",
      "public void reset();",
      "public void readConfiguration(InputStream ins) throws IOException;",
      "public void checkAccess();",
      "private static final class LoggingProviderAccess implements LoggingProviderImpl.LogManagerAccess {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/sun/net/www/MessageHeader.java": [
      "public MessageHeader(int maxHeaderSize) {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/sun/security/ssl/SSLSessionImpl.java": [
      "byte[] incrTicketNonceCounter();",
      "public boolean isPSK();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/sun/nio/ch/FileChannelImpl.java": [
      "int available() throws IOException;",
      "boolean isOther() throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/sun/nio/ch/FileDispatcher.java": [
      "abstract int available(FileDescriptor fd) throws IOException;",
      "abstract boolean isOther(FileDescriptor fd) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/net/NetworkInterface.java": [
      "public List<InterfaceAddress> getInterfaceAddresses();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/net/InetAddress.java": [
      "static InetAddress[] getAllByName0(String host) throws UnknownHostException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/util/ArrayList.java": [
      "public void sort(Comparator<? super E> c);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/util/Locale.java": [
      "private static final class LocaleCache implements Function<Object, Locale> {",
      "public static Locale cache(Object key);",
      "public Locale apply(Object key);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/util/Formatter.java": [
      "private record FixedString(String s, int start, int end) implements FormatString {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/util/zip/ZipEntry.java": [
      "static boolean isCENHeaderValid(String name, byte[] extra, String comment);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/util/zip/ZipFile.java": [
      "static record EntryPos(String name, int pos) {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/util/zip/ZipCoder.java": [
      "byte compare(String str, byte[] b, int off, int len, boolean matchDirectory);",
      "byte compare(String str, byte[] b, int off, int len, boolean matchDirectory);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/util/zip/ZipUtils.java": [
      "public static final long get64S(byte[] b, int off);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/util/concurrent/Exchanger.java": [
      "static final class Slot {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/util/concurrent/ForkJoinPool.java": [
      "final void topLevelExec(ForkJoinTask<?> task, int fifo);",
      "final void cancelTasks();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/security/Security.java": [
      "private static final class SecPropLoader {",
      "static void loadAll();",
      "static boolean isInclude(String key);",
      "static void checkReservedKey(String key) throws IllegalArgumentException;",
      "static void loadInclude(String propFile);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/security/Policy.java": [
      "public boolean isReadOnly();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/io/ObjectInputStream.java": [
      "protected ObjectInputStream() throws IOException {",
      "protected boolean enableResolveObject(boolean enable);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/io/ObjectOutputStream.java": [
      "protected ObjectOutputStream() throws IOException {",
      "protected boolean enableReplaceObject(boolean enable);",
      "void writeBytes(String s, int len) throws IOException;",
      "public void writeUTF(String str) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/io/PushbackInputStream.java": [
      "public synchronized void close() throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/io/BufferedInputStream.java": [
      "public synchronized int read(byte[] b, @IndexOrHigh({ \"#1\" }) int off, @LTLengthOf(value = { \"#1\" }, offset = { \"#2 - 1\" }) @NonNegative int len) throws IOException;",
      "public synchronized long skip(long n) throws IOException;",
      "public synchronized int available() throws IOException;",
      "public synchronized void mark(int readlimit);",
      "public synchronized void reset() throws IOException;",
      "public synchronized long transferTo(OutputStream out) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/io/Reader.java": [
      "public static Reader of(final CharSequence cs);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/io/BufferedOutputStream.java": [
      "public synchronized void write(@PolySigned int b) throws IOException;",
      "public synchronized void flush() throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/io/Console.java": [
      "public Console println();",
      "public String readln();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/io/ByteArrayOutputStream.java": [
      "public synchronized void writeTo(OutputStream out) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/math/BigInteger.java": [
      "static int bitLengthForLong(long n);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/math/MutableBigInteger.java": [
      "void shiftAdd(MutableBigInteger addend, int n);",
      "void shiftAddDisjoint(MutableBigInteger addend, int n);",
      "MutableBigInteger[] sqrtRem(boolean needRemainder);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/time/LocalDateTime.java": [
      "void formatTo(StringBuilder buf);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/time/LocalTime.java": [
      "void formatTo(StringBuilder buf);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/time/LocalDate.java": [
      "void formatTo(StringBuilder buf);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/Process.java": [
      "public boolean waitFor(Duration duration) throws InterruptedException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/Class.java": [
      "public Object @Nullable [] getSigners();",
      "void setSigners(Object[] signers);",
      "public Method getEnclosingMethod();",
      "public Constructor<? extends Object> getEnclosingConstructor();",
      "public Class<? extends Object> getDeclaringClass();",
      "public Class<? extends Object> getEnclosingClass();",
      "public Class<? extends Object>[] getClasses();",
      "public Field[] getFields();",
      "public Method[] getMethods();",
      "public Constructor<? extends Object>[] getConstructors();",
      "public Field getField(String name) throws NoSuchFieldException;",
      "public Method getMethod(String name, Class<?>@Nullable ... parameterTypes) throws NoSuchMethodException;",
      "public Constructor<T> getConstructor(Class<?>... parameterTypes) throws NoSuchMethodException;",
      "public Class<? extends Object>[] getDeclaredClasses();",
      "public Field[] getDeclaredFields();",
      "public RecordComponent[] getRecordComponents();",
      "public Method[] getDeclaredMethods();",
      "public Constructor<?>[] getDeclaredConstructors();",
      "public Field getDeclaredField(String name) throws NoSuchFieldException;",
      "public Method getDeclaredMethod(String name, Class<?>... parameterTypes) throws NoSuchMethodException;",
      "List<Method> getDeclaredPublicMethods(String name, Class<?>... parameterTypes);",
      "Method findMethod(boolean publicOnly, String name, Class<?>... parameterTypes);",
      "public Constructor<T> getDeclaredConstructor(Class<?>... parameterTypes) throws NoSuchMethodException;",
      "public InputStream getResourceAsStream(String name);",
      "public ProtectionDomain getProtectionDomain();",
      "private static class Holder {",
      "ProtectionDomain protectionDomain();",
      "static native <T> Class<T> getPrimitiveClass(String name);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/Character.java": [
      "public static final UnicodeBlock TODHRI;",
      "public static final UnicodeBlock GARAY;",
      "public static final UnicodeBlock TULU_TIGALARI;",
      "public static final UnicodeBlock MYANMAR_EXTENDED_C;",
      "public static final UnicodeBlock SUNUWAR;",
      "public static final UnicodeBlock EGYPTIAN_HIEROGLYPHS_EXTENDED_A;",
      "public static final UnicodeBlock GURUNG_KHEMA;",
      "public static final UnicodeBlock KIRAT_RAI;",
      "public static final UnicodeBlock SYMBOLS_FOR_LEGACY_COMPUTING_SUPPLEMENT;",
      "public static final UnicodeBlock OL_ONAL;",
      "TODHRI,",
      "GARAY,",
      "TULU_TIGALARI,",
      "SUNUWAR,",
      "GURUNG_KHEMA,",
      "KIRAT_RAI,",
      "OL_ONAL,"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/ClassLoader.java": [
      "static long findNative(@Nullable ClassLoader loader, Class<?> clazz, String entryName, String javaName);",
      "static NativeLibraries nativeLibrariesFor(@Nullable ClassLoader loader);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/StringCoding.java": [
      "public static int countNonZeroAscii(String s);",
      "public static int countNonZeroAsciiLatin1(byte[] ba, int off, int len);",
      "public static int countNonZeroAsciiUTF16(byte[] ba, int off, int strlen);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/SecurityManager.java": [
      "protected Class<?>[] getClassContext();",
      "private static class StackWalkerHolder {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/ref/ReferenceQueue.java": [
      "private static class Lock {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/ref/Reference.java": [
      "void clearImpl();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/ref/PhantomReference.java": [
      "void clearImpl();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/invoke/MethodType.java": [
      "static HashMap<MethodType, MethodType> copyInternTable();",
      "static void createArchivedObjects();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/invoke/MethodHandles.java": [
      "static int optionsToFlag(ClassOption[] options);",
      "static String validateAndFindInternalName(byte[] bytes, String pkgName);",
      "ClassDefiner makeClassDefiner(String internalName, byte[] bytes, ClassFileDumper dumper);",
      "ClassDefiner makeHiddenClassDefiner(String internalName, byte[] bytes, ClassFileDumper dumper);",
      "ClassDefiner makeHiddenClassDefiner(String internalName, byte[] bytes, ClassFileDumper dumper, int flags);",
      "record ClassDefiner(Lookup lookup, String internalName, byte[] bytes, int classFlags, ClassFileDumper dumper) {",
      "ClassDefiner {",
      "assert ((classFlags & HIDDEN_CLASS) != 0 || (classFlags & STRONG_LOADER_LINK) == STRONG_LOADER_LINK);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/invoke/LambdaForm.java": [
      "Name withIndex(int i);",
      "static Name[] invokeArguments(int extra, MethodType types);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/reflect/Constructor.java": [
      "Constructor<T> newWithAccessor(ConstructorAccessor accessor);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/lang/reflect/ReflectAccess.java": [
      "final class ReflectAccess implements JavaLangReflectAccess {",
      "public <T> Constructor<T> newConstructorWithAccessor(Constructor<T> original, ConstructorAccessor accessor);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/nio/Buffer.java": [
      "abstract int scaleShifts();",
      "abstract AbstractMemorySegmentImpl heapSegment(Object base, long offset, long length, boolean readOnly, MemorySessionImpl bufferScope);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/text/DecimalFormat.java": [
      "final StringBuf format(Object number, StringBuf toAppendTo, FieldPosition pos);",
      "StringBuf format(double number, StringBuf result, FieldPosition fieldPosition);",
      "StringBuf format(double number, StringBuf result, FieldDelegate delegate);",
      "boolean handleNaN(double number, StringBuf result, FieldDelegate delegate);",
      "boolean handleInfinity(double number, StringBuf result, FieldDelegate delegate, boolean isNegative);",
      "StringBuf doubleSubformat(double number, StringBuf result, FieldDelegate delegate, boolean isNegative);",
      "StringBuf format(long number, StringBuf result, FieldPosition fieldPosition);",
      "StringBuf format(long number, StringBuf result, FieldDelegate delegate);",
      "StringBuf format(BigDecimal number, StringBuf result, FieldDelegate delegate);",
      "StringBuf format(BigInteger number, StringBuf result, FieldDelegate delegate, boolean formatLong);",
      "DigitList getDigitList();",
      "void subformatNumber(StringBuf result, FieldDelegate delegate, boolean isNegative, boolean isInteger, int maxIntDigits, int minIntDigits, int maxFraDigits, int minFraDigits);",
      "record NumericPosition(int fullPos, int intPos) {",
      "NumericPosition subparseNumber(String text, int position, DigitList digits, boolean checkExponent, boolean isExponent, boolean[] status);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/text/MessageFormat.java": [
      "final StringBuf format(Object arguments, StringBuf result, FieldPosition pos);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/text/SimpleDateFormat.java": [
      "final StringBuf format(Date date, StringBuf toAppendTo, FieldPosition pos);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/text/ChoiceFormat.java": [
      "StringBuf format(long number, StringBuf toAppendTo, FieldPosition status);",
      "StringBuf format(double number, StringBuf toAppendTo, FieldPosition status);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/text/CharacterIteratorFieldDelegate.java": [
      "public void formatted(Format.Field attr, Object value, int start, int end, Format.StringBuf buffer);",
      "public void formatted(int fieldID, Format.Field attr, Object value, int start, int end, Format.StringBuf buffer);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/text/DateFormat.java": [
      "final StringBuf format(Object obj, StringBuf toAppendTo, FieldPosition fieldPosition);",
      "StringBuf format(Date date, StringBuf toAppendTo, FieldPosition fieldPosition);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/text/NumberFormat.java": [
      "StringBuf format(Object number, StringBuf toAppendTo, FieldPosition pos);",
      "StringBuf format(double number, StringBuf toAppendTo, FieldPosition pos);",
      "StringBuf format(long number, StringBuf toAppendTo, FieldPosition pos);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/java/text/FieldPosition.java": [
      "public void formatted(Format.Field attr, Object value, int start, int end, Format.StringBuf buffer);",
      "public void formatted(int fieldID, Format.Field attr, Object value, int start, int end, Format.StringBuf buffer);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/com/sun/crypto/provider/DHPrivateKey.java": [
      "private static class DHComponents {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.base/share/classes/com/sun/crypto/provider/DHPublicKey.java": [
      "private static class DHComponents {"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.net.http/share/classes/jdk/internal/net/http/ConnectionPool.java": [
      "void cleanup(HttpConnection c, long pendingData, Throwable error);",
      "public void dropSubscription();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.rmi/share/classes/java/rmi/server/RMIClassLoader.java": [
      "public static ClassLoader getClassLoader(String codebase) throws MalformedURLException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/code/CodeBlob.java": [
      "public boolean isUpcallStub();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/ClassWriter.java": [
      "protected static final int LONG_TYPE_PARAM;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/ModuleWriter.java": [
      "public void addIndirectPackages(Table<?> table, Map<ModuleElement, SortedSet<PackageElement>> ip, Predicate<ModuleElement> acceptModule);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlConfiguration.java": [
      "SEARCH_TAGS,"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/html/TextBuilder.java": [
      "package jdk.javadoc.internal.html;",
      "public class TextBuilder extends Content {",
      "public TextBuilder() {",
      "public TextBuilder(CharSequence initialContent) {",
      "public TextBuilder add(CharSequence strContent);",
      "public boolean isEmpty();",
      "public boolean isPhrasingContent();",
      "public int charCount();",
      "public String toString();",
      "public boolean write(Writer out, String newline, boolean atNewline) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/html/Text.java": [
      "package jdk.javadoc.internal.html;",
      "public class Text extends Content {",
      "public static final Text EMPTY;",
      "public static Text of(CharSequence content);",
      "public boolean isEmpty();",
      "public boolean isPhrasingContent();",
      "public int charCount();",
      "static int charCount(CharSequence cs);",
      "public String toString();",
      "public boolean write(Writer out, String newline, boolean atNewline) throws IOException;",
      "public static final String NL;",
      "public static CharSequence normalizeNewlines(CharSequence text);",
      "static boolean checkNewlines(CharSequence cs);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/html/Comment.java": [
      "package jdk.javadoc.internal.html;",
      "public class Comment extends Content {",
      "public Comment(String comment) {",
      "public boolean isEmpty();",
      "public boolean write(Writer out, String newline, boolean atNewline) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/html/HtmlTree.java": [
      "package jdk.javadoc.internal.html;",
      "public class HtmlTree extends Content {",
      "public final HtmlTag tag;",
      "public static HtmlTree of(HtmlTag tag);",
      "public HtmlTree put(HtmlAttr attrName, String attrValue);",
      "public HtmlTree setId(HtmlId id);",
      "public HtmlTree setTitle(Content body);",
      "public HtmlTree setRole(HtmlAttr.Role role);",
      "public HtmlTree setStyle(HtmlStyle style);",
      "public HtmlTree addStyle(HtmlStyle style);",
      "public HtmlTree addStyle(String style);",
      "public HtmlTree add(Content content);",
      "public HtmlTree addUnchecked(Content content);",
      "public HtmlTree add(CharSequence stringContent);",
      "public HtmlTree add(List<? extends Content> list);",
      "public Map<HtmlAttr, String> getAttrs();",
      "public List<Content> getContents();",
      "public <T> HtmlTree addAll(Collection<T> items, Function<T, Content> mapper);",
      "public int charCount();",
      "public static final BitSet MAIN_CHARS;",
      "public static final BitSet QUERY_FRAGMENT_CHARS;",
      "public static String encodeURL(String url);",
      "public static HtmlTree A(String ref, Content body);",
      "public static HtmlTree A(URI ref, Content body);",
      "public static HtmlTree BODY(HtmlStyle style);",
      "public static HtmlTree BR();",
      "public static HtmlTree BUTTON(HtmlId id);",
      "public static HtmlTree BUTTON(HtmlStyle style);",
      "public static HtmlTree CAPTION(Content body);",
      "public static HtmlTree CODE();",
      "public static HtmlTree CODE(Content body);",
      "public static HtmlTree DD();",
      "public static HtmlTree DD(Content body);",
      "public static HtmlTree DETAILS();",
      "public static HtmlTree DETAILS(HtmlStyle style);",
      "public static HtmlTree DIV(HtmlId id);",
      "public static HtmlTree DIV(HtmlStyle style);",
      "public static HtmlTree DIV(HtmlStyle style, Content body);",
      "public static HtmlTree DIV(Content body);",
      "public static HtmlTree DL(HtmlStyle style);",
      "public static HtmlTree DL(HtmlStyle style, Content body);",
      "public static HtmlTree DT(Content body);",
      "public static HtmlTree EM(String body);",
      "public static HtmlTree FOOTER();",
      "public static HtmlTree HEADER();",
      "public static HtmlTree HEADING(HtmlTag headingTag, Content body);",
      "public static HtmlTree HEADING(HtmlTag headingTag, HtmlStyle style, Content body);",
      "public static HtmlTree HEADING_TITLE(HtmlTag headingTag, HtmlStyle style, Content body);",
      "public static HtmlTree HEADING_TITLE(HtmlTag headingTag, Content body);",
      "public static HtmlTree HR();",
      "public static HtmlTree HTML(String lang, Content head, Content body);",
      "public static HtmlTree INPUT(HtmlAttr.InputType type, HtmlId id);",
      "public static HtmlTree INPUT(HtmlAttr.InputType type, HtmlStyle style);",
      "public static HtmlTree LABEL(String forLabel, Content body);",
      "public static HtmlTree LI();",
      "public static HtmlTree LI(HtmlStyle style);",
      "public static HtmlTree LI(Content body);",
      "public static HtmlTree LI(HtmlStyle style, Content body);",
      "public static HtmlTree LINK(String rel, String type, String href, String title);",
      "public static HtmlTree MAIN();",
      "public static HtmlTree MAIN(Content body);",
      "public static HtmlTree META(String httpEquiv, String content, String charset);",
      "public static HtmlTree META(String name, String content);",
      "public static HtmlTree NAV();",
      "public static HtmlTree NOSCRIPT(Content body);",
      "public static HtmlTree OL(HtmlStyle style);",
      "public static HtmlTree P(Content body);",
      "public static HtmlTree P(HtmlStyle style, Content body);",
      "public static HtmlTree PRE();",
      "public static HtmlTree PRE(HtmlStyle style);",
      "public static HtmlTree PRE(Content body);",
      "public static HtmlTree SCRIPT(String src);",
      "public static HtmlTree SECTION(HtmlStyle style);",
      "public static HtmlTree SECTION(HtmlStyle style, Content body);",
      "public static HtmlTree SMALL(Content body);",
      "public static HtmlTree SPAN(Content body);",
      "public static HtmlTree SPAN(HtmlStyle styleClass);",
      "public static HtmlTree SPAN(HtmlStyle styleClass, Content body);",
      "public static HtmlTree SPAN_ID(HtmlId id, Content body);",
      "public static HtmlTree SPAN(HtmlId id, HtmlStyle style, Content body);",
      "public static HtmlTree SUMMARY(Content body);",
      "public static HtmlTree SUP(HtmlStyle style, Content body);",
      "public static HtmlTree TITLE(String body);",
      "public static HtmlTree UL();",
      "public static HtmlTree UL(HtmlStyle style);",
      "public static HtmlTree UL(HtmlId id, HtmlStyle style);",
      "public static HtmlTree UL(HtmlStyle style, Content first, Content... more);",
      "public static <T> HtmlTree UL(HtmlStyle style, Collection<T> items, Function<T, Content> mapper);",
      "public static HtmlTree WBR();",
      "public boolean isEmpty();",
      "public boolean isPhrasingContent();",
      "public boolean hasContent();",
      "public boolean hasAttrs();",
      "public boolean hasAttr(HtmlAttr attrName);",
      "public boolean isDiscardable();",
      "public boolean isInline();",
      "public boolean isVoid();",
      "public boolean write(Writer out, String newline, boolean atNewline) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/html/RawHtml.java": [
      "package jdk.javadoc.internal.html;",
      "public class RawHtml extends Content {",
      "protected final String rawHtmlContent;",
      "public static RawHtml of(CharSequence rawHtml);",
      "public static RawHtml markdown(CharSequence markdownOutput);",
      "public static RawHtml startElement(CharSequence name, Content attrs, boolean selfClosing);",
      "public static RawHtml endElement(CharSequence name);",
      "public static RawHtml comment(String body);",
      "public static RawHtml cdata(String body);",
      "public boolean isEmpty();",
      "public boolean isPhrasingContent();",
      "public String toString();",
      "protected static int charCount(CharSequence htmlText);",
      "public boolean write(Writer out, String newline, boolean atNewline) throws IOException;"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/html/ContentBuilder.java": [
      "package jdk.javadoc.internal.html;",
      "public class ContentBuilder extends Content {",
      "protected List<Content> contents;",
      "public ContentBuilder() {",
      "public ContentBuilder(Content... contents) {",
      "public ContentBuilder add(Content content);",
      "public ContentBuilder add(CharSequence text);",
      "public List<Content> getContents();",
      "public boolean write(Writer writer, String newline, boolean atNewline) throws IOException;",
      "public boolean isEmpty();",
      "public int charCount();",
      "public boolean isPhrasingContent();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/html/Script.java": [
      "package jdk.javadoc.internal.html;",
      "public class Script {",
      "public Script() {",
      "public Script(String code) {",
      "public Script append(CharSequence code);",
      "public Script appendStringLiteral(CharSequence text);",
      "public Script appendStringLiteral(CharSequence text, char quoteChar);",
      "public Content asContent();",
      "public static String stringLiteral(CharSequence s);",
      "public static String stringLiteral(CharSequence s, char quoteChar);",
      "private static class ScriptContent extends Content {",
      "public ScriptContent add(CharSequence code);",
      "public boolean write(Writer writer, String newline, boolean atNewline) throws IOException;",
      "public boolean isEmpty();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.javadoc/share/classes/jdk/javadoc/internal/html/Content.java": [
      "package jdk.javadoc.internal.html;",
      "public abstract class Content {",
      "public String toString();",
      "public Content add(Content content);",
      "public Content add(CharSequence stringContent);",
      "public <T> Content addAll(Collection<T> items, Function<T, Content> mapper);",
      "public abstract boolean write(Writer writer, String newline, boolean atNewline) throws IOException;",
      "public abstract boolean isEmpty();",
      "public boolean isDiscardable();",
      "public int charCount();",
      "public boolean isPhrasingContent();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.desktop/share/classes/java/beans/Beans.java": [
      "public static void setDesignTime(boolean isDesignTime);",
      "public static void setGuiAvailable(boolean isGuiAvailable);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.desktop/share/classes/java/awt/Window.java": [
      "public final void setAlwaysOnTop(boolean alwaysOnTop);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.desktop/share/classes/java/awt/KeyboardFocusManager.java": [
      "public static void setCurrentKeyboardFocusManager(KeyboardFocusManager newManager);",
      "protected Component getGlobalFocusOwner();",
      "protected void setGlobalFocusOwner(Component focusOwner);",
      "public void clearGlobalFocusOwner();",
      "protected Component getGlobalPermanentFocusOwner();",
      "protected void setGlobalPermanentFocusOwner(Component permanentFocusOwner);",
      "protected Window getGlobalFocusedWindow();",
      "protected void setGlobalFocusedWindow(Window focusedWindow);",
      "protected Window getGlobalActiveWindow();",
      "protected void setGlobalActiveWindow(Window activeWindow);",
      "protected Container getGlobalCurrentFocusCycleRoot();",
      "public void setGlobalCurrentFocusCycleRoot(Container newFocusCycleRoot);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.desktop/share/classes/java/awt/font/TextLine.java": [
      "public Shape getOutline();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/java.desktop/share/classes/javax/swing/UIManager.java": [
      "public static void setInstalledLookAndFeels(LookAndFeelInfo[] infos);"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotObjectConstantImpl.java": [
      "public boolean isCompressible();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotCompressedNullConstant.java": [
      "public boolean isCompressible();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotResolvedJavaMethodImpl.java": [
      "public boolean isScoped();"
    ],
    "https://github.com/eisop/jdk/tree/jdk-24/src/jdk.internal.vm.ci/share/classes/jdk/vm/ci/hotspot/HotSpotMetaspaceConstantImpl.java": [
      "public boolean isCompressible();"
    ]
  }
}