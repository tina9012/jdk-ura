{
  "jdk-23": {
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.jfr/share/classes/jdk/jfr/internal/Type.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "public void setFields(List<ValueDescriptor> fields);",
          "public <T> T getAnnotationValue(Class<? extends java.lang.annotation.Annotation> clazz, T defaultValue);",
          "public boolean hasAnnotation(Class<? extends java.lang.annotation.Annotation> clazz);"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.compiler/share/classes/javax/lang/model/util/Elements.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "default DocCommentKind getDocCommentKind(Element e);",
          "enum DocCommentKind {",
          "END_OF_LINE, TRADITIONAL"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.compiler/share/classes/javax/lang/model/util/Types.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "default <T extends TypeMirror> T stripAnnotations(T t);"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.compiler/share/classes/com/sun/tools/javac/tree/TreeInfo.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "public static boolean isExplicitThisReference(Types types, Type.ClassType currentClass, JCTree tree);",
          "public static boolean isConstructorCall(JCMethodInvocation invoke);"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Symbol.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "private record PermittedClassWithPos(Symbol permittedClass, int pos) {",
          "public void addPermittedSubclass(ClassSymbol csym, int pos);",
          "public boolean isPermittedSubclass(Symbol csym);",
          "public void clearPermittedSubclasses();",
          "public void setPermittedSubclasses(List<Symbol> permittedSubs);"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.compiler/share/classes/com/sun/tools/javac/code/Types.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "public boolean isUnconditionallyExact(Type source, Type target);",
          "public boolean isUnconditionallyExactPrimitives(Type selectorType, Type targetType);"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.compiler/share/classes/com/sun/tools/javac/comp/Resolve.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "Symbol findVar(DiagnosticPosition pos, Env<AttrContext> env, Name name);",
          "Symbol findIdentInternal(DiagnosticPosition pos, Env<AttrContext> env, Name name, KindSelector kind);",
          "public boolean isEarlyReference(Env<AttrContext> env, JCTree base, VarSymbol v);"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.compiler/share/classes/com/sun/tools/javac/model/JavacTypes.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@DefinedBy(Api.LANGUAGE_MODEL)",
          "@SuppressWarnings(\"unchecked\")",
          "public <T extends TypeMirror> T stripAnnotations(T t);"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.crypto.cryptoki/share/classes/sun/security/pkcs11/P11Key.java": {
      "new_changes": {
        "new_classes": [
          {
            "declaration": "private abstract static class P11PrivateKey extends P11Key implements PrivateKey {",
            "methods": []
          },
          {
            "declaration": "private abstract static class P11PublicKey extends P11Key implements PublicKey {",
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/net/www/MessageHeader.java": {
      "new_changes": {
        "new_classes": [
          {
            "declaration": "public final class MessageHeader {",
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/util/calendar/CalendarDate.java": {
      "new_changes": {
        "new_classes": [
          {
            "declaration": "public abstract sealed class CalendarDate implements Cloneable permits BaseCalendar.Date {",
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/util/locale/BaseLocale.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "public static final byte ROOT, ENGLISH, US, FRENCH, GERMAN, ITALIAN, JAPANESE, KOREAN, CHINESE, SIMPLIFIED_CHINESE, TRADITIONAL_CHINESE, FRANCE, GERMANY, ITALY, JAPAN, KOREA, UK, CANADA, CANADA_FRENCH, NUM_CONSTANTS;",
          "public static final UnaryOperator<BaseLocale> INTERNER;"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/security/util/BitArray.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/security/util/DerValue.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/security/x509/GeneralSubtrees.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/security/x509/GeneralNames.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/security/x509/RFC822Name.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/security/x509/AlgorithmId.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/security/jca/ProviderList.java": {
      "new_changes": {
        "new_classes": [
          {
            "declaration": "private final class ServiceIterator implements Iterator<Service> {",
            "methods": [
              "@Override",
              "public boolean hasNext();",
              "@Override",
              "public Service next();",
              "@Override",
              "public void remove();"
            ]
          }
        ],
        "new_methods": [
          "public Iterator<Service> getServices(String type, String algorithm);",
          "public Iterator<Service> getServices(List<ServiceId> ids);",
          "ArrayList<PreferredEntry> getAll(ServiceIterator s);"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/sun/nio/ch/FileChannelImpl.java": {
      "new_changes": {
        "new_classes": [
          {
            "declaration": "private abstract static sealed class Unmapper implements Runnable, UnmapperProxy {",
            "methods": []
          }
        ],
        "new_methods": [
          "public static FileChannel open(FileDescriptor fd, String path, boolean readable, boolean writable, boolean sync, boolean direct, Closeable parent);"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/net/MulticastSocket.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@Deprecated()",
          "@Deprecated()",
          "@Deprecated()"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/net/Inet4Address.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "public static Inet4Address ofPosixLiteral(String posixIPAddressLiteral);"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/net/DatagramSocketImpl.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@Deprecated()",
          "@Deprecated()"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/net/Socket.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")",
          "@Deprecated()",
          "@SuppressWarnings(\"this-escape\")",
          "@Deprecated()",
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/net/ServerSocket.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/TreeMap.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/LinkedList.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/EnumMap.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/LinkedHashMap.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/IdentityHashMap.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/HashMap.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/ImmutableCollections.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "public E removeFirst();",
          "@Override",
          "public E removeLast();",
          "@Override"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/SimpleTimeZone.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/WeakHashMap.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/ArrayDeque.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/Timer.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/Random.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/Formatter.java": {
      "new_changes": {
        "new_classes": [
          {
            "declaration": "static final class FormatSpecifierParser {",
            "methods": [
              "void reset(char first, int start);",
              "int parse();",
              "static boolean isConversion(char c);"
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/GregorianCalendar.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/HashSet.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/Hashtable.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/LinkedHashSet.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/TreeSet.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/jar/Manifest.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/jar/JarOutputStream.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/jar/JarInputStream.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/zip/Inflater.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@Deprecated()",
          "@Deprecated()"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/zip/Deflater.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@Deprecated()",
          "@Deprecated()"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/zip/ZipFile.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@Override",
          "public String toString();"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/concurrent/ForkJoinPool.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "final ForkJoinTask<?> poll();",
          "final void topLevelExec(ForkJoinTask<?> task, int cfg);",
          "final void signalWork();"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/concurrent/ConcurrentHashMap.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/concurrent/ConcurrentSkipListSet.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/concurrent/DelayQueue.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/concurrent/ConcurrentSkipListMap.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/concurrent/ForkJoinTask.java": {
      "new_changes": {
        "new_classes": [
          {
            "declaration": "abstract static class InterruptibleTask<T> extends ForkJoinTask<T> implements RunnableFuture<T> {",
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/concurrent/AbstractExecutorService.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "@Override"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/util/concurrent/LinkedBlockingDeque.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/security/DigestOutputStream.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/security/DigestInputStream.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/security/Provider.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/security/cert/PKIXParameters.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/PrintStream.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/ObjectInputStream.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/ObjectOutputStream.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@Deprecated()"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/FileOutputStream.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/FileInputStream.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/OutputStreamWriter.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/InputStreamReader.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/PipedReader.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/RandomAccessFile.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/StreamTokenizer.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/WriteAbortedException.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/PipedInputStream.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/PipedWriter.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/Console.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@PreviewFeature(feature = PreviewFeature.Feature.IMPLICIT_CLASSES)",
          "public Console println(Object obj);",
          "@PreviewFeature(feature = PreviewFeature.Feature.IMPLICIT_CLASSES)",
          "public Console print(Object obj);",
          "@PreviewFeature(feature = PreviewFeature.Feature.IMPLICIT_CLASSES)",
          "public String readln(String prompt);",
          "public Console format(String format, @Nullable Object... args);",
          "@FormatMethod",
          "public Console format(Locale locale, String format, @Nullable Object... args);",
          "public Console printf(Locale locale, String format, Object... args);",
          "public String readLine(String format, @Nullable Object... args);",
          "@Nullable",
          "public String readLine(Locale locale, String format, @Nullable Object... args);",
          "public char @Nullable [] readPassword(String format, @Nullable Object... args);",
          "public char @Nullable [] readPassword(Locale locale, String format, @Nullable Object... args);"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/ByteArrayOutputStream.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "public void writeTo(OutputStream out) throws IOException;"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/io/PipedOutputStream.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/math/BigInteger.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@Override",
          "@Override",
          "@Override"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/time/Instant.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "public Duration until(Instant endExclusive);"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/System.java": {
      "new_changes": {
        "new_classes": [
          {
            "declaration": "private static class In extends FileInputStream {",
            "methods": [
              "@Override",
              "public int read() throws IOException;",
              "@Override",
              "public int read(byte[] b) throws IOException;",
              "@Override",
              "public int read(byte[] b, int off, int len) throws IOException;"
            ]
          },
          {
            "declaration": "private static class Out extends FileOutputStream {",
            "methods": [
              "public void write(int b) throws IOException;",
              "@Override",
              "public void write(byte[] b) throws IOException;",
              "@Override",
              "public void write(byte[] b, int off, int len) throws IOException;"
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/StringBuilder.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@IntrinsicCandidate"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/AssertionError.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/StringBuffer.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@IntrinsicCandidate"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/Process.java": {
      "new_changes": {
        "new_classes": [
          {
            "declaration": "static class PipeOutputStream extends FileOutputStream {",
            "methods": [
              "@Override",
              "public void write(int b) throws IOException;",
              "@Override",
              "public void write(byte[] b) throws IOException;",
              "@Override",
              "public void write(byte[] b, int off, int len) throws IOException;"
            ]
          }
        ],
        "new_methods": [
          "@Override",
          "public int read() throws IOException;",
          "@Override",
          "public int read(byte[] b) throws IOException;",
          "@Override",
          "public int read(byte[] b, int off, int len) throws IOException;"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/Throwable.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/ClassLoader.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/ExceptionInInitializerError.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/ThreadGroup.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/Thread.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "Interruptible nioBlocker();",
          "void blockedOn(Interruptible b);"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/invoke/MemberName.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "void ensureTypeVisible(Class<?> refc);"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/lang/reflect/Executable.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"doclint:reference\")",
          "@SuppressWarnings(\"doclint:reference\")",
          "@SuppressWarnings(\"doclint:reference\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/DecimalFormat.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")",
          "@SuppressWarnings(\"this-escape\")",
          "@Override",
          "public boolean isStrict();",
          "@Override",
          "public void setStrict(boolean strict);",
          "@Override",
          "public String toString();"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/MessageFormat.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@Override",
          "public String toString();"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/RuleBasedCollator.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/SimpleDateFormat.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "public String toString();",
          "@Override"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/ChoiceFormat.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@Override",
          "public boolean isStrict();",
          "@Override",
          "public void setStrict(boolean strict);",
          "public static double nextDouble(double d, boolean positive);",
          "public String toString();",
          "@Override"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/AttributedString.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/DateFormat.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.base/share/classes/java/text/NumberFormat.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "public boolean isStrict();",
          "public void setStrict(boolean strict);",
          "static String matchToStyle(NumberFormat fmt, Locale locale);",
          "@SuppressWarnings(\"this-escape\")"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.httpserver/share/classes/sun/net/httpserver/UnmodifiableHeaders.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "@Override",
          "public String toString();"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/code/CodeBlob.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "public int getContentOffset();",
          "public int getCodeOffset();"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.hotspot.agent/share/classes/sun/jvm/hotspot/gc/shared/ContiguousSpace.java": {
      "new_changes": {
        "new_classes": [
          {
            "declaration": "public class ContiguousSpace extends VMObject implements LiveRegionsProvider {",
            "methods": [
              "public Address bottom();",
              "public Address end();",
              "public OopHandle bottomAsOopHandle();",
              "public OopHandle nextOopHandle(OopHandle handle, long size);",
              "public void print();"
            ]
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlDocletWriter.java": {
      "new_changes": {
        "new_classes": [
          {
            "declaration": "private class MarkdownHandler {",
            "methods": [
              "boolean handle(DocTree tree, InlineVisitor visitor);",
              "void addContent(Content result);"
            ]
          },
          {
            "declaration": "private class HeadingNodeRenderer extends AbstractVisitor implements NodeRenderer {",
            "methods": [
              "@Override",
              "public Set<Class<? extends Node>> getNodeTypes();",
              "@Override",
              "public void render(Node node);",
              "@Override",
              "public void visit(Heading heading);",
              "@Override",
              "protected void visitChildren(Node parent);"
            ]
          },
          {
            "declaration": "private class InlineVisitor extends SimpleDocTreeVisitor<Boolean, Content> {",
            "methods": [
              "@Override",
              "public Boolean visitAttribute(AttributeTree node, Content content);",
              "@Override",
              "public Boolean visitComment(CommentTree node, Content content);",
              "@Override",
              "public Boolean visitDocRoot(DocRootTree node, Content content);",
              "@Override",
              "public Boolean visitEndElement(EndElementTree node, Content content);",
              "@Override",
              "public Boolean visitEntity(EntityTree node, Content content);",
              "@Override",
              "public Boolean visitErroneous(ErroneousTree node, Content content);",
              "@Override",
              "public Boolean visitEscape(EscapeTree node, Content content);",
              "@Override",
              "public Boolean visitInheritDoc(InheritDocTree node, Content content);",
              "@Override",
              "public Boolean visitStartElement(StartElementTree node, Content content);",
              "@Override",
              "public Boolean visitText(TextTree node, Content content);",
              "@Override",
              "protected Boolean defaultAction(DocTree node, Content content);"
            ]
          }
        ],
        "new_methods": [
          "protected final TableOfContents tableOfContents;",
          "public String getFileTitle(DocFileElement element);",
          "boolean ignoreNonInlineTag(DocTree dtree, List<Name> openTags);"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/Content.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "public boolean isPhrasingContent();"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/HtmlConfiguration.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "public record JavaScriptFile(DocPath path, boolean isModule) {",
          "public List<JavaScriptFile> getAdditionalScripts();"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/taglets/SimpleTaglet.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "static SimpleTaglet createWithDefaultForNested(HtmlConfiguration config, DocTree.Kind tagKind, String header, Set<Taglet.Location> locations, boolean enabled);",
          "protected List<? extends BlockTagTree> getDefaultBlockTags(Element e, Predicate<? super BlockTagTree> accepts);"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/TextBuilder.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "public boolean isPhrasingContent();",
          "@Override"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/Text.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "public boolean isPhrasingContent();",
          "@Override"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/HtmlTree.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "public Map<HtmlAttr, String> getAttrs();",
          "public List<Content> getContents();",
          "public static HtmlTree INPUT(HtmlAttr.InputType type, HtmlId id);",
          "public static HtmlTree INPUT(HtmlAttr.InputType type, HtmlStyle style);",
          "public static HtmlTree OL(HtmlStyle style);",
          "@Override",
          "public boolean isPhrasingContent();"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/RawHtml.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "public static RawHtml markdown(CharSequence markdownOutput);",
          "public boolean isPhrasingContent();",
          "@Override"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/formats/html/markup/ContentBuilder.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "public List<Content> getContents();",
          "@Override",
          "public boolean isPhrasingContent();"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/WorkArounds.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "public Map<String, Object> getJepInfo(String feature);"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/doclets/toolkit/BaseConfiguration.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "protected DocLint doclint;"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.javadoc/share/classes/jdk/javadoc/internal/tool/ElementsTable.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "ElementsTable compilationUnits(com.sun.tools.javac.util.List<JCCompilationUnit> compilationUnits);"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.jlink/share/classes/jdk/tools/jlink/internal/ResourcePoolManager.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "public static CompressedModuleData newCompressedResource(ResourcePoolEntry original, ByteBuffer compressed, String plugin, StringTable strings, ByteOrder order);"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.accessibility/windows/classes/com/sun/java/accessibility/internal/AccessBridge.java": {
      "new_changes": {
        "new_classes": [
          {
            "declaration": "private abstract static class AccessibilityGraphicsEnvironment extends GraphicsEnvironment {",
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/jdk.jshell/share/classes/jdk/internal/jshell/tool/Startup.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "static Startup unpack(String storedForm, boolean preview, MessageHandler mh);",
          "static Startup defaultStartup(boolean preview, MessageHandler mh);"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.desktop/share/classes/java/beans/Beans.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@Deprecated()",
          "@SuppressWarnings({ \"deprecation\", \"removal\" })"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.desktop/share/classes/java/beans/beancontext/BeanContextChildSupport.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@SuppressWarnings(\"removal\")",
          "@Deprecated()"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.desktop/share/classes/javax/swing/plaf/basic/BasicSliderUI.java": {
      "new_changes": {
        "new_classes": [],
        "new_methods": [
          "@Deprecated()"
        ]
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.desktop/share/classes/javax/swing/text/StyleContext.java": {
      "new_changes": {
        "new_classes": [
          {
            "declaration": "static final class KeyEnumeration implements Enumeration<Object> {",
            "methods": []
          },
          {
            "declaration": "static final class FontKey {",
            "methods": []
          }
        ],
        "new_methods": []
      }
    },
    "https://github.com/eisop/jdk/tree/jdk-23/src/java.desktop/share/classes/javax/swing/text/html/HTMLDocument.java": {
      "new_changes": {
        "new_classes": [
          {
            "declaration": "final class ConvertSpanAction extends CharacterAction {",
            "methods": [
              "@Override",
              "void convertAttributes(HTML.Tag t, MutableAttributeSet attr);"
            ]
          },
          {
            "declaration": "final class ConvertAction extends CharacterAction {",
            "methods": [
              "@Override",
              "void convertAttributes(HTML.Tag t, MutableAttributeSet attr);"
            ]
          }
        ],
        "new_methods": [
          "void convertAttributes(HTML.Tag t, MutableAttributeSet attr);"
        ]
      }
    }
  }
}